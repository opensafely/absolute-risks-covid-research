---------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\emsuewil\Documents\Work\Covid\OpenSAFELY\Absolute_risks\absolute-risks-covid-research\logs/001_clean_input_data.l
> og
  log type:  text
 opened on:   8 Feb 2021, 11:17:07

. 
. 
. forvalues i = 1 (1) 2 {
  2. 
.         * Index date
.         if `i'==1 {
  3.             local index_date = "2020-03-01"
  4.         }
  5.         else if `i'==2 {
  6.             local index_date = "2020-09-01"         
  7.         }
  8.         
.         * Display the input parameter (index date for cohort)
.         noi di "`index_date'"
  9.         local index = date(subinstr("`index_date'", "-", "/", .), "YMD")
 10.         
.         * Import data
.         import delimited output/input_`index_date'.csv, clear
 11. 
. 
.         ****************************************
.         *  Create residential care indicators  *
.         ****************************************
.         
.         * Households with 5+ over 65 and 5+ on learning disability register
.         gen tempold = (age>=65)
 12.         replace tempold = . if age>=.
 13.         gen templdr  = (ldr != "")
 14.         
.         bysort household_id: egen num_old = sum(tempold)
 15.         bysort household_id: egen num_ldr = sum(templdr)
 16.         
.         recode num_old 0/4=0 5/max=1, gen(resid_care_old)
 17.         recode num_ldr 0/4=0 5/max=1, gen(resid_care_ldr)
 18.         drop templdr tempold num_old num_ldr
 19.         
.         order resid_care_old resid_care_ldr, after(household_id)
 20.         
.         
.         
.         ****************************
.         *  Create required cohort  *
.         ****************************
. 
.         di "STARTING COUNT FROM IMPORT:"
 21.         noi count
 22. 
.         * Age: Exclude implausibly ages (below zero and above 105)
.         qui summ age // Should be no missing ages
 23.         noi di "DROPPING AGE>105:" 
 24.         drop if age>105
 25.         noi di "DROPPING AGE<0:" 
 26.         drop if age<0
 27.         assert inrange(age, 0, 105)
 28. 
.         * Sex: Exclude categories other than M and F
.         assert inlist(sex, "M", "F", "I", "U")
 29.         noi di "DROPPING GENDER NOT M/F:" 
 30.         drop if inlist(sex, "I", "U")
 31. 
.         * Sustainability and Transformation Partnership (geographic area):
.         *   Exclude if missing
.         noi di "DROPPING IF STP MISSING:"
 32.         drop if stp==""
 33. 
.         * Index of Multiple Deprivation: Exclude if missing 
.         noi di "DROPPING IF NO IMD" 
 34.         capture confirm string var imd 
 35.         if _rc==0 {
 36.                 drop if imd==""
 37.         }
 38.         else {
 39.                 drop if imd>=.
 40.                 drop if imd==-1
 41.         }
 42. 
. 
.         * People who had an event prior to our start date
.         * (this should not occur (much) in the real data)
.         noi di "DROPPING IF DIED BEFORE INDEX DATE" 
 43.         confirm string variable died_date_ons
 44.         gen temp = date(died_date_ons, "YMD")
 45.         drop if temp < `index'
 46.         drop temp
 47. 
. 
. 
. 
.         ***********************************************
.         *  Convert strings to dates (for covariates)  *
.         ***********************************************
. 
.         foreach var of varlist  cf                                                              ///
>                                                         respiratory                                             ///
>                                                         cardiac                                                 ///
>                                                         hypertension                                    ///
>                                                         af                                                              ///
>                                                         dvt_pe                                                  ///
>                                                         pad_surg                                                ///
>                                                         amputate                                                ///
>                                                         diabetes                                                ///
>                                                         tia                                                             ///
>                                                         stroke                                                  ///
>                                                         dementia                                                ///
>                                                         neuro                                                   ///
>                                                         lung_cancer                                     ///
>                                                         haem_cancer                                             ///
>                                                         other_cancer                                    ///
>                                                         liver                                                   ///
>                                                         transplant_notkidney                    ///     
>                                                         transplant_kidney                               ///
>                                                         dialysis                                                ///
>                                                         dysplenia                                               ///
>                                                         sickle_cell                                     ///
>                                                         hiv                                                     ///
>                                                         perm_immuno                                             ///
>                                                         aplastic_anaemia                                ///
>                                                         temp_immuno                                             ///
>                                                         autoimmune                                              ///
>                                                         ibd                                                     ///
>                                                         fracture                                                ///
>                                                         smi                                                     ///
>                                                         ldr                                                             ///
>                                                         ld_profound                                     ///
>                                                         ds                                                              ///
>                                                         cp                                                              ///
>                                                         {
 48.                 capture confirm string variable `var'
 49.                 if _rc!=0 {
 50.                         assert `var'==.
 51.                         rename `var' `var'_date
 52.                 }
 53.                 else {
 54.                         replace `var' = `var' + "-15"
 55.                         rename `var' `var'_dstr
 56.                         replace `var'_dstr = " " if `var'_dstr == "-15"
 57.                         gen `var'_date = date(`var'_dstr, "YMD") 
 58.                         order `var'_date, after(`var'_dstr)
 59.                         drop `var'_dstr
 60.                 }
 61.                 format `var'_date %td
 62.         }
 63. 
. 
. 
. 
. 
. 
.         **********************
.         *  Recode variables  *
.         **********************
. 
. 
.         /*  Demographics  */
. 
.         * Check there are no missing ages
.         assert age<.
 64. 
.         * Sex
.         assert inlist(sex, "M", "F")
 65.         gen male = (sex=="M")
 66.         drop sex
 67. 
. 
.         * Smoking
.         label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"
 68. 
.         gen     smoke = 1  if smoking_status=="N"
 69.         replace smoke = 2  if smoking_status=="E"
 70.         replace smoke = 3  if smoking_status=="S"
 71.         replace smoke = .u if smoking_status=="M"
 72.         replace smoke = .u if smoking_status==""
 73.         label values smoke smoke
 74.         drop smoking_status 
 75. 
. 
. 
.         * Ethnicity (5 category)
.         rename ethnicity ethnicity_5
 76.         replace ethnicity_5 = .u if ethnicity_5==.
 77.         label define ethnicity  1 "White"                                                               ///
>                                                         2 "Mixed"                                                               ///
>                                                         3 "Asian or Asian British"                              ///
>                                                         4 "Black"                                                               ///
>                                                         5 "Other"                                                               ///
>                                                         .u "Unknown"
 78.         label values ethnicity_5 ethnicity
 79. 
.         * Ethnicity (16 category)
.         replace ethnicity_16 = .u if ethnicity_5>=.
 80.         replace ethnicity_16 = .u if ethnicity_16>=.
 81.         label define ethnicity_16                                                                               ///
>                                                         1 "British or Mixed British"                    ///
>                                                         2 "Irish"                                                               ///
>                                                         3 "Other White"                                                 ///
>                                                         4 "White + Black Caribbean"                     ///
>                                                         5 "White + Black African"                               ///
>                                                         6 "White + Asian"                                               ///
>                                                         7 "Other mixed"                                                 ///
>                                                         8 "Indian or British Indian"                    ///
>                                                         9 "Pakistani or British Pakistani"              ///
>                                                         10 "Bangladeshi or British Bangladeshi" ///
>                                                         11 "Other Asian"                                                ///
>                                                         12 "Caribbean"                                                  ///
>                                                         13 "African"                                                    ///
>                                                         14 "Other Black"                                                ///
>                                                         15 "Chinese"                                                    ///
>                                                         16 "Other"                                                              ///
>                                                         .u "Unknown"  
 82.         label values ethnicity_16 ethnicity_16
 83.         drop ethnicity_date ethnicity_16_date
 84. 
. 
. 
.         /* BMI */
. 
. 
.         * For adults
.         replace bmi_adult = . if age<16
 85. 
.         * For children  
.         capture confirm string variable bmi_child_date_measured
 86.         if _rc!=0 {
 87.                 assert bmi_child_date_measured==.
 88.                 rename bmi_child_date_measured bmi_child_date_measured_date
 89.         }
 90.         else {
 91.                 replace bmi_child_date_measured = bmi_child_date_measured + "-15"
 92.                 rename bmi_child_date_measured bmi_child_date_measured_dstr
 93.                 replace bmi_child_date_measured_dstr = " " if bmi_child_date_measured_dstr == "-15"
 94.                 gen bmi_child_date_measured_date = date(bmi_child_date_measured_dstr, "YMD") 
 95.                 order bmi_child_date_measured_date, after(bmi_child_date_measured_dstr)
 96.                 drop bmi_child_date_measured_dstr
 97.         }
 98.         format bmi_child_date_measured_date %td
 99.         replace bmi_child                                        = . if age>=16
100.         replace bmi_child_date_measured_date = . if age>=16
101. 
.         * Combine BMI measurements
.         noi summ bmi_adult bmi_child 
102.         gen     bmi = bmi_adult if age>=16
103.         replace bmi = bmi_child if age<16
104.         replace bmi = . if !inrange(bmi, 15, 50)
105.         order bmi, after(bmi_adult)
106.         drop bmi_adult bmi_child
107. 
. 
. 
.         /*  Geographical location  */
. 
. 
.         * STP 
.         rename stp stpcode
108.         bysort stpcode: gen stp = 1 if _n==1
109.         replace stp = sum(stp)
110.         order stp, after(stpcode)
111. 
.         * Region
.         gen     region_7 = 1 if region=="East"
112.         replace region_7 = 2 if region=="London"
113.         replace region_7 = 3 if region=="East Midlands" 
114.         replace region_7 = 3 if region=="West Midlands"
115.         replace region_7 = 4 if region=="North East" 
116.         replace region_7 = 4 if region=="Yorkshire and The Humber"
117.         replace region_7 = 5 if region=="North West"
118.         replace region_7 = 6 if region=="South East"
119.         replace region_7 = 7 if region=="South West"
120. 
.         label define region_7   1 "East"                                                        ///
>                                                         2 "London"                                                      ///
>                                                         3 "Midlands"                                            ///
>                                                         4 "North East and Yorkshire"            ///
>                                                         5 "North West"                                          ///
>                                                         6 "South East"                                          ///     
>                                                         7 "South West"
121.         label values region_7 region_7
122.         label var region_7 "Region of England (7 regions)"
123.         drop region
124. 
. 
.         *  Rural-urban classification 
.         capture confirm string var rural_urban 
125.         if _rc==0 {
126.                 assert inlist(rural_urban, "rural", "urban", "")
127.                 replace rural_urban = "urban" if !inlist(rural_urban, "rural", "urban")
128. 
.                 gen rural = rural_urban=="rural"
129.                 order rural, after(rural_urban)
130.                 drop rural_urban
131.         }
132.         else {
133.                 recode rural_urban -1 0=.
134.                 bysort stp: egen ru_mode=mode(rural_urban)
135.                 replace rural_urban = ru_mode if rural_urban>=.
136.                 drop ru_mode
137.                 
.                 * Categorise
.                 recode rural_urban 1/4=0 5/8=1, gen(rural)
138.                 order rural, after(rural_urban)
139.                 drop rural_urban
140.         }
141. 
. 
.         *  IMD 
.         rename imd imd_order
142. 
. 
. 
. 
.         /*  Asthma  */
. 
.         label define asthmacat  1 "No"                          ///
>                                                         2 "Yes, no OCS"         ///
>                                                         3 "Yes with OCS"
143. 
.         * Asthma  (coded: 0 No, 1 Yes no OCS, 2 Yes with OCS)
.         rename asthma_severity asthmacat
144.         recode asthmacat 0=1 1=2 2=3
145.         label values asthmacat asthmacat
146. 
. 
. 
. 
.         ************
.         *   eGFR   *
.         ************
. 
.         * Set implausible creatinine values to missing (Note: zero changed to missing)
.         replace creatinine = . if !inrange(creatinine, 20, 3000) 
147. 
.         * Divide by 88.4 (to convert umol/l to mg/dl)
.         gen SCr_adj = creatinine/88.4
148. 
.         gen     min = .
149.         replace min = SCr_adj/0.7       if male==0
150.         replace min = SCr_adj/0.9       if male==1
151.         replace min = min^-0.329        if male==0
152.         replace min = min^-0.411        if male==1
153.         replace min = 1                         if min<1
154. 
.         gen     max = .
155.         replace max = SCr_adj/0.7       if male==0
156.         replace max = SCr_adj/0.9       if male==1
157.         replace max = max^-1.209
158.         replace max = 1                         if max>1
159. 
.         gen     egfr = min*max*141
160.         replace egfr = egfr*(0.993^age)
161.         replace egfr = egfr*1.018 if male==0
162. 
.         replace egfr = . if creatinine==. 
163. 
.         * Delete variables no longer needed
.         drop min max SCr_adj creatinine 
164. 
. 
.          
.                 
.         ****************************************
.         *   Hba1c:  Level of diabetic control  *
.         ****************************************
. 
.         * Set zero or negative to missing
.         replace hba1c_percentage   = . if hba1c_percentage   <= 0
165.         replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
166. 
. 
.         /* Express  HbA1c as percentage  */ 
. 
.         * Express all values as perecentage 
.         noi summ hba1c_percentage hba1c_mmol_per_mol
167.         gen     hba1c_pct = hba1c_percentage 
168.         replace hba1c_pct = (hba1c_mmol_per_mol/10.929) + 2.15  ///
>                                 if hba1c_mmol_per_mol<. 
169. 
.         * Valid % range between 0-20  
.         replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20) 
170.         replace hba1c_pct = round(hba1c_pct, 0.1)
171. 
. 
.         * Delete unneeded variables
.         drop hba1c_percentage hba1c_mmol_per_mol 
172. 
. 
. 
. 
.         ********************************
.         *  Outcomes and survival time  *
.         ********************************
. 
. 
.         /*   Outcomes   */
. 
.         * Format ONS death date
.         confirm string variable died_date_ons
173.         rename died_date_ons died_date_ons_dstr
174.         gen died_date_ons = date(died_date_ons_dstr, "YMD")
175.         format died_date_ons %td
176.         drop died_date_ons_dstr
177. 
.         * Date of Covid death in ONS
.         gen coviddeath_date = died_date_ons if died_ons_covid_flag_any==1
178.         gen otherdeath_date = died_date_ons if died_ons_covid_flag_any!=1
179.         drop died_date_ons
180.         format coviddeath_date otherdeath_date %td
181. 
.         * Delete unneeded variables
.         drop died_ons_covid_flag_any 
182. 
.         * COVID-19 admission
.         confirm string variable covid_admission_date
183.         rename covid_admission_date covid_admission_date_dstr
184.         gen covidadmission_date = date(covid_admission_date_dstr, "YMD")
185.         format covidadmission_date %td
186.         drop covid_admission_date_dstr
187.         
.         * SGSS positive test
.         confirm string variable sgss_first_positive_test_date
188.         gen covidpostest_date = date(sgss_first_positive_test_date, "YMD")
189.         format covidpostest_date %td
190.         drop sgss_first_positive_test_date
191. 
.         
.         
.         
. 
.         *********************
.         *  Label variables  *
.         *********************
. 
. 
.         * Demographics
.         label var patient_id                            "Patient ID"
192.         label var age                                           "Age (years)"
193.         label var male                                          "Male"
194.         label var imd_order                             "Ranking of index of Multiple Deprivation (IMD)"
195.         label var ethnicity_16                          "Ethnicity in 16 categories"
196.         label var ethnicity_5                           "Ethnicity in 5 categories"
197.         label var stp                                           "Sustainability and Transformation Partnership"
198.         label var stpcode                                       "Sustainability and Transformation Partnership"
199.         label var region_7                                      "Geographical region (7 England regions)"
200.         label var rural                                         "Rural/urban binary classification"
201.         label var household_id                          "Household ID"
202.         label var household_size                        "Household size"
203.         label var resid_care_old                        "Residential care, elderly"
204.         label var resid_care_ldr                        "Residential care, learning disability"
205. 
.         label var smoke                                         "Smoking status"
206.         label var bmi                                           "Body Mass Index (BMI, kg/m2)"
207.         label var bmi_child_date_measured_date "Date BMI measured (if age<16)"
208. 
. 
.         * Clinical measurements
.         label var bp_sys                                        "Systolic blood pressure"
209.         label var bp_sys_date                           "Systolic blood pressure, date"
210.         label var bp_dias                                       "Diastolic blood pressure"
211.         label var bp_dias_date                          "Diastolic blood pressure, date"
212.         label var egfr                                          "Estimated globular filtration rate"
213.         label var hba1c_pct                                     "Hba1c percentage"
214.         label var asthmacat                                     "Asthma"
215. 
.         * Dates of comorbidities        
.         label var cf_date                                       "Cystic fibrosis, date"
216.         label var respiratory_date                      "Respiratory disease (excl. asthma), date"
217.         label var cardiac_date                          "Heart disease, date"
218.         label var af_date                                       "Atrial fibrillation, date"
219.         label var dvt_pe_date                           "Deep vein thrombosis/pulmonary embolism, date"
220.         label var pad_surg_date                         "Surgery for peripheral arterial disease, date"
221.         label var amputate_date                         "Limb amputation, date"
222.         label var diabetes_date                         "Diabetes, date"
223.         label var hypertension_date                     "Date of diagnosed hypertension"
224.         label var tia_date                                      "Transient ischemic attack, date"
225.         label var stroke_date                           "Stroke, date"
226.         label var dementia_date                         "Dementia, date"
227.         label var neuro_date                            "Neuro condition other than stroke/dementia, date"      
228.         label var lung_cancer_date                      "Lung cancer, date"
229.         label var other_cancer_date                     "Other cancer, date"
230.         label var haem_cancer_date                      "Haematological malignancy, date"
231.         label var liver_date                            "Liver, date"
232.         label var dialysis_date                         "Dialysis, date"
233.         label var transplant_kidney_date        "Kidney transplant recipient, date"
234.         label var transplant_notkidney_date     "Organ (not kidney) transplant recipient, date"
235.         label var dysplenia_date                        "Dysplenia, date"
236.         label var sickle_cell_date                      "Sickle cell, date"
237.         label var aplastic_anaemia_date         "Aplastic anaemia, date"
238.         label var autoimmune_date                       "RA, SLE, Psoriasis (autoimmune disease), date"
239.         label var hiv_date                                      "HIV, date"
240.         label var perm_immuno_date                      "Conditions causing permanent immunosuppression, date"
241.         label var temp_immuno_date                      "Conditions causing temporary immunosuppression, date"
242.         label var ibd_date                                      "IBD, date"
243.         label var fracture_date                         "Fracture, date"
244.         label var smi_date                                      "Serious mental illness, date"
245.         label var ldr_date                                      "Learning disability register, date"
246.         label var ld_profound_date                      "Profound/severe learning disability, date"
247.         label var ds_date                                       "Down's Syndrome, date"
248.         label var cp_date                                       "Cerebral Palsy, date"
249.          
. 
. 
.         * Outcomes 
.         label var  coviddeath_date                      "Date of ONS COVID-19 death"
250.         label var  otherdeath_date                      "Date of ONS non-COVID-19 death"
251.         label var  covidadmission_date          "Date of COVID-19 hospital admission"
252.         label var  covidpostest_date            "SGSS first positive test"
253. 
.         
. 
.         *********************
.         *  Order variables  *
.         *********************
. 
.         sort patient_id
254.         order   patient_id stp* region_7 imd* rural                                             ///
>                         household* resid_care_old resid_care_ldr                                        ///
>                         age male                                                                                                     
>    ///
>                         bmi* smoke*                                                                                             ///
>                         ethnicity*                                                                                                   
>    /// 
>                         respiratory* asthma* cf* cardiac* diabetes* hba1c*                      ///
>                         bp_sys bp_sys_date bp_dias bp_dias_date                                         ///
>                         hypertension*                                                                                           ///
>                         af* dvt_pe* pad* amputate*                                                                      ///
>                         stroke* dementia* neuro* tia*                                                           ///
>                         lung_cancer* haem_cancer* other_cancer*                                         ///     
>                         transplant_kidney* dialysis* liver* transplant_notkidney*       ///
>                         dysplenia* sickle* hiv* perm* temp* aplastic*                           ///
>                         autoimmune* ibd* smi* fracture*                                                         ///
>                         smi* ld* fracture*                                                                                      ///
>                         coviddeath_date otherdeath_date covidadmission_date                     ///
>                         covidpostest_date
255. 
. 
. 
. 
.                         
. 
.         ***************
.         *  Save data  *
.         ***************
. 
.         sort patient_id
256.         if "`index_date'" == "2020-03-01" {
257.                 label data "Base cohort dataset (wave 1), index date 1st March 2020"
258.                 save "analysis/data_base_cohort1.dta", replace
259.         }
260.         else if "`index_date'" == "2020-09-01" {
261.                 label data "Base cohort dataset (wave 2), index date 1st September 2020"
262.                 save "analysis/data_base_cohort2.dta", replace
263.         }
264. 
. }
- forvalues i = 1 (1) 2 {
- if `i'==1 {
= if 1==1 {
- local index_date = "2020-03-01"
- }
- else if `i'==2 {
= else if 1==2 {
  local index_date = "2020-09-01"
  }
- noi di "`index_date'"
= noi di "2020-03-01"
2020-03-01
- local index = date(subinstr("`index_date'", "-", "/", .), "YMD")
= local index = date(subinstr("2020-03-01", "-", "/", .), "YMD")
- import delimited output/input_`index_date'.csv, clear
= import delimited output/input_2020-03-01.csv, clear
  -------------------------------------------------------------------------------------------------------------------- begin import ---
  - version 12
  - local version : di "version " string(_caller()) ":"
  - gettoken subcmd 0 : 0, parse(" ,")
  - if `"`subcmd'"' == "dbase" {
  = if `"delimited"' == "dbase" {
    `version' ImpDbase `macval(0)'
    }
  - else if `"`subcmd'"' == "delim" {
  = else if `"delimited"' == "delim" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimi" {
  = else if `"delimited"' == "delimi" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimit" {
  = else if `"delimited"' == "delimit" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimite" {
  = else if `"delimited"' == "delimite" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimited" {
  = else if `"delimited"' == "delimited" {
  - `version' ImpDelim `macval(0)'
  = version 16.1: ImpDelim  output/input_2020-03-01.csv, clear
    --------------------------------------------------------------------------------------------------------- begin import.ImpDelim ---
    - version 13
    - local version : di "version " string(_caller()) ":"
    - `version' import_delimited `macval(0)'
    = version 16.1: import_delimited output/input_2020-03-01.csv, clear
      ------------------------------------------------------------------------------------------------------ begin import_delimited ---
      - local ver : display "version " string(_caller()) ", missing:"
      - version 14
      - gettoken filename rest : 0, parse(" ,")
      - gettoken comma : rest, parse(" ,")
      - if (`"`filename'"' != "" & (trim(`"`comma'"') == "," | trim(`"`comma'"') == "")) {
      = if (`"output/input_2020-03-01.csv"' != "" & (trim(`","') == "," | trim(`","') == "")) {
      - local 0 `"using `0'"'
      = local 0 `"using output/input_2020-03-01.csv, clear"'
      - }
      - capture syntax using/ [, DELIMiters(string asis) ROWRange(string) COLRange(string) VARNames(string) case(string) ASDOUBle ASFLO
> at FAVORSTRFixed clear BINDQuotes(string) STRIPQuotes(string) NUMERICCols(string) STRINGCols(string) CHARSET(string) ENCoding(string)
>  PARSELocale(string) GROUPSeparator(string) DECIMALSeparator(string) MAXQUOTEDRows(string) COLLAPSEDelimiters]
      - if _rc {
        syntax [anything(name=vlist id="vlist")] using/ [, DELIMiters(string asis) ROWRange(string) COLRange(string) VARNames(string) c
> ase(string) ASDOUBle ASFLOat FAVORSTRFixed clear BINDQuotes(string) STRIPQuotes(string) NUMERICCols(string) STRINGCols(string) CHARSE
> T(string) ENCoding(string) PARSELocale(string) GROUPSeparator(string) DECIMALSeparator(string) MAXQUOTEDRows(string) COLLAPSEDelimite
> rs]
        }
      - mata:import_delim_import_file()
        --------------------------------------------------------------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ------------------------------------------------------------------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          --------------------------------------------------------------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        ----------------------------------------------------------------------------------------------------------------- end clear ---
        --------------------------------------------------------------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ------------------------------------------------------------------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          --------------------------------------------------------------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        ----------------------------------------------------------------------------------------------------------------- end clear ---
(63 vars, 1,000 obs)
      - return add
      -------------------------------------------------------------------------------------------------------- end import_delimited ---
    ----------------------------------------------------------------------------------------------------------- end import.ImpDelim ---
  - }
  - else if `"`subcmd'"' == "exc" {
  = else if `"delimited"' == "exc" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "exce" {
  = else if `"delimited"' == "exce" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "excel" {
  = else if `"delimited"' == "excel" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "fred" {
  = else if `"delimited"' == "fred" {
    ImpFred `macval(0)'
    }
  - else if `"`subcmd'"' == "hav" {
  = else if `"delimited"' == "hav" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "have" {
  = else if `"delimited"' == "have" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "haver" {
  = else if `"delimited"' == "haver" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "sas" {
  = else if `"delimited"' == "sas" {
    ImpSas `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport5" {
  = else if `"delimited"' == "sasxport5" {
    ImpSasxport5 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport8" {
  = else if `"delimited"' == "sasxport8" {
    ImpSasxport8 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport" {
  = else if `"delimited"' == "sasxport" {
    if (_caller() < 16) {
    ImpSasxport5 `macval(0)'
    }
    else {
    di as error "invalid syntax"
    di as error "   specify either {cmd:import sasxport5} or {cmd:import sasxport8}"
    exit 198
    }
    }
  - else if `"`subcmd'"' == "shp" {
  = else if `"delimited"' == "shp" {
    ImpShape `macval(0)'
    }
  - else if `"`subcmd'"' == "spss" {
  = else if `"delimited"' == "spss" {
    ImpSpss `macval(0)'
    }
  - else {
    display as error `"import: unknown subcommand "`subcmd'""'
    exit 198
    }
  ---------------------------------------------------------------------------------------------------------------------- end import ---
- gen tempold = (age>=65)
- replace tempold = . if age>=.
(0 real changes made)
- gen templdr = (ldr != "")
- bysort household_id: egen num_old = sum(tempold)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"num_old"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable num_old
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gsum.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gsum.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gsum.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"tempold"' == "_all" | `"tempold"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(household_id)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname num_old
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("sum","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gsum float __000001 = (tempold)   , by(household_id) 
    ------------------------------------------------------------------------------------------------------------------- begin _gsum ---
    - _gtotal `0'
    = _gtotal float __000001 = (tempold)   , by(household_id) 
      --------------------------------------------------------------------------------------------------------------- begin _gtotal ---
      - version 16.1, missing
      - syntax newvarname =/exp [if/] [in] [, BY(varlist) Missing ]
      - global EGEN_Message 1
      - if (`"`if'"' != "") {
      = if (`""' != "") {
        local ifif `"if `if'"'
        local andif `"& (`if')"'
        local timesif `"(`if')*"'
        }
      - tempvar x
      - if ("`by'" == "") {
      = if ("household_id" == "") {
        _expression_to_variable `exp' `in', varname(`x')
        local x `s(varname)'
        summarize `x' `ifif' `in', meanonly
        if ("`missing'" != "" & r(N) == 0) {
        gen `typlist' `varlist' = .
        }
        else {
        gen `typlist' `varlist' = r(sum) `ifif' `in'
        }
        }
      - else {
      - if ("`in'" != "") {
      = if ("" != "") {
        marksample touse, novarlist
        local ifif if `touse'
        local andif & `touse'
        local timesif `touse'*
        }
      - sort `by'
      = sort household_id
      - if ("`missing'" != "") {
      = if ("" != "") {
        qui by `by': gen double `x' = cond(sum((`exp') < . `andif') > 0, sum(`timesif'(`exp')), .)
        }
      - else {
      - qui by `by': gen double `x' = sum(`timesif'(`exp'))
      = qui by household_id: gen double __000002 = sum(((tempold)   ))
      - }
      - by `by': gen `typlist' `varlist' = `x'[_N] `ifif'
      = by household_id: gen float __000001 = __000002[_N] 
      - }
      ----------------------------------------------------------------------------------------------------------------- end _gtotal ---
    --------------------------------------------------------------------------------------------------------------------- end _gsum ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 1
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "1" == "" {
    quietly count if missing(`dummy')
    if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
    }
  - rename `dummy' `name'
  = rename __000001 num_old
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- bysort household_id: egen num_ldr = sum(templdr)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"num_ldr"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable num_ldr
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gsum.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gsum.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gsum.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"templdr"' == "_all" | `"templdr"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(household_id)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname num_ldr
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("sum","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gsum float __000001 = (templdr)   , by(household_id) 
    ------------------------------------------------------------------------------------------------------------------- begin _gsum ---
    - _gtotal `0'
    = _gtotal float __000001 = (templdr)   , by(household_id) 
      --------------------------------------------------------------------------------------------------------------- begin _gtotal ---
      - version 16.1, missing
      - syntax newvarname =/exp [if/] [in] [, BY(varlist) Missing ]
      - global EGEN_Message 1
      - if (`"`if'"' != "") {
      = if (`""' != "") {
        local ifif `"if `if'"'
        local andif `"& (`if')"'
        local timesif `"(`if')*"'
        }
      - tempvar x
      - if ("`by'" == "") {
      = if ("household_id" == "") {
        _expression_to_variable `exp' `in', varname(`x')
        local x `s(varname)'
        summarize `x' `ifif' `in', meanonly
        if ("`missing'" != "" & r(N) == 0) {
        gen `typlist' `varlist' = .
        }
        else {
        gen `typlist' `varlist' = r(sum) `ifif' `in'
        }
        }
      - else {
      - if ("`in'" != "") {
      = if ("" != "") {
        marksample touse, novarlist
        local ifif if `touse'
        local andif & `touse'
        local timesif `touse'*
        }
      - sort `by'
      = sort household_id
      - if ("`missing'" != "") {
      = if ("" != "") {
        qui by `by': gen double `x' = cond(sum((`exp') < . `andif') > 0, sum(`timesif'(`exp')), .)
        }
      - else {
      - qui by `by': gen double `x' = sum(`timesif'(`exp'))
      = qui by household_id: gen double __000002 = sum(((templdr)   ))
      - }
      - by `by': gen `typlist' `varlist' = `x'[_N] `ifif'
      = by household_id: gen float __000001 = __000002[_N] 
      - }
      ----------------------------------------------------------------------------------------------------------------- end _gtotal ---
    --------------------------------------------------------------------------------------------------------------------- end _gsum ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 1
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "1" == "" {
    quietly count if missing(`dummy')
    if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
    }
  - rename `dummy' `name'
  = rename __000001 num_ldr
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- recode num_old 0/4=0 5/max=1, gen(resid_care_old)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"num_old 0/4=0 5/max=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : num_old, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist num_old
    - local n : word count `varlist'
    = local n : word count num_old
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var num_old
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0/4=0 5/max=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"resid_care_old"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"resid_care_old"' != "" {
  - confirm new var `generate'
  = confirm new var resid_care_old
  - local nnew : word count `generate'
  = local nnew : word count resid_care_old
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "resid_care_old" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir resid_care_old
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir resid_care_old
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label resid_care_old
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0/4=0 5/max=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 0
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(0) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 0 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = num_old if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type num_old
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ num_old if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "4" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(num_old) >= float(0) & float(num_old) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_old) >= float(0) & float(num_old) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(num_old) >= float(5) & float(num_old) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_old) >= float(5) & float(num_old) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(num_old) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "resid_care_old" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"resid_care_old"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of resid_care_old
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(367 differences between num_old and resid_care_old)"
(367 differences between num_old and resid_care_old)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "resid_care_old" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of resid_care_old
  - gen `g' = `NEW`iv''
  = gen resid_care_old = __000003
  - recast `vntype`iv'' `g'
  = recast float resid_care_old
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize resid_care_old
    - local stop : word count `varlist'
    = local stop : word count resid_care_old
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = resid_care_old
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if resid_care_old~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label resid_care_old
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format resid_care_old
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label resid_care_old
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename resid_care_old __000005
    - move `RECAST' ``i''
    = move __000005 resid_care_old
    - drop ``i''
    = drop resid_care_old
    - rename `RECAST' ``i''
    = rename __000005 resid_care_old
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label num_old
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var resid_care_old `"RECODE of num_old"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var resid_care_old `"RECODE of num_old"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- recode num_ldr 0/4=0 5/max=1, gen(resid_care_ldr)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"num_ldr 0/4=0 5/max=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : num_ldr, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist num_ldr
    - local n : word count `varlist'
    = local n : word count num_ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var num_ldr
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0/4=0 5/max=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"resid_care_ldr"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"resid_care_ldr"' != "" {
  - confirm new var `generate'
  = confirm new var resid_care_ldr
  - local nnew : word count `generate'
  = local nnew : word count resid_care_ldr
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "resid_care_ldr" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir resid_care_ldr
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir resid_care_ldr
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label resid_care_ldr
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0/4=0 5/max=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 0
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(0) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 0 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = num_ldr if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type num_ldr
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ num_ldr if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "3" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(num_ldr) >= float(0) & float(num_ldr) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_ldr) >= float(0) & float(num_ldr) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(num_ldr) >= float(5) & float(num_ldr) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_ldr) >= float(5) & float(num_ldr) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(num_ldr) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "resid_care_ldr" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"resid_care_ldr"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of resid_care_ldr
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(390 differences between num_ldr and resid_care_ldr)"
(390 differences between num_ldr and resid_care_ldr)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "resid_care_ldr" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of resid_care_ldr
  - gen `g' = `NEW`iv''
  = gen resid_care_ldr = __000003
  - recast `vntype`iv'' `g'
  = recast float resid_care_ldr
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize resid_care_ldr
    - local stop : word count `varlist'
    = local stop : word count resid_care_ldr
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = resid_care_ldr
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if resid_care_ldr~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label resid_care_ldr
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format resid_care_ldr
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label resid_care_ldr
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename resid_care_ldr __000005
    - move `RECAST' ``i''
    = move __000005 resid_care_ldr
    - drop ``i''
    = drop resid_care_ldr
    - rename `RECAST' ``i''
    = rename __000005 resid_care_ldr
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label num_ldr
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var resid_care_ldr `"RECODE of num_ldr"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var resid_care_ldr `"RECODE of num_ldr"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- drop templdr tempold num_old num_ldr
- order resid_care_old resid_care_ldr, after(household_id)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"household_id"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"household_id"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"household_id"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dem
> entia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv 
> perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1
> c_mmol_per_mol hba1c_percentage asthma_severity patient_id resid_care_old resid_care_ldr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id resid_care_old resid_care_ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 65>=1 & 65<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "household_id" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 48 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension st
> roke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_c
> ell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urba
> n stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_d
> ias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-household_id
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dem
> entia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv 
> perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 48>=1 & 48<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dementia neu
> ro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immu
> no temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd 
> household_id resid_care_old resid_care_ldr
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"household_id"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"household_id"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- di "STARTING COUNT FROM IMPORT:"
STARTING COUNT FROM IMPORT:
- noi count
  1,000
- qui summ age
- noi di "DROPPING AGE>105:"
DROPPING AGE>105:
- drop if age>105
(0 observations deleted)
- noi di "DROPPING AGE<0:"
DROPPING AGE<0:
- drop if age<0
(0 observations deleted)
- assert inrange(age, 0, 105)
- assert inlist(sex, "M", "F", "I", "U")
- noi di "DROPPING GENDER NOT M/F:"
DROPPING GENDER NOT M/F:
- drop if inlist(sex, "I", "U")
(0 observations deleted)
- noi di "DROPPING IF STP MISSING:"
DROPPING IF STP MISSING:
- drop if stp==""
(0 observations deleted)
- noi di "DROPPING IF NO IMD"
DROPPING IF NO IMD
- capture confirm string var imd
- if _rc==0 {
  drop if imd==""
  }
- else {
- drop if imd>=.
(0 observations deleted)
- drop if imd==-1
(0 observations deleted)
- }
- noi di "DROPPING IF DIED BEFORE INDEX DATE"
DROPPING IF DIED BEFORE INDEX DATE
- confirm string variable died_date_ons
- gen temp = date(died_date_ons, "YMD")
(800 missing values generated)
- drop if temp < `index'
= drop if temp < 21975
(0 observations deleted)
- drop temp
- foreach var of varlist cf respiratory cardiac hypertension af dvt_pe pad_surg amputate diabetes tia stroke dementia neuro lung_cancer
>  haem_cancer other_cancer liver transplant_notkidney transplant_kidney dialysis dysplenia sickle_cell hiv perm_immuno aplastic_anaemi
> a temp_immuno autoimmune ibd fracture smi ldr ld_profound ds cp {
- capture confirm string variable `var'
= capture confirm string variable cf
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cf = cf + "-15"
variable cf was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename cf cf_dstr
  =struct rename_peldf {
  =        string scalar        element
  =        real scalar  elementtype
  =        real scalar            arg
  =        real scalar            match
  =struct rename_patterndf {
  =        real scalar  patterntype
  =        string scalar            original
  =        struct rename_peldf rowvector          ellist
  =        real rowvector            n_of
  =        string rowvector            varnames
  =        string matrix            pieces
  =struct rename_optiondf {
  =        real scalar       isrecase
  =        real scalar       isrecase_upper, isrecase_lower, isrecase_proper
  =        real scalar       isdryrun
  =        real scalar       isrenumber, isaddnumber
  =        real scalar            from
  =        real scalar       issort
  =        real scalar       isdebug
  =        real scalar       istest
  =        real scalar       isr
  =void rename_optiondf_init(struct rename_optiondf scalar option)
  =        option.isrecase = option.isdryrun = 0
  =                                option.isrecase_proper = 0
  =        option.isrenumber = option.isaddnumber = 0
  =        option.issort     = 0
  =        option.isdebug    = 0
  =        option.istest     = 0
  =        option.isr        = 0
  =struct rename_renamedf {
  =        struct rename_patterndf rowvector      oldplist
  =        struct rename_patterndf rowvector      newplist
  =        struct rename_optiondf scalar       option
  =void rename_cmd(string scalar thirdarg)
  =        string scalar    input
  =real scalar can_do_fast(string scalar input)
  =        string rowvector    token
  =        real scalar    rc
  =        if (length(token)!=2) return(0)
  =        if (!st_isname(token[1])) return(0)
  =        if (!st_isname(token[2])) return(0)
  =        if (token[1] == token[2]) return(0)
  =        return(1)
  =void rename_cmd_u(string scalar input)
  =        struct rename_renamedf scalar       ren
  =                dump_pattern(ren.oldplist, "old after parsing", 0)
  =                dump_pattern(ren.newplist, "new after parsing", 0)
  =void xeq_old_to_new(struct rename_renamedf scalar ren)
  =                dump_pattern(ren.oldplist, "old after linkage", 0)
  =                dump_pattern(ren.newplist, "new after linkage", 0)
  =                dump_pattern(ren.oldplist, "old final", 1)
  =                dump_pattern(ren.newplist, "new final", 1)
  =void xeq_recase(struct rename_renamedf scalar ren)
  =        fillin_old_varnames(ren.oldplist, ren.newplist, 0)
  =                dump_pattern(ren.oldplist, "old final", 1)
  =                dump_pattern(ren.newplist, "new final", 1)
  =void parse_cmd(struct rename_renamedf scalar ren, string scalar input)
  =        real scalar            c
  =        string scalar            lhs, ops
  =        string scalar            oldnames, newnames
  =        parse_cmd_pat_els(ren.oldplist, oldnames, 0)
  =                parse_cmd_pat_els(ren.newplist, newnames, 1)
  =real scalar parse_cmd_commaloc(string scalar s)
  =        real scalar    i, L
  =        real scalar    nestlev
  =        string scalar    c
  =void getarg(string scalar input, string scalar arg, string scalar rest)
  =        real scalar    L, npar, i
  =        string scalar    c
  =void parse_cmd_options(struct rename_optiondf scalar option, string scalar ops)
  =        string scalar            token
  =        transmorphic      t
  =        rename_optiondf_init(option)
  =void confirm_options_consistent(struct rename_optiondf scalar option)
  =        string rowvector    list
  =void parse_cmd_options_u(struct rename_optiondf scalar option, string scalar token, transmorphic t)
  =real scalar parse_cmd_options_u_std(struct rename_optiondf scalar option, string scalar source)
  =        real scalar    l
  =                option.isdebug = 1
  =                option.isdryrun = 1
  =                option.isrecase = option.isrecase_lower = 1
  =                option.isrecase = option.isrecase_proper= 1
  =                option.isr = 1
  =                option.issort = 1
  =                option.istest = 1
  =                option.isrecase = option.isrecase_upper = 1
  =        else    return(0)
  =        return(1)
  =real scalar parse_cmd_options_u_number(struct rename_optiondf scalar option, string scalar source,
  =                                                                transmorphic t)
  =        string scalar            token
  =        real scalar            from
  =        real scalar            l
  =        string scalar            op
  =        if (option.isrenumber | option.isaddnumber)  return(0)
  =                option.isrenumber = 1
  =                option.isaddnumber = 1
  =                return(1)
  =        return(1)
  =void parse_cmd_pat_els(struct rename_patterndf rowvector pat, string scalar toparse, real pattype)
  =        string scalar            token, curlist
  =        transmorphic      t
  =        real scalar       first
  =        first   = 1
  =                                first    = 1
  =                                first   = 0
  =void parse_cmd_pat_el(struct rename_patterndf rowvector pat, string scalar token, real pattype)
  =        string scalar            mytoken
  =        struct rename_patterndf scalar      mypat
  =        real scalar            i, j
  =        real matrix            found
  =        mypat.n_of        = J(1, (8), 0)
  =        confirm_not_empty(mytoken, pattype==0 ?
  =                if (i=strpos(mytoken, "*")) found = (found \ (i, (3)))
  =                if (i=strpos(mytoken, "?")) found = (found \ (i, (4) ))
  =                if (i=strpos(mytoken, "#")) found = (found \ (i, (5)))
  =                if (i=strpos(mytoken, "(")) found = (found \ (i, (6)))
  =                if (i=strpos(mytoken, "=")) found = (found \ (i, (7)))
  =                if (i=strpos(mytoken, ".")) found = (found \ (i, (8)))
  =                        if (i==(3)) {
  =                        else if (i==(4)) {
  =                        else if (i==(5)) {
  =                        else if (i==(6)) {
  =                        else if (i==(7)) {
  =                        else if (i==(8)) {
  =string scalar set_subscript(struct rename_patterndf scalar pat, string scalar token, real pt)
  =        real scalar    i
  =        string scalar    c
  =        if (pt != 1) {
  =        if (pt != 1)              return(token)
  =void set_pat_ETstrlist(struct rename_patterndf scalar pat, string scalar token)
  =        struct rename_peldf scalar          el
  =        el.elementtype = (1)
  =        pat.n_of[(1)] = pat.n_of[(1)] + 1
  =string scalar set_pat_str(struct rename_patterndf scalar pat, string scalar token)
  =        struct rename_peldf scalar          el
  =        el.elementtype = (2)
  =string scalar set_pat_ETstar(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        if (pat.patterntype == 0 && length(pat.ellist)) {
  =                if (pat.ellist[length(pat.ellist)].elementtype == (3)) {
  =        el.elementtype = (3)
  =string scalar set_pat_ETnum_v(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        if (pat.patterntype == 0 && length(pat.ellist)) {
  =                if (pat.ellist[length(pat.ellist)].elementtype == (5)) {
  =        el.elementtype = (5)
  =string scalar set_pat_ETeq(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        if (pat.patterntype == 0) {
  =        el.elementtype = (7)
  =string scalar set_pat_ETodot(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        if (pat.patterntype == 0) {
  =        el.elementtype = (8)
  =string scalar set_pat_ETqm(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar  el
  =        el.elementtype = (4)
  =string scalar set_pat_ETnum_f(struct rename_patterndf scalar pat, string scalar token, real scalar loc)
  =        struct rename_peldf scalar          el
  =        real scalar            j
  =        el.elementtype = (6)
  =        if (el.arg > 10) {
  =void make_patternlist_lengths_equal(struct rename_renamedf scalar ren)
  =void build_recase_newpattern(struct rename_renamedf scalar ren)
  =        real scalar    i
  =        ren.newplist = rename_patterndf(length(ren.oldplist))
  =                ren.newplist[i].n_of        = J(1, (8), 0)
  =void link_patterns(struct rename_renamedf scalar ren)
  =        real scalar    i, jn
  =real scalar check_and_fix_ETnum(struct rename_patterndf scalar newp, struct rename_optiondf scalar option)
  =        real scalar            n, j, jn
  =        real scalar  tt
  =                if (tt==(5) | tt==(6)) {
  =                                (tt==(5) ? (9) : (10))
  =struct rename_linklocdf {
  =        real scalar    j_old, last_sequential_j_old
  =        real scalar    j_new
  =        real scalar    jn
  =        real rowvector    mapsub
  =void rename_linklocdf_init(struct rename_linklocdf scalar ll, real scalar jn)
  =void rename_linklocdf_next(struct rename_linklocdf scalar ll, struct rename_patterndf scalar oldp, struct rename_patterndf scalar ne
> wp)
  =        real scalar subscr
  =real scalar map_subscript(real scalar subscr, real rowvector mapsub, struct rename_patterndf scalar oldp, struct rename_patterndf sc
> alar newp)
  =void link_patterns_u(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar jn)
  =        struct rename_linklocdf scalar      ll
  =        rename_linklocdf_init(ll, jn)
  =        rename_linklocdf_next(ll, oldp, newp)
  =                rename_linklocdf_next(ll, oldp, newp)
  =real rowvector pelidx_of_wcidx(struct rename_patterndf scalar oldp)
  =        real rowvector            toret
  =        real scalar            i
  =        real scalar  tt
  =                if (tt!=(1) & tt!=(2)) toret = (toret, i)
  =void confirm_wildcards_link(struct rename_patterndf scalar oldp, real scalar j_old,
  =                            struct rename_patterndf scalar newp, real scalar j_new)
  =        real scalar  tt_old, tt_new
  =        if (tt_new == (3)) return
  =        if (tt_new == (8))  return
  =        if (tt_new == (4)) {
  =                if (tt_old == (4)) return
  =        if (tt_new==(5) | tt_new==(6)) {
  =                if (tt_old==(5) | tt_old==(6)) return
  =string scalar printable_wildcard(struct rename_peldf scalar el)
  =        real scalar  tt
  =        if (tt == (3))  return("*")
  =        if (tt == (4))    return("?")
  =        if (tt == (8))  return(".")
  =        if (tt == (5)) return("#")
  =        if (tt == (6)) return("(" + el.arg*"*" + ")")
  =real scalar count_wildcards(struct rename_patterndf scalar pat)
  =        return(pat.n_of[(3)]  +
  =               pat.n_of[(4)]    +
  =               pat.n_of[(5)] +
  =               pat.n_of[(6)] +
  =               pat.n_of[(8)])
  =real scalar is_wildcard(real scalar tt)
  =        return( tt == (3)  |
  =                tt == (4)    |
  =                tt == (5) |
  =                tt == (6) |
  =                tt == (9) |
  =                tt == (10) |
  =                tt == (8)  )
  =real scalar find_next_wildcard(struct rename_peldf rowvector d, real scalar j0)
  =        real scalar    j
  =void fillin_old_varnames(struct rename_patterndf rowvector oldplist, struct rename_patterndf rowvector newplist,
  =                                                        real scalar issort)
  =        real scalar    i
  =        string scalar    tmpname
  =void fillin_old_varnames_u(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp,
  =                                        real scalar issort, string scalar tmpname)
  =        string rowvector            varnames, piece
  =        real scalar            i, n, nvars, nels
  =        string matrix            pieces
  =        real scalar  tt
  =        real scalar       filter_varlist, fillin_pieces
  =        filter_varlist = (oldp.n_of[(5)] + oldp.n_of[(6)] != 0)
  =        fillin_pieces  = (newp.n_of[(5)] + newp.n_of[(6)] +
  =                          newp.n_of[(3)]  + newp.n_of[(4)]    != 0)
  =        if (issort) fillin_pieces = 1
  =                        if (tt==(3) | tt==(4)) {
  =string scalar varlistpattern(struct rename_peldf rowvector ellist)
  =        real scalar    j
  =        string scalar    result
  =        if (ellist[1].elementtype == (1)) return(ellist[1].element)
  =string scalar varlist_el(struct rename_peldf scalar el)
  =        if (el.elementtype == (2))    return(el.element)
  =        if (el.elementtype == (3))   return("*")
  =        if (el.elementtype == (4))     return("?")
  =        if (el.elementtype == (5))  return("?*")
  =        if (el.elementtype == (6))  return(el.arg*"?")
  =struct rename_matchdf {
  =        real scalar    j0, j1
  =        real scalar    i0, i1
  =        string scalar    name
  =        string rowvector    pieces
  =real scalar matchvarname(string rowvector pieces, struct rename_peldf rowvector ellist, string scalar name)
  =        struct rename_matchdf scalar        m
  =                if (ellist[1].elementtype==(1)) {
  =                        return(1)
  =        if (!match_step(m, ellist)) return(0)
  =        return(1)
  =void match_setup(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, string scalar name)
  =real scalar match_step(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        real scalar            lefttomatch
  =        real scalar      mr
  =        real scalar     r
  =                if ((r=match_query_done(m))!=(-1)) return(r)
  =                if (match_simplification(m, ellist)==-1) return(0)
  =                if ((r=match_query_done(m))!=(-1)) return(r)
  =                        if (match_step_1(m, ellist)==-1) return(0)
  =                        if ((r=match_query_done(m))!=(-1)) return(r)
  =                        return(0)
  =                        if (mr==-1 | mr==0) return(0)
  =                        if (mr==-1 | mr==0) return(0)
  =real scalar match_step_1(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        if (ellist[m.j0].elementtype==(3)) {
  =        return(-1)
  =real scalar match_step_2(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        if (ellist[m.j0+1].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 0))
  =        return(-1)
  =real scalar match_step_3p(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        real scalar    j
  =        if (ellist[m.j0].elementtype==(3)) {
  =                if (ellist[j].elementtype==(3)) {
  =                if (ellist[j].elementtype==(5)) {
  =                        return(match_ETnum_v(m, ellist, 0))
  =        if (ellist[m.j0].elementtype==(5)) {
  =                return(match_ETnum_v(m, ellist, 1))
  =        return(-1)
  =real scalar match_query_done(struct rename_matchdf scalar m)
  =                if (m.i0 < m.i1) return(0)
  =                return(1)
  =        return((-1))
  =real scalar match_simplification(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        real scalar      mr
  =        while ((m.i1 >m.i0 & m.j1> m.j0)) {
  =                mr = match_fixed(m, ellist, 1)
  =                if (mr==-1) return(-1)
  =                if (mr==0)   break
  =        while ((m.i1 >m.i0 & m.j1> m.j0)) {
  =                mr = match_fixed(m, ellist, 0)
  =                if (mr==-1) return(-1)
  =                if (mr==0)   break
  =real scalar match_fixed(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, real scalar s)
  =        real scalar    j
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype==(2))   return(match_ETstr(m, ellist, s))
  =        if (ellist[j].elementtype==(6)) return(match_ETnum_f(m, ellist, s))
  =        if (ellist[j].elementtype==(4))    return(match_ETqm(m, ellist, s))
  =        return(0)
  =real scalar match_ETstr(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, real scalar s)
  =        real scalar    j, len
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (2)) return(0)
  =        if ((s==1 ?  usubstr(m.name, m.i0, len) :
  =                return(-1)
  =        return(1)
  =real scalar match_ETnum_f(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, real scalar s)
  =        real scalar    j, i, len
  =        string scalar    str, c
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (6)) return(0)
  =        str = (s==1 ?  usubstr(m.name, m.i0, len) : usubstr(m.name, -len, .))
  =        if (ustrlen(str)!=len) return(-1)
  =                if (c<"0" | c>"9") return(-1)
  =        return(1)
  =real scalar match_ETqm(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, real scalar s)
  =        if (ellist[s==1 ? m.j0 : m.j1-1].elementtype != (4)) {
  =                return(0)
  =        if (m.i0==m.i1) return(-1)
  =        return(1)
  =real scalar match_ETnum_v(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, real scalar s)
  =        real scalar            j, i0, i1, len
  =        string scalar            c
  =        string scalar            c1
  =        struct rename_matchdf scalar        hold
  =        j = (s==1 ? m.j0 : m.j1-1)
  =        if (ellist[j].elementtype != (5)) return(0)
  =        if (s==1) {
  =                if (match_step(m, ellist)==1) return(1)
  =        return(-1)
  =real scalar match_ETstar_left(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist)
  =        real scalar            len, newlen
  =        struct rename_matchdf scalar        hold
  =        real scalar       next_is_ETnum_v
  =        if (ellist[m.j0].elementtype != (3)) return(0)
  =                post_match_piece(m, 1, len)
  =                return(1)
  =        next_is_ETnum_v = (ellist[m.j0+1].elementtype==(5))
  =                post_match_piece(m, 1, len)
  =                if (match_step(m, ellist)==1) {
  =                                        post_match_piece(m, 1, newlen)
  =                        return(1)
  =        return(-1)
  =real scalar mstargiveback(string scalar s)
  =        real scalar    l
  =        string scalar    c
  =        string scalar    c1
  =void post_match_piece(struct rename_matchdf scalar m, real scalar s, real scalar len)
  =        if (s==1) {
  =void sort_old_varnames(struct rename_renamedf scalar ren)
  =        real scalar i
  =void sort_appropriate_field(struct rename_patterndf rowvector oldplist, struct rename_patterndf rowvector newplist)
  =        real scalar            i
  =        real scalar            j
  =real scalar j_of_renumber(struct rename_patterndf scalar plist)
  =        real scalar            j
  =        real scalar  tt
  =                if (tt==(9) | tt==(10)) return(j)
  =real scalar j_of_number(struct rename_patterndf scalar plist)
  =        real scalar            j, jtoret
  =        real scalar  tt
  =                if (tt==(3) | tt==(4) | tt==(5) | tt==(6)) {
  =void sort_on_field(struct rename_patterndf scalar plist, real scalar j)
  =        real scalar  tt
  =        real colvector            o
  =        string colvector            vc
  =                if (tt==(5) | tt==(6)) {
  =void fillin_new_varnames_recase(struct rename_renamedf scalar ren)
  =        real scalar    i
  =void fillin_new_varnames(struct rename_patterndf rowvector oldplist, struct rename_patterndf rowvector newplist, real scalar from)
  =        real scalar    i
  =void fillin_new_varnames_u(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar from)
  =        real scalar    i
  =        if (newp.ellist[1].elementtype==(1)) {
  =void fillin_new_varnames_u_u(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar from, real scalar
>  i)
  =        real scalar            j
  =        string scalar            name
  =        real scalar  tt
  =                if (tt==(2)) {
  =                else if (tt==(3)) {
  =                else if (tt==(4)) {
  =                else if (tt==(5)) {
  =                else if (tt==(6)) {
  =                else if (tt==(7)) {
  =                else if (tt==(9)) {
  =                else if (tt==(10)) {
  =                else if (tt != (8)) {
  =string scalar fmt_ETnum_f(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar i, real scalar j)
  =        real scalar    n, len
  =        string scalar    res, orig
  =string scalar fmt_ETnum_f_r(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar j, real scalar fro
> m)
  =        real scalar    n, len
  =        string scalar res
  =string matrix build_toren(struct rename_patterndf rowvector oldplist, struct rename_patterndf rowvector newplist)
  =        string matrix    toren
  =        real scalar    i, N, n, k, k2
  =        real colvector    toselect
  =        string rowvector    lastrow, newrow
  =        real scalar hasomissions
  =                                hasomissions = 1
  =void perform_renames(string matrix toren, struct rename_optiondf scalar option)
  =        real scalar       use_intermediary
  =        string matrix            toren_nonulls
  =                        perform_dryrun(toren, toren_nonulls, 0)
  =void confirm_newnames_new(string matrix toren)
  =        real scalar    i
  =        real rowvector    varnum
  =        string rowvector    tocheck, badvar
  =void perform_set_r(string matrix toren)
  =void perform_test(string matrix toren, real scalar use_intermediary)
  =        real scalar    i
  =void perform_rename_straight(string matrix toren)
  =        real scalar    i
  =        real scalar    breakstatus
  =void perform_rename_intermediary(string matrix toren)
  =        real scalar    i
  =        real scalar    breakstatus
  =        string rowvector    tmpname
  =void perform_dryrun(string matrix toren, string matrix toren_nonulls, real scalar use_intermediary)
  =        real scalar    i
  =        real scalar    maxlen
  =        string scalar    sfmt, sfmtit
  =void dryrun_note1(string matrix toren, string matrix toren_nonulls)
  =        real scalar    i
  =        real scalar    nulls
  =void dryrun_note2(string matrix toren, real scalar use_intermediary)
  =        string colvector    dupnames, newname, oldname
  =real scalar names_not_jointly_unique(string matrix toren)
  =        real scalar    n0, n1
  =        string colvector    fulllist
  =void confirm_names_unique(string matrix toren)
  =void confirm_names_unique_1(string matrix toren, real scalar j)
  =        string colvector    names, corresponding
  =        string scalar    s
  =        real scalar    n
  =string colvector corresponding_names(string matrix toren, string scalar name, real scalar js, real scalar jd)
  =        real scalar    i
  =        string colvector    dups
  =void confirm_new_varnames_valid(string matrix toren)
  =        real scalar    i, n
  =        real colvector    bad
  =void confirm_not_empty(string scalar str, string scalar expected)
  =void errprint_bf_list(string vector list , |real scalar USER_MAXEL)
  =        real scalar            MAXEL
  =        real scalar            i, top
  =        real scalar       chopped
  =                        chopped = 1
  =                        chopped = 0
  =void errprint_bf_string(string scalar user_s, |real scalar USER_MAXLEN)
  =        real scalar            MAXLEN
  =        real scalar            len_last, target_last
  =        real scalar            len_remaining
  =        real scalar            i
  =        string rowvector            els
  =        string scalar            s, first, last
  =        real scalar       cont
  =        cont = 1
  =                else            cont   = 0
  =        string scalar    indent
  =void error_preceding_dash( pattype)
  =                        (pattype==0 ? "oldname" : "newname" ) )
  =void error_following_dash( pattype, string scalar what)
  =                        (pattype==0 ? "oldname" : "newname" ) )
  =void option_not_allowed(string scalar option)
  =void option_number_misspecified(string scalar op)
  =void error_ETnum_f_too_long(real scalar n_digits)
  =        errprintf("the {bf:(###...#)} pattern is %g.\n", 10)
  =void error_patternlengths_unequal(struct rename_patterndf rowvector oldplist, struct rename_patterndf rowvector newplist)
  =        string scalar    s_old, s_new
  =void error_too_many_renumbers(string scalar op, struct rename_patterndf scalar newp)
  =void error_strlist_length(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp)
  =        real scalar    n_old, n_new
  =        string scalar    s_old, s_new
  =void error_missing_ETnum(string scalar opname, struct rename_patterndf scalar newp)
  =void error_too_many_wildcards(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp,
  =                                                        real scalar isaddnumber)
  =void error_wildcardmatch_qm(struct rename_patterndf scalar oldp, real scalar j_old,
  =                            struct rename_patterndf scalar newp, real scalar j_new)
  =void error_wildcardmatch_hash(struct rename_patterndf scalar oldp, real scalar j_old,
  =                              struct rename_patterndf scalar newp, real scalar j_new)
  =void error_no_right_bracket(string scalar original)
  =void error_inside_brackets(string scalar original)
  =void error_newnumber_subscripted(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp)
  =void error_subscript_invalid(struct rename_patterndf scalar oldp, struct rename_patterndf scalar newp, real scalar subscr)
  =void error_subscripts_in_old(struct rename_patterndf scalar pat)
  =void dump_pattern(struct rename_patterndf rowvector pat, string scalar typ, real scalar incl_names)
  =        real scalar    i, j, n
  =        real scalar    nv, k, m
  =                        pat[i].n_of[(2)],
  =                        pat[i].n_of[(3)],
  =                        pat[i].n_of[(4)],
  =                        pat[i].n_of[(5)],
  =                        pat[i].n_of[(6)],
  =                        pat[i].n_of[(7)],
  =                        pat[i].n_of[(8)])
  =string scalar dump_xlate_tt(real scalar t)
  =        if (t==(1))     return("ETstrlist")
  =        if (t==(2))         return("ETstr")
  =        if (t==(3))        return("ETstar")
  =        if (t==(4))          return("ETqm")
  =        if (t==(5))       return("ETnum_v")
  =        if (t==(6))       return("ETnum_f")
  =        if (t==(7))          return("ETeq")
  =        if (t==(8))        return("ETodot")
  =        if (t==(9))     return("ETnum_v_r")
  =        if (t==(10))     return("ETnum_f_r")
  =void dump_options(struct rename_renamedf scalar ren)
  =void match_debug(struct rename_matchdf scalar m, struct rename_peldf rowvector ellist, string scalar msg)
  =string rowvector list_subtract(string rowvector a, string rowvector b)
  =        string rowvector result
  =string rowvector expand_varlist(string scalar pattern, string scalar tmpname)
  =        real scalar    rc
  =        string rowvector    result
  =string scalar ordinal_suffix(real scalar i)
  =        real scalar    lastdigit
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cf_dstr = " " if cf_dstr == "-15"
(807 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cf_date = date(cf_dstr, "YMD")
(807 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cf_date, after(cf_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cf_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cf_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension strok
> e dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell
>  hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban s
> tp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_c
> hild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cf_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cf_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cf_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 9 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cf_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 9>=1 & 9<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_dstr cf_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cf_dstr
- }
- format `var'_date %td
= format cf_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable respiratory
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace respiratory = respiratory + "-15"
variable respiratory was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename respiratory respiratory_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace respiratory_dstr = " " if respiratory_dstr == "-15"
(802 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen respiratory_date = date(respiratory_dstr, "YMD")
(802 missing values generated)
- order `var'_date, after(`var'_dstr)
= order respiratory_date, after(respiratory_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"respiratory_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"respiratory_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypertension 
> stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle
> _cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_ur
> ban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult 
> bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id respiratory_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypert
> ension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia
>  sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id respiratory_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "respiratory_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypert
> ension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia
>  sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 10 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hyper
> tension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dyspleni
> a sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any 
> rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bm
> i_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-respiratory_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 10>=1 & 10<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_dstr respiratory_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop respiratory_dstr
- }
- format `var'_date %td
= format respiratory_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable cardiac
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cardiac = cardiac + "-15"
variable cardiac was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename cardiac cardiac_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cardiac_dstr = " " if cardiac_dstr == "-15"
(800 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cardiac_date = date(cardiac_dstr, "YMD")
(800 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cardiac_date, after(cardiac_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cardiac_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cardiac_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes hyperten
> sion stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia s
> ickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rur
> al_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_a
> dult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cardiac_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes h
> ypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysp
> lenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cardiac_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cardiac_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes h
> ypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysp
> lenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 11 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes 
> hypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dys
> plenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag
> _any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_stat
> us bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cardiac_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 11>=1 & 11<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr cardiac_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cardiac_dstr
- }
- format `var'_date %td
= format cardiac_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable hypertension
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace hypertension = hypertension + "-15"
variable hypertension was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename hypertension hypertension_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace hypertension_dstr = " " if hypertension_dstr == "-15"
(807 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen hypertension_date = date(hypertension_dstr, "YMD")
(807 missing values generated)
- order `var'_date, after(`var'_dstr)
= order hypertension_date, after(hypertension_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"hypertension_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"hypertension_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hyperten
> sion_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysple
> nia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_an
> y rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status 
> bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hypertension_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney
>  dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hypertension_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "hypertension_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney
>  dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 17 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes 
> hypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidne
> y dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid
> _flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking
> _status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-hypertension_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hyperten
> sion_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 17>=1 & 17<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hypertension_dstr
>  hypertension_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop hypertension_dstr
- }
- format `var'_date %td
= format hypertension_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable af
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace af = af + "-15"
variable af was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename af af_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace af_dstr = " " if af_dstr == "-15"
(806 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen af_date = date(af_dstr, "YMD")
(806 missing values generated)
- order `var'_date, after(`var'_dstr)
= order af_date, after(af_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"af_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"af_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"af_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabetes hyp
> ertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney d
> ysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_fl
> ag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_st
> atus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id af_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabe
> tes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notk
> idney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id af_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "af_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabe
> tes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notk
> idney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 12 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diab
> etes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_not
> kidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_
> covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 sm
> oking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-af_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 12>=1 & 12<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr af_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop af_dstr
- }
- format `var'_date %td
= format af_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dvt_pe
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dvt_pe = dvt_pe + "-15"
variable dvt_pe was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename dvt_pe dvt_pe_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dvt_pe_dstr = " " if dvt_pe_dstr == "-15"
(804 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dvt_pe_date = date(dvt_pe_dstr, "YMD")
(804 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dvt_pe_date, after(dvt_pe_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dvt_pe_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dvt_pe_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate diabete
> s hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkid
> ney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_cov
> id_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoki
> ng_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dvt_pe_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate 
> diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant
> _notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dvt_pe_
> date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dvt_pe_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate 
> diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant
> _notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 13 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate
>  diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplan
> t_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died
> _ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_
> 16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dvt_pe_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 13>=1 & 13<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr dvt_pe_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dvt_pe_dstr
- }
- format `var'_date %td
= format dvt_pe_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable pad_surg
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace pad_surg = pad_surg + "-15"
variable pad_surg was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename pad_surg pad_surg_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace pad_surg_dstr = " " if pad_surg_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen pad_surg_date = date(pad_surg_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order pad_surg_date, after(pad_surg_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"pad_surg_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"pad_surg_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr amputate di
> abetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_n
> otkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_on
> s_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 
> smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id pad_surg_
> date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr ampu
> tate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver trans
> plant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp 
> died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnic
> ity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id pa
> d_surg_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "pad_surg_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr ampu
> tate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver trans
> plant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp 
> died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnic
> ity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 14 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr amp
> utate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver tran
> splant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp
>  died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethni
> city_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-pad_surg_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 14>=1 & 14<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr pad_surg_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop pad_surg_dstr
- }
- format `var'_date %td
= format pad_surg_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable amputate
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace amputate = amputate + "-15"
variable amputate was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename amputate amputate_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace amputate_dstr = " " if amputate_dstr == "-15"
(802 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen amputate_date = date(amputate_dstr, "YMD")
(802 missing values generated)
- order `var'_date, after(`var'_dstr)
= order amputate_date, after(amputate_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"amputate_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"amputate_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_ds
> tr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transpl
> ant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp di
> ed_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicit
> y_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ampu
> tate_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver 
> transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound d
> s cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity e
> thnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_
> id amputate_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "amputate_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver 
> transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound d
> s cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity e
> thnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_
> id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 15 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver
>  transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound 
> ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity 
> ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient
> _id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-amputate_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_ds
> tr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 15>=1 & 15<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_dstr amputa
> te_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop amputate_dstr
- }
- format `var'_date %td
= format amputate_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable diabetes
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace diabetes = diabetes + "-15"
variable diabetes was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename diabetes diabetes_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace diabetes_dstr = " " if diabetes_dstr == "-15"
(802 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen diabetes_date = date(diabetes_dstr, "YMD")
(802 missing values generated)
- order `var'_date, after(`var'_dstr)
= order diabetes_date, after(diabetes_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"diabetes_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"diabetes_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver tr
> ansplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds 
> cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity eth
> nicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
>  diabetes_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis l
> iver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profo
> und ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnic
> ity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pat
> ient_id diabetes_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "diabetes_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis l
> iver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profo
> und ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnic
> ity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pat
> ient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 16 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis 
> liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_prof
> ound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethni
> city ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pa
> tient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-diabetes_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 16>=1 & 16<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_dstr diabetes_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop diabetes_dstr
- }
- format `var'_date %td
= format diabetes_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable tia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace tia = tia + "-15"
variable tia was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename tia tia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace tia_dstr = " " if tia_dstr == "-15"
(804 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen tia_date = date(tia_dstr, "YMD")
(804 missing values generated)
- order `var'_date, after(`var'_dstr)
= order tia_date, after(tia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"tia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"tia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialysis liv
> er transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profoun
> d ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicit
> y ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patie
> nt_id tia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialy
> sis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_
> profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex e
> thnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severit
> y patient_id tia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "tia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialy
> sis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_
> profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex e
> thnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severit
> y patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 21 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dial
> ysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld
> _profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex 
> ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severi
> ty patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-tia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke dementia neuro tia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 21>=1 & 21<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke dementia neuro tia_dstr tia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop tia_dstr
- }
- format `var'_date %td
= format tia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable stroke
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace stroke = stroke + "-15"
variable stroke was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename stroke stroke_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace stroke_dstr = " " if stroke_dstr == "-15"
(806 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen stroke_date = date(stroke_dstr, "YMD")
(806 missing values generated)
- order `var'_date, after(`var'_dstr)
= order stroke_date, after(stroke_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"stroke_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"stroke_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney dialysi
> s liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_pr
> ofound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex eth
> nicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity 
> patient_id stroke_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney 
> dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ld
> r ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age 
> sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_se
> verity patient_id stroke_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "stroke_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney 
> dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ld
> r ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age 
> sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_se
> verity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 18 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney
>  dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture l
> dr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age
>  sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_s
> everity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-stroke_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 18>=1 & 18<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_dstr stroke_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop stroke_dstr
- }
- format `var'_date %td
= format stroke_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dementia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dementia = dementia + "-15"
variable dementia was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename dementia dementia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dementia_dstr = " " if dementia_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dementia_date = date(dementia_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dementia_date, after(dementia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dementia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dementia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney di
> alysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr 
> ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age se
> x ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_seve
> rity patient_id dementia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_ki
> dney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fractu
> re ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size
>  age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asth
> ma_severity patient_id dementia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dementia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_ki
> dney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fractu
> re ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size
>  age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asth
> ma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 19 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_k
> idney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fract
> ure ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_siz
> e age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage ast
> hma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dementia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 19>=1 & 19<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_dstr dementia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dementia_dstr
- }
- format `var'_date %td
= format dementia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable neuro
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace neuro = neuro + "-15"
variable neuro was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename neuro neuro_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace neuro_dstr = " " if neuro_dstr == "-15"
(801 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen neuro_date = date(neuro_dstr, "YMD")
(801 missing values generated)
- order `var'_date, after(`var'_dstr)
= order neuro_date, after(neuro_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"neuro_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"neuro_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transplant_kidn
> ey dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture
>  ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size a
> ge sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma
> _severity patient_id neuro_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpla
> nt_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi f
> racture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household
> _size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage
>  asthma_severity patient_id neuro_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "neuro_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpla
> nt_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi f
> racture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household
> _size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage
>  asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 20 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpl
> ant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi 
> fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr househol
> d_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentag
> e asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-neuro_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 20>=1 & 20<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_dstr neuro_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop neuro_dstr
- }
- format `var'_date %td
= format neuro_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable lung_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace lung_cancer = lung_cancer + "-15"
variable lung_cancer was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename lung_cancer lung_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace lung_cancer_dstr = " " if lung_cancer_dstr == "-15"
(804 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen lung_cancer_date = date(lung_cancer_dstr, "YMD")
(804 missing values generated)
- order `var'_date, after(`var'_dstr)
= order lung_cancer_date, after(lung_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"lung_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"lung_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer transplant
> _kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fra
> cture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_s
> ize age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage a
> sthma_severity patient_id lung_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tra
> nsplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd 
> smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hous
> ehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perce
> ntage asthma_severity patient_id lung_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "lung_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tra
> nsplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd 
> smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hous
> ehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perce
> ntage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 22 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tr
> ansplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd
>  smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hou
> sehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perc
> entage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-lung_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 22>=1 & 22<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr lung_cancer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop lung_cancer_dstr
- }
- format `var'_date %td
= format lung_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable haem_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace haem_cancer = haem_cancer + "-15"
variable haem_cancer was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename haem_cancer haem_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace haem_cancer_dstr = " " if haem_cancer_dstr == "-15"
(802 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen haem_cancer_date = date(haem_cancer_dstr, "YMD")
(802 missing values generated)
- order `var'_date, after(`var'_dstr)
= order haem_cancer_date, after(haem_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"haem_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"haem_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cancer trans
> plant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd sm
> i fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr househ
> old_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percent
> age asthma_severity patient_id haem_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cance
> r transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune
>  ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr
>  household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_
> percentage asthma_severity patient_id haem_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "haem_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cance
> r transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune
>  ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr
>  household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_
> percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 23 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_canc
> er transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmun
> e ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ld
> r household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c
> _percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-haem_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 23>=1 & 23<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr haem_cancer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop haem_cancer_dstr
- }
- format `var'_date %td
= format haem_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable other_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace other_cancer = other_cancer + "-15"
variable other_cancer was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename other_cancer other_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace other_cancer_dstr = " " if other_cancer_dstr == "-15"
(802 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen other_cancer_date = date(other_cancer_dstr, "YMD")
(802 missing values generated)
- order `var'_date, after(`var'_dstr)
= order other_cancer_date, after(other_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"other_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"other_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr 
> transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune i
> bd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr h
> ousehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_pe
> rcentage asthma_severity patient_id other_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoi
> mmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_car
> e_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol h
> ba1c_percentage asthma_severity patient_id other_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "other_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoi
> mmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_car
> e_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol h
> ba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 24 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia auto
> immune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_ca
> re_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol 
> hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-other_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 24>=1 & 24<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr other_can
> cer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop other_cancer_dstr
- }
- format `var'_date %td
= format other_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable liver
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace liver = liver + "-15"
variable liver was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename liver liver_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace liver_dstr = " " if liver_dstr == "-15"
(806 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen liver_date = date(liver_dstr, "YMD")
(806 missing values generated)
- order `var'_date, after(`var'_dstr)
= order liver_date, after(liver_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"liver_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"liver_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimm
> une ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_
> ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba
> 1c_percentage asthma_severity patient_id liver_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia 
> autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resi
> d_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_
> mol hba1c_percentage asthma_severity patient_id liver_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "liver_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia 
> autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resi
> d_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_
> mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 27 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia
>  autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old res
> id_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per
> _mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-liver_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 27>=1 & 27<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney dialysis liver_dstr liver_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop liver_dstr
- }
- format `var'_date %td
= format liver_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable transplant_notkidney
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace transplant_notkidney = transplant_notkidney + "-15"
variable transplant_notkidney was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename transplant_notkidney transplant_notkidney_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace transplant_notkidney_dstr = " " if transplant_notkidney_dstr == "-15"
(807 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen transplant_notkidney_date = date(transplant_notkidney_dstr, "YMD")
(807 missing values generated)
- order `var'_date, after(`var'_dstr)
= order transplant_notkidney_date, after(transplant_notkidney_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_notkidney_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia au
> toimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_
> care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mo
> l hba1c_percentage asthma_severity patient_id transplant_notkidney_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_ana
> emia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old
>  resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol
> _per_mol hba1c_percentage asthma_severity patient_id transplant_notkidney_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_notkidney_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_ana
> emia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old
>  resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol
> _per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 28 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_an
> aemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_ol
> d resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmo
> l_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-transplant_notkidney_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_date transplant_notkidney_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 28>=1 & 28<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney dialysis liver_date transplant_notkidney_dstr transplant_notkidney_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop transplant_notkidney_dstr
- }
- format `var'_date %td
= format transplant_notkidney_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable transplant_kidney
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace transplant_kidney = transplant_kidney + "-15"
variable transplant_kidney was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename transplant_kidney transplant_kidney_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace transplant_kidney_dstr = " " if transplant_kidney_dstr == "-15"
(806 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen transplant_kidney_date = date(transplant_kidney_dstr, "YMD")
(806 missing values generated)
- order `var'_date, after(`var'_dstr)
= order transplant_kidney_date, after(transplant_kidney_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_kidney_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_kidney_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaem
> ia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old r
> esid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_p
> er_mol hba1c_percentage asthma_severity patient_id transplant_kidney_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplasti
> c_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_car
> e_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c
> _mmol_per_mol hba1c_percentage asthma_severity patient_id transplant_kidney_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_kidney_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplasti
> c_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_car
> e_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c
> _mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 25 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplast
> ic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_ca
> re_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1
> c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-transplant_kidney_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 25>=1 & 25<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_dstr transplant_kidney_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop transplant_kidney_dstr
- }
- format `var'_date %td
= format transplant_kidney_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dialysis
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dialysis = dialysis + "-15"
variable dialysis was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename dialysis dialysis_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dialysis_dstr = " " if dialysis_dstr == "-15"
(805 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dialysis_date = date(dialysis_dstr, "YMD")
(805 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dialysis_date, after(dialysis_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dialysis_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dialysis_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_
> anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_
> old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_m
> mol_per_mol hba1c_percentage asthma_severity patient_id dialysis_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno ap
> lastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resi
> d_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias 
> hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dialysis_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dialysis_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno ap
> lastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resi
> d_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias 
> hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 26 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno a
> plastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id res
> id_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias
>  hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dialysis_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 26>=1 & 26<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_dstr dialysis_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dialysis_dstr
- }
- format `var'_date %td
= format dialysis_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dysplenia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dysplenia = dysplenia + "-15"
variable dysplenia was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename dysplenia dysplenia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dysplenia_dstr = " " if dysplenia_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dysplenia_date = date(dysplenia_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dysplenia_date, after(dysplenia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dysplenia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dysplenia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immuno apla
> stic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_
> care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hb
> a1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dysplenia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immu
> no aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id
>  resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_
> dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dysplenia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dysplenia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immu
> no aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id
>  resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_
> dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 29 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_imm
> uno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_i
> d resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp
> _dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dysplenia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 29>=1 & 29<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr dysplenia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dysplenia_dstr
- }
- format `var'_date %td
= format dysplenia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable sickle_cell
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace sickle_cell = sickle_cell + "-15"
variable sickle_cell was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename sickle_cell sickle_cell_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace sickle_cell_dstr = " " if sickle_cell_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen sickle_cell_date = date(sickle_cell_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order sickle_cell_date, after(sickle_cell_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"sickle_cell_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"sickle_cell_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp_immuno
>  aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id r
> esid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id sickle_cell_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp
> _immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househo
> ld_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id sickle_cell_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "sickle_cell_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp
> _immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househo
> ld_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 30 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno tem
> p_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househ
> old_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_s
> ys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-sickle_cell_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 30>=1 & 30<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr sickle_cell_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop sickle_cell_dstr
- }
- format `var'_date %td
= format sickle_cell_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable hiv
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace hiv = hiv + "-15"
variable hiv was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename hiv hiv_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace hiv_dstr = " " if hiv_dstr == "-15"
(807 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen hiv_date = date(hiv_dstr, "YMD")
(807 missing values generated)
- order `var'_date, after(`var'_dstr)
= order hiv_date, after(hiv_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"hiv_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"hiv_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno temp_i
> mmuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household
> _id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys 
> bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hiv_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno
>  temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd ho
> usehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine 
> bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hiv_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "hiv_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno
>  temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd ho
> usehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine 
> bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 31 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immun
> o temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd h
> ousehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine
>  bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-hiv_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 31>=1 & 31<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr hiv_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop hiv_dstr
- }
- format `var'_date %td
= format hiv_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable perm_immuno
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace perm_immuno = perm_immuno + "-15"
variable perm_immuno was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename perm_immuno perm_immuno_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace perm_immuno_dstr = " " if perm_immuno_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen perm_immuno_date = date(perm_immuno_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order perm_immuno_date, after(perm_immuno_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"perm_immuno_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"perm_immuno_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr t
> emp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd hous
> ehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id perm_immuno_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region i
> md household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creati
> nine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id perm_immuno_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "perm_immuno_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region i
> md household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creati
> nine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 32 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region 
> imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creat
> inine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-perm_immuno_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 32>=1 & 32<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr perm_immun
> o_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop perm_immuno_dstr
- }
- format `var'_date %td
= format perm_immuno_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable aplastic_anaemia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace aplastic_anaemia = aplastic_anaemia + "-15"
variable aplastic_anaemia was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename aplastic_anaemia aplastic_anaemia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace aplastic_anaemia_dstr = " " if aplastic_anaemia_dstr == "-15"
(997 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen aplastic_anaemia_date = date(aplastic_anaemia_dstr, "YMD")
(997 missing values generated)
- order `var'_date, after(`var'_dstr)
= order aplastic_anaemia_date, after(aplastic_anaemia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"aplastic_anaemia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd
>  household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id aplastic_anaemia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp reg
> ion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id aplastic_anaemia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "aplastic_anaemia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp reg
> ion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 34 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child 
> creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-aplastic_anaemia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno aplastic_anaemia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 34>=1 & 34<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o aplastic_anaemia_dstr aplastic_anaemia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop aplastic_anaemia_dstr
- }
- format `var'_date %td
= format aplastic_anaemia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable temp_immuno
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace temp_immuno = temp_immuno + "-15"
variable temp_immuno was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename temp_immuno temp_immuno_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace temp_immuno_dstr = " " if temp_immuno_dstr == "-15"
(996 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen temp_immuno_date = date(temp_immuno_dstr, "YMD")
(996 missing values generated)
- order `var'_date, after(`var'_dstr)
= order temp_immuno_date, after(temp_immuno_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"temp_immuno_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"temp_immuno_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp regio
> n imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child cre
> atinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id temp_immuno_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban st
> p region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_ch
> ild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id temp_immuno_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "temp_immuno_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban st
> p region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_ch
> ild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 33 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban s
> tp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_c
> hild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-temp_immuno_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 33>=1 & 33<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_dstr temp_immuno_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop temp_immuno_dstr
- }
- format `var'_date %td
= format temp_immuno_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable autoimmune
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace autoimmune = autoimmune + "-15"
variable autoimmune was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename autoimmune autoimmune_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace autoimmune_dstr = " " if autoimmune_dstr == "-15"
(804 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen autoimmune_date = date(autoimmune_dstr, "YMD")
(804 missing values generated)
- order `var'_date, after(`var'_dstr)
= order autoimmune_date, after(autoimmune_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"autoimmune_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"autoimmune_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp 
> region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_chil
> d creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id autoimmune_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult b
> mi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id autoimmune_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "autoimmune_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult b
> mi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 35 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_ur
> ban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult 
> bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-autoimmune_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 35>=1 & 35<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_dstr autoimmune_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop autoimmune_dstr
- }
- format `var'_date %td
= format autoimmune_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ibd
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ibd = ibd + "-15"
variable ibd was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename ibd ibd_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ibd_dstr = " " if ibd_dstr == "-15"
(803 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ibd_date = date(ibd_dstr, "YMD")
(803 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ibd_date, after(ibd_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ibd_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ibd_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi
> _child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ibd_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rura
> l_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_ad
> ult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ibd_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ibd_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rura
> l_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_ad
> ult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 36 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rur
> al_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_a
> dult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ibd_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 36>=1 & 36<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_dstr ibd_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ibd_dstr
- }
- format `var'_date %td
= format ibd_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable fracture
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace fracture = fracture + "-15"
variable fracture was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename fracture fracture_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace fracture_dstr = " " if fracture_dstr == "-15"
(995 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen fracture_date = date(fracture_dstr, "YMD")
(995 missing values generated)
- order `var'_date, after(`var'_dstr)
= order fracture_date, after(fracture_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"fracture_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"fracture_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id fracture_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any
>  rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status b
> mi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id fracture_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "fracture_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any
>  rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status b
> mi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 38 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_an
> y rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status 
> bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-fracture_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 38>=1 & 38<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr fracture_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop fracture_dstr
- }
- format `var'_date %td
= format fracture_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable smi
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace smi = smi + "-15"
variable smi was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename smi smi_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace smi_dstr = " " if smi_dstr == "-15"
(807 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen smi_date = date(smi_dstr, "YMD")
(807 missing values generated)
- order `var'_date, after(`var'_dstr)
= order smi_date, after(smi_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"smi_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"smi_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id smi_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fla
> g_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_sta
> tus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id smi_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "smi_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fla
> g_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_sta
> tus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 37 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fl
> ag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_st
> atus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-smi_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 37>=1 & 37<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr smi_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop smi_dstr
- }
- format `var'_date %td
= format smi_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ldr
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ldr = ldr + "-15"
variable ldr was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename ldr ldr_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ldr_dstr = " " if ldr_dstr == "-15"
(801 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ldr_date = date(ldr_dstr, "YMD")
(801 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ldr_date, after(ldr_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ldr_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ldr_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ldr_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covi
> d_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smokin
> g_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ldr_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ldr_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covi
> d_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smokin
> g_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 39 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_cov
> id_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoki
> ng_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ldr_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 39>=1 & 39<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ldr_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ldr_dstr
- }
- format `var'_date %td
= format ldr_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ld_profound
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ld_profound = ld_profound + "-15"
variable ld_profound was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename ld_profound ld_profound_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ld_profound_dstr = " " if ld_profound_dstr == "-15"
(806 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ld_profound_date = date(ld_profound_dstr, "YMD")
(806 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ld_profound_date, after(ld_profound_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ld_profound_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ld_profound_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ld_profound_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons
> _covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 s
> moking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ld_profoun
> d_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ld_profound_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons
> _covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 s
> moking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 40 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_on
> s_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 
> smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ld_profound_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 40>=1 & 40<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ld_profound_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ld_profound_dstr
- }
- format `var'_date %td
= format ld_profound_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ds
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ds = ds + "-15"
variable ds was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename ds ds_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ds_dstr = " " if ds_dstr == "-15"
(801 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ds_date = date(ds_dstr, "YMD")
(801 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ds_date, after(ds_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ds_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ds_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ds_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp die
> d_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity
> _16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ds_da
> te
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ds_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp die
> d_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity
> _16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 41 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp di
> ed_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicit
> y_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ds_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 41>=1 & 41<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr ds_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ds_dstr
- }
- format `var'_date %td
= format ds_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable cp
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cp = cp + "-15"
variable cp was str7 now str10
(1,000 real changes made)
- rename `var' `var'_dstr
= rename cp cp_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cp_dstr = " " if cp_dstr == "-15"
(801 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cp_date = date(cp_dstr, "YMD")
(801 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cp_date, after(cp_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cp_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cp_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cp_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethn
> icity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id 
> cp_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cp_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethn
> icity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 42 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_ds
> tr died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity eth
> nicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cp_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 42>=1 & 42<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr cp_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cp_dstr
- }
- format `var'_date %td
= format cp_date %td
- }
- assert age<.
- assert inlist(sex, "M", "F")
- gen male = (sex=="M")
- drop sex
- label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- gen smoke = 1 if smoking_status=="N"
(961 missing values generated)
- replace smoke = 2 if smoking_status=="E"
(16 real changes made)
- replace smoke = 3 if smoking_status=="S"
(126 real changes made)
- replace smoke = .u if smoking_status=="M"
(19 real changes made, 19 to missing)
- replace smoke = .u if smoking_status==""
(800 real changes made, 800 to missing)
- label values smoke smoke
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" smoke"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "smoke"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "smoke" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist smoke {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values smoke smoke 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop smoking_status
- rename ethnicity ethnicity_5
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace ethnicity_5 = .u if ethnicity_5==.
(250 real changes made, 250 to missing)
- label define ethnicity 1 "White" 2 "Mixed" 3 "Asian or Asian British" 4 "Black" 5 "Other" .u "Unknown"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ethnicity 1 "White" 2 "Mixed" 3 "Asian or Asian British" 4 "Black" 5 "Other" .u "Unknown"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ethnicity_5 ethnicity
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ethnicity"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ethnicity"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ethnicity" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ethnicity_5 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ethnicity_5 ethnicity 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- replace ethnicity_16 = .u if ethnicity_5>=.
(250 real changes made, 250 to missing)
- replace ethnicity_16 = .u if ethnicity_16>=.
(194 real changes made, 194 to missing)
- label define ethnicity_16 1 "British or Mixed British" 2 "Irish" 3 "Other White" 4 "White + Black Caribbean" 5 "White + Black African
> " 6 "White + Asian" 7 "Other mixed" 8 "Indian or British Indian" 9 "Pakistani or British Pakistani" 10 "Bangladeshi or British Bangla
> deshi" 11 "Other Asian" 12 "Caribbean" 13 "African" 14 "Other Black" 15 "Chinese" 16 "Other" .u "Unknown"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ethnicity_16 1 "British or Mixed British" 2 "Irish" 3 "Other White" 4 "White + Black Caribbean
> " 5 "White + Black African" 6 "White + Asian" 7 "Other mixed" 8 "Indian or British Indian" 9 "Pakistani or British Pakistani" 10 "Ban
> gladeshi or British Bangladeshi" 11 "Other Asian" 12 "Caribbean" 13 "African" 14 "Other Black" 15 "Chinese" 16 "Other" .u "Unknown"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ethnicity_16 ethnicity_16
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ethnicity_16"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ethnicity_16"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ethnicity_16" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ethnicity_16 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ethnicity_16 ethnicity_16 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop ethnicity_date ethnicity_16_date
- replace bmi_adult = . if age<16
(193 real changes made, 193 to missing)
- capture confirm string variable bmi_child_date_measured
- if _rc!=0 {
  assert bmi_child_date_measured==.
  rename bmi_child_date_measured bmi_child_date_measured_date
  }
- else {
- replace bmi_child_date_measured = bmi_child_date_measured + "-15"
variable bmi_child_date_measured was str7 now str10
(1,000 real changes made)
- rename bmi_child_date_measured bmi_child_date_measured_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace bmi_child_date_measured_dstr = " " if bmi_child_date_measured_dstr == "-15"
(50 real changes made)
- gen bmi_child_date_measured_date = date(bmi_child_date_measured_dstr, "YMD")
(50 missing values generated)
- order bmi_child_date_measured_date, after(bmi_child_date_measured_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"bmi_child_date_measured_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi_child_date_measured_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi_child_date_measured_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "bmi_child_date_measured_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 4 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-bmi_child_date_measured_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 4>=1 & 4<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bmi_child_date_measured_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop bmi_child_date_measured_dstr
- }
- format bmi_child_date_measured_date %td
- replace bmi_child = . if age>=16
(807 real changes made, 807 to missing)
- replace bmi_child_date_measured_date = . if age>=16
(767 real changes made, 767 to missing)
- noi summ bmi_adult bmi_child

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   bmi_adult |        807    33.03998    12.46132          0   66.10373
   bmi_child |        193    33.33171    12.65937          0    64.2983
- gen bmi = bmi_adult if age>=16
(193 missing values generated)
- replace bmi = bmi_child if age<16
(193 real changes made)
- replace bmi = . if !inrange(bmi, 15, 50)
(153 real changes made, 153 to missing)
- order bmi, after(bmi_adult)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"bmi_adult"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"bmi_adult"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "bmi_adult" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 53 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child 
> creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-bmi_adult
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 53>=1 & 53<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban stp re
> gion imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop bmi_adult bmi_child
- rename stp stpcode
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- bysort stpcode: gen stp = 1 if _n==1
(969 missing values generated)
- replace stp = sum(stp)
(999 real changes made)
- order stp, after(stpcode)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"stpcode"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"stpcode"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"stpcode"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sys bp
> _dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke stp
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke stp
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "stpcode" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 43 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine b
> p_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-stpcode
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 43>=1 & 43<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban stpcod
> e stp
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stpcode"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stpcode"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- gen region_7 = 1 if region=="East"
(913 missing values generated)
- replace region_7 = 2 if region=="London"
(193 real changes made)
- replace region_7 = 3 if region=="East Midlands"
(214 real changes made)
- replace region_7 = 3 if region=="West Midlands"
(102 real changes made)
- replace region_7 = 4 if region=="North East"
(94 real changes made)
- replace region_7 = 4 if region=="Yorkshire and The Humber"
(112 real changes made)
- replace region_7 = 5 if region=="North West"
(94 real changes made)
- replace region_7 = 6 if region=="South East"
(104 real changes made)
- replace region_7 = 7 if region=="South West"
(0 real changes made)
- label define region_7 1 "East" 2 "London" 3 "Midlands" 4 "North East and Yorkshire" 5 "North West" 6 "South East" 7 "South West"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define region_7 1 "East" 2 "London" 3 "Midlands" 4 "North East and Yorkshire" 5 "North West" 6 "South
>  East" 7 "South West"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values region_7 region_7
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" region_7"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "region_7"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "region_7" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist region_7 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values region_7 region_7 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var region_7 "Region of England (7 regions)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var region_7 "Region of England (7 regions)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop region
- capture confirm string var rural_urban
- if _rc==0 {
  assert inlist(rural_urban, "rural", "urban", "")
  replace rural_urban = "urban" if !inlist(rural_urban, "rural", "urban")
  gen rural = rural_urban=="rural"
  order rural, after(rural_urban)
  drop rural_urban
  }
- else {
- recode rural_urban -1 0=.
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"rural_urban -1 0=."' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : rural_urban, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist rural_urban
    - local n : word count `varlist'
    = local n : word count rural_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var rural_urban
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" -1 0=."' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" -1 0=."', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"-1"', "", "*", "else") & `"-1"' != bsubstr("missing", 1, max(3,length(`"-1"'))) & `"-1"' != bsubstr("nonmissing", 1
> , max(4,length(`"-1"'))) {
  - if `"`1'"' == "=" {
  = if `"-1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"-1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number -1
    - if !_rc {
    - return local s1 `v'
    = return local s1 -1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"0"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(-1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==-1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"."' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number .
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"."' == "." {
    - return local s1 "."
    - }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"."')==2 & `"."' >= ".a" & `"."' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"."', "max", "min") {
      return local s1 "r(`v')"
      scalar `statcode' = max(`statcode',1)
      }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 .
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 2- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = rural_urban if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type rural_urban
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = . if __000002==1 & float(rural_urban)==float(-1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban)==float(-1)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = . if __000002==1 & float(rural_urban)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban)==float(0)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(rural_urban) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = rural_urban if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(rural_urban: 26 changes made)"
(rural_urban: 26 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace rural_urban = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- bysort stp: egen ru_mode=mode(rural_urban)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"ru_mode"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable ru_mode
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gmode.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gmode.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gmode.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gmode.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gmode.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"rural_urban"' == "_all" | `"rural_urban"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(stp)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname ru_mode
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("mode","mode","concat","group") {
  - local vv : display "version " string(`cvers') ", missing:"
  = local vv : display "version " string(16.1) ", missing:"
  - }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily version 16.1, missing: _gmode float __000001 = (rural_urban)   , by(stp) 
    ------------------------------------------------------------------------------------------------------------------ begin _gmode ---
    - if _caller() < 10.1 {
      _gmode10 `0'
      exit
      }
    - version 7, missing
    - gettoken type 0 : 0
    - gettoken g 0 : 0
    - gettoken eqs 0 : 0
    - syntax varlist(max=1) [if] [in] [, MISSing BY(varlist) MINmode MAXmode Nummode(numlist max=1 int >= 1) ]
    - if ("`minmode'"!="") + ("`maxmode'"!="") + ("`nummode'"!="") > 1 {
    = if (""!="") + (""!="") + (""!="") > 1 {
      di as err "{p}only one of minmode, maxmode, or nummode() allowed"
      di "{p_end}"
      exit 198
      }
    - if "`by'" != "" & "`nummode'" != "" {
    = if "stp" != "" & "" != "" {
      di as err "{p}option nummode() may not be combined with by{p_end}"
      exit 190
      }
    - tempvar touse freq fmode uniq count maxfreq miss flag
    - mark `touse' `if' `in'
    = mark __000002  
    - sort `touse' `by' `varlist'
    = sort __000002 stp rural_urban
    - qui by `touse' `by' `varlist' : gen `c(obs_t)' `freq' = _N
    = qui by __000002 stp rural_urban : gen int __000003 = _N
    - if "`missing'" == "" {
    = if "" == "" {
    - qui replace `freq' = 0 if missing(`varlist')
    = qui replace __000003 = 0 if missing(rural_urban)
    - qui gen `miss' = !missing(`varlist') if `touse'
    = qui gen __000008 = !missing(rural_urban) if __000002
    - }
    - gen byte `uniq' = 1
    = gen byte __000005 = 1
    - local type : type `varlist'
    = local type : type rural_urban
    - if "`minmode'" != "" {
    = if "" != "" {
      if bsubstr("`type'",1,3) == "str" {
      gsort `touse' `by' `freq' -`varlist'
      }
      else {
      gsort `touse' `by' `freq' -`varlist', mfirst
      }
      }
    - else if "`maxmode'" != "" {
    = else if "" != "" {
      sort `touse' `by' `freq' `varlist'
      }
    - else if "`nummode'" != "" {
    = else if "" != "" {
      sort `touse' `by' `freq' `varlist'
      qui by `touse' `by' : gen `fmode' = `freq'[_N]
      qui by `touse' `by' `freq' `varlist' : gen long `count' = 1 if `fmode'==`freq' & _n==1 & `touse'
      qui replace `count' = sum(`count')
      qui replace `count' = . if !`touse' | `fmode'!=`freq'
      sort `touse' `by' `freq' `count'
      qui sum `count', meanonly
      local max = r(max)
      if `nummode' > `max' {
      di as err "{p}nummode(`nummode') too large -- there"
      if `max' == 1 {
      di "is only 1 mode{p_end}"
      }
      else {
      di "are only `max' modes{p_end}"
      }
      exit 198
      }
      qui replace `count'=0 if `count'!=`nummode'
      sort `touse' `by' `count' `varlist'
      }
    - else {
    - qui gsort `touse' `by' `freq' -`varlist'
    = qui gsort __000002 stp __000003 -rural_urban
      ----------------------------------------------------------------------------------------------------------------- begin gsort ---
      - if _caller() >= 12 {
        local vv : di "version " string(_caller()) ":"
        }
      - tempname myr
      - _return hold `myr'
      = _return hold __00000A
      - version 6.0, missing
      - parse `"`*'"', parse(" +-,")
      = parse `"__000002 stp __000003 -rural_urban"', parse(" +-,")
      - local noryet 1
      - local i 1
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"__000002"'!="" & `"__000002"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"__000002"'=="-" | `"__000002"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev __000002
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"__000002 "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist __000002
        - sret local k : word count `varlist'
        = sret local k : word count __000002
        - global S_1 "`varlist'"
        = global S_1 "__000002"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"stp"'!="" & `"stp"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"stp"'=="-" | `"stp"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev stp
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"stp "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist stp
        - sret local k : word count `varlist'
        = sret local k : word count stp
        - global S_1 "`varlist'"
        = global S_1 "stp"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002 stp"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"__000003"'!="" & `"__000003"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"__000003"'=="-" | `"__000003"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev __000003
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"__000003 "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist __000003
        - sret local k : word count `varlist'
        = sret local k : word count __000003
        - global S_1 "`varlist'"
        = global S_1 "__000003"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002 stp __000003"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"-"'!="" & `"-"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"-"'=="-" | `"-"'=="+" {
      - local sign `"`1'"'
      = local sign `"-"'
      - mac shift
      - if `"`1'"'=="," | `"`1'"'=="" { error 198 }
      = if `"rural_urban"'=="," | `"rural_urban"'=="" { error 198 }
      - }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev rural_urban
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"rural_urban "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist rural_urban
        - sret local k : word count `varlist'
        = sret local k : word count rural_urban
        - global S_1 "`varlist'"
        = global S_1 "rural_urban"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"-"'=="+" {
        local part1 `"`part1' `s(varlist)'"'
        }
      - else {
      - local noryet 0
      - local sign`i' `"`sign'"'
      = local sign1 `"-"'
      - local names `"`names' `1'"'
      = local names `" rural_urban"'
      - local i=`i'+1
      = local i=1+1
      - }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `""'!="" & `""'!="," {
        if `"`1'"'=="-" | `"`1'"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
        else local sign "+"
        unabbrev `1'
        if `noryet' & `"`sign'"'=="+" {
        local part1 `"`part1' `s(varlist)'"'
        }
        else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
        mac shift
        }
      - if `"`part1'"'=="" & `"`names'"'=="" {
      = if `" __000002 stp __000003"'=="" & `" rural_urban"'=="" {
        di in red "varlist required"
        exit 100
        }
      - local options "Generate(string) Mfirst"
      - parse `"`*'"'
      = parse `""'
      - if `"`generat'"'!="" {
      = if `""'!="" {
        confirm new var `generat'
        }
      - parse `"`names'"', parse(" ")
      = parse `" rural_urban"', parse(" ")
      - local i 1
      - while `"``i''"'!="" {
      = while `"rural_urban"'!="" {
      - `vv' sort ``i''
      =  sort rural_urban
      - tempvar n
      - quietly gen long `n' = .
      = quietly gen long __00000B = .
      - quietly by ``i'': replace `n'=1 if _n==1
      = quietly by rural_urban: replace __00000B=1 if _n==1
      - quietly replace `n'= 0 `sign`i'' sum(`n')
      = quietly replace __00000B= 0 - sum(__00000B)
      - if `"`mfirst'"' == "" {
      = if `""' == "" {
      - local typ : type ``i''
      = local typ : type rural_urban
      - if bsubstr("`typ'",1,3) != "str" {
      = if bsubstr("byte",1,3) != "str" {
      - if "`sign`i''" == "-" {
      = if "-" == "-" {
      - tempvar nn
      - qui gen long `nn' = .
      = qui gen long __00000C = .
      - qui by ``i'': replace `nn' = 1 if _n==1 & ``i''>=.
      = qui by rural_urban: replace __00000C = 1 if _n==1 & rural_urban>=.
      - qui sum `nn' if ``i''>=., meanonly
      = qui sum __00000C if rural_urban>=., meanonly
      - local nsum = `r(sum)'
      = local nsum = 1
      - qui replace `nn' = sum(`nn') if ``i''>=.
      = qui replace __00000C = sum(__00000C) if rural_urban>=.
      - qui replace `n' = `nsum' - `nn' if ``i''>=.
      = qui replace __00000B = 1 - __00000C if rural_urban>=.
      - }
      - else {
        qui replace `n'=``i'' if ``i''>=.
        }
      - }
      - }
      - local tvars `"`tvars' `n'"'
      = local tvars `" __00000B"'
      - quietly compress `n'
      = quietly compress __00000B
      - local i=`i'+1
      = local i=1+1
      - }
      - while `"``i''"'!="" {
      = while `""'!="" {
        `vv' sort ``i''
        tempvar n
        quietly gen long `n' = .
        quietly by ``i'': replace `n'=1 if _n==1
        quietly replace `n'= 0 `sign`i'' sum(`n')
        if `"`mfirst'"' == "" {
        local typ : type ``i''
        if bsubstr("`typ'",1,3) != "str" {
        if "`sign`i''" == "-" {
        tempvar nn
        qui gen long `nn' = .
        qui by ``i'': replace `nn' = 1 if _n==1 & ``i''>=.
        qui sum `nn' if ``i''>=., meanonly
        local nsum = `r(sum)'
        qui replace `nn' = sum(`nn') if ``i''>=.
        qui replace `n' = `nsum' - `nn' if ``i''>=.
        }
        else {
        qui replace `n'=``i'' if ``i''>=.
        }
        }
        }
        local tvars `"`tvars' `n'"'
        quietly compress `n'
        local i=`i'+1
        }
      - `vv' sort `part1' `tvars'
      =  sort  __000002 stp __000003  __00000B
      - if `"`generat'"'!="" {
      = if `""'!="" {
        tempvar mark
        qui by `part1' `tvars': gen `c(obs_t)' `mark' = 1 if _n==1
        qui replace `mark' = sum(`mark')
        qui compress `mark'
        `vv' sort `mark'
        rename `mark' `generat'
        }
      - _return restore `myr'
      = _return restore __00000A
      ------------------------------------------------------------------------------------------------------------------- end gsort ---
    - qui by `touse' `by' `freq' : gen `c(obs_t)' `fmode' = _N
    = qui by __000002 stp __000003 : gen int __000004 = _N
    - qui by `touse' `by' : replace `uniq' = `freq'[_N] == `fmode'[_N]
    = qui by __000002 stp : replace __000005 = __000003[_N] == __000004[_N]
    - }
    - qui by `touse' `by' : gen `flag' = `uniq'[_N] == 0
    = qui by __000002 stp : gen __000009 = __000005[_N] == 0
    - qui count if `flag' & `touse'
    = qui count if __000009 & __000002
    - local flag_mult_modes = `r(N)'
    = local flag_mult_modes = 0
    - if bsubstr("`type'",1,3) == "str" {
    = if bsubstr("byte",1,3) == "str" {
      qui gen `type' `g' = ""
      }
    - else {
    - qui gen `type' `g' = .
    = qui gen byte __000001 = .
    - }
    - qui by `touse' `by': replace `g' = `varlist'[_N] if `touse' & `uniq'
    = qui by __000002 stp: replace __000001 = rural_urban[_N] if __000002 & __000005
    - if "`missing'" == "" {
    = if "" == "" {
    - if "`by'" == "" {
    = if "stp" == "" {
      capture assert !missing(`g') if `touse'
      if _rc == 9 {
      qui sum `miss' if `touse'
      if `r(sum)' == 0 {
      di "{p}{txt}Warning: `varlist' contains all"
      di "missing values.  Generating missing"
      di "values for the mode.  Use the"
      di "{cmd:missing} option to treat missing"
      di "values as a category.{p_end}"
      }
      else {
      di "{p}{txt}Warning: multiple modes"
      di "encountered.  Generating missing values"
      di "for the mode.  Use the {cmd:maxmode},"
      di "{cmd:minmode}, or {cmd:nummode()} options"
      di "to control this behavior.{p_end}"
      }
      }
      }
    - else {
    - capture assert !missing(`g') if `touse'
    = capture assert !missing(__000001) if __000002
    - if _rc == 9 {
      di "{p}{txt}Warning: at least one group contains all"
      di "missing values or contains multiple modes."
      di "Generating missing values for the mode of these"
      di "groups.  Use the {cmd: missing}, {cmd:maxmode},"
      di "{cmd:minmode}, or {cmd:nummode()}"
      di "options to control this behavior.{p_end}"
      }
    - }
    - }
    - else if "`missing'" != "" & "`maxmode'" == "" & "`minmode'" == "" & "`nummode'" == "" {
    = else if "" != "" & "" == "" & "" == "" & "" == "" {
      capture assert !missing(`g') if `touse'
      if _rc == 9 & `flag_mult_modes' {
      if "`by'" == "" {
      di "{p}{txt}Warning: multiple modes encountered."
      di "Generating missing values for the mode.  Use the"
      di "{cmd:maxmode}, {cmd:minmode}, or {cmd:nummode()}"
      di "options to control this behavior.{p_end}"
      }
      else {
      di "{p}{txt}Warning: at least one group contains"
      di "multiple modes. Generating missing values for"
      di "the mode of these groups. Use the {cmd:maxmode},"
      di "{cmd:minmode}, or {cmd:nummode()}"
      di "options to control this behavior.{p_end}"
      }
      }
      }
    -------------------------------------------------------------------------------------------------------------------- end _gmode ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
  - }
  - rename `dummy' `name'
  = rename __000001 ru_mode
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- replace rural_urban = ru_mode if rural_urban>=.
(26 real changes made)
- drop ru_mode
- recode rural_urban 1/4=0 5/8=1, gen(rural)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"rural_urban 1/4=0 5/8=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : rural_urban, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist rural_urban
    - local n : word count `varlist'
    = local n : word count rural_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var rural_urban
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 1/4=0 5/8=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"rural"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"rural"' != "" {
  - confirm new var `generate'
  = confirm new var rural
  - local nnew : word count `generate'
  = local nnew : word count rural
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "rural" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir rural
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir rural
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label rural
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 1/4=0 5/8=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 1
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(1) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 1 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"8"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 8
    - if !_rc {
    - return local s1 `v'
    = return local s1 8
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 8
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(8)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= 8"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = rural_urban if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type rural_urban
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(rural_urban) >= float(1) & float(rural_urban) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban) >= float(1) & float(rural_urban) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(rural_urban) >= float(5) & float(rural_urban) <= float(8)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban) >= float(5) & float(rural_urban) <= float(8)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(rural_urban) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "rural" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"rural"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of rural
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(1000 differences between rural_urban and rural)"
(1000 differences between rural_urban and rural)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "rural" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of rural
  - gen `g' = `NEW`iv''
  = gen rural = __000003
  - recast `vntype`iv'' `g'
  = recast byte rural
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize rural
    - local stop : word count `varlist'
    = local stop : word count rural
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen byte __000005 = rural
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if rural~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label rural
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format rural
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label rural
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename rural __000005
    - move `RECAST' ``i''
    = move __000005 rural
    - drop ``i''
    = drop rural
    - rename `RECAST' ``i''
    = rename __000005 rural
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label rural_urban
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var rural `"RECODE of rural_urban"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var rural `"RECODE of rural_urban"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- order rural, after(rural_urban)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"rural_urban"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"rural_urban"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"rural_urban"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7 rural
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7 rural
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "rural_urban" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 42 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_s
> ys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-rural_urban
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 42>=1 & 42<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban rural
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"rural_urban"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"rural_urban"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop rural_urban
- }
- rename imd imd_order
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- label define asthmacat 1 "No" 2 "Yes, no OCS" 3 "Yes with OCS"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define asthmacat 1 "No" 2 "Yes, no OCS" 3 "Yes with OCS"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- rename asthma_severity asthmacat
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- recode asthmacat 0=1 1=2 2=3
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"asthmacat 0=1 1=2 2=3"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : asthmacat, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist asthmacat
    - local n : word count `varlist'
    = local n : word count asthmacat
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var asthmacat
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0=1 1=2 2=3"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0=1 1=2 2=3"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"2"', "", "*", "else") & `"2"' != bsubstr("missing", 1, max(3,length(`"2"'))) & `"2"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"2"'))) {
  - if `"`1'"' == "=" {
  = if `"2"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs3 "float(`vn')==float(2)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs3 "`vn'==2"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 3
  - local nrhs = `j'- 1
  = local nrhs = 4- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = asthmacat if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type asthmacat
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 3 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(asthmacat)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(0)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(asthmacat)==float(1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(1)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(asthmacat)==float(2)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(2)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(asthmacat) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = asthmacat if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(asthmacat: 200 changes made)"
(asthmacat: 200 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace asthmacat = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label values asthmacat asthmacat
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" asthmacat"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "asthmacat"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "asthmacat" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist asthmacat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values asthmacat asthmacat 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- replace creatinine = . if !inrange(creatinine, 20, 3000)
(54 real changes made, 54 to missing)
- gen SCr_adj = creatinine/88.4
(54 missing values generated)
- gen min = .
(1,000 missing values generated)
- replace min = SCr_adj/0.7 if male==0
(502 real changes made)
- replace min = SCr_adj/0.9 if male==1
(444 real changes made)
- replace min = min^-0.329 if male==0
(502 real changes made)
- replace min = min^-0.411 if male==1
(444 real changes made)
- replace min = 1 if min<1
(256 real changes made)
- gen max = .
(1,000 missing values generated)
- replace max = SCr_adj/0.7 if male==0
(502 real changes made)
- replace max = SCr_adj/0.9 if male==1
(444 real changes made)
- replace max = max^-1.209
(946 real changes made)
- replace max = 1 if max>1
(744 real changes made)
- gen egfr = min*max*141
(54 missing values generated)
- replace egfr = egfr*(0.993^age)
(941 real changes made)
- replace egfr = egfr*1.018 if male==0
(502 real changes made)
- replace egfr = . if creatinine==.
(0 real changes made)
- drop min max SCr_adj creatinine
- replace hba1c_percentage = . if hba1c_percentage <= 0
(51 real changes made, 51 to missing)
- replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
(65 real changes made, 65 to missing)
- noi summ hba1c_percentage hba1c_mmol_per_mol

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
hba1c_perc~e |        949    5.014358    1.945942   .0655314   11.36441
hba1c_mmol~l |        935    41.41307    18.87081   .5916085   100.1796
- gen hba1c_pct = hba1c_percentage
(51 missing values generated)
- replace hba1c_pct = (hba1c_mmol_per_mol/10.929) + 2.15 if hba1c_mmol_per_mol<.
(935 real changes made)
- replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20)
(0 real changes made)
- replace hba1c_pct = round(hba1c_pct, 0.1)
(998 real changes made)
- drop hba1c_percentage hba1c_mmol_per_mol
- confirm string variable died_date_ons
- rename died_date_ons died_date_ons_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- gen died_date_ons = date(died_date_ons_dstr, "YMD")
(800 missing values generated)
- format died_date_ons %td
- drop died_date_ons_dstr
- gen coviddeath_date = died_date_ons if died_ons_covid_flag_any==1
(958 missing values generated)
- gen otherdeath_date = died_date_ons if died_ons_covid_flag_any!=1
(842 missing values generated)
- drop died_date_ons
- format coviddeath_date otherdeath_date %td
- drop died_ons_covid_flag_any
- confirm string variable covid_admission_date
- rename covid_admission_date covid_admission_date_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- gen covidadmission_date = date(covid_admission_date_dstr, "YMD")
(800 missing values generated)
- format covidadmission_date %td
- drop covid_admission_date_dstr
- confirm string variable sgss_first_positive_test_date
- gen covidpostest_date = date(sgss_first_positive_test_date, "YMD")
(800 missing values generated)
- format covidpostest_date %td
- drop sgss_first_positive_test_date
- label var patient_id "Patient ID"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var patient_id "Patient ID"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var age "Age (years)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var age "Age (years)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var male "Male"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var male "Male"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var imd_order "Ranking of index of Multiple Deprivation (IMD)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var imd_order "Ranking of index of Multiple Deprivation (IMD)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ethnicity_16 "Ethnicity in 16 categories"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ethnicity_16 "Ethnicity in 16 categories"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ethnicity_5 "Ethnicity in 5 categories"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ethnicity_5 "Ethnicity in 5 categories"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stp "Sustainability and Transformation Partnership"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stp "Sustainability and Transformation Partnership"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stpcode "Sustainability and Transformation Partnership"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stpcode "Sustainability and Transformation Partnership"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var region_7 "Geographical region (7 England regions)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var region_7 "Geographical region (7 England regions)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var rural "Rural/urban binary classification"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var rural "Rural/urban binary classification"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var household_id "Household ID"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var household_id "Household ID"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var household_size "Household size"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var household_size "Household size"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var resid_care_old "Residential care, elderly"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var resid_care_old "Residential care, elderly"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var resid_care_ldr "Residential care, learning disability"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var resid_care_ldr "Residential care, learning disability"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var smoke "Smoking status"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var smoke "Smoking status"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bmi "Body Mass Index (BMI, kg/m2)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bmi "Body Mass Index (BMI, kg/m2)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bmi_child_date_measured_date "Date BMI measured (if age<16)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bmi_child_date_measured_date "Date BMI measured (if age<16)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_sys "Systolic blood pressure"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_sys "Systolic blood pressure"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_sys_date "Systolic blood pressure, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_sys_date "Systolic blood pressure, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_dias "Diastolic blood pressure"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_dias "Diastolic blood pressure"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_dias_date "Diastolic blood pressure, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_dias_date "Diastolic blood pressure, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var egfr "Estimated globular filtration rate"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var egfr "Estimated globular filtration rate"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hba1c_pct "Hba1c percentage"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hba1c_pct "Hba1c percentage"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var asthmacat "Asthma"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var asthmacat "Asthma"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cf_date "Cystic fibrosis, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cf_date "Cystic fibrosis, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var respiratory_date "Respiratory disease (excl. asthma), date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var respiratory_date "Respiratory disease (excl. asthma), date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cardiac_date "Heart disease, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cardiac_date "Heart disease, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var af_date "Atrial fibrillation, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var af_date "Atrial fibrillation, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dvt_pe_date "Deep vein thrombosis/pulmonary embolism, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dvt_pe_date "Deep vein thrombosis/pulmonary embolism, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var pad_surg_date "Surgery for peripheral arterial disease, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var pad_surg_date "Surgery for peripheral arterial disease, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var amputate_date "Limb amputation, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var amputate_date "Limb amputation, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var diabetes_date "Diabetes, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var diabetes_date "Diabetes, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hypertension_date "Date of diagnosed hypertension"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hypertension_date "Date of diagnosed hypertension"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var tia_date "Transient ischemic attack, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var tia_date "Transient ischemic attack, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stroke_date "Stroke, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stroke_date "Stroke, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dementia_date "Dementia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dementia_date "Dementia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var neuro_date "Neuro condition other than stroke/dementia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var neuro_date "Neuro condition other than stroke/dementia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var lung_cancer_date "Lung cancer, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var lung_cancer_date "Lung cancer, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var other_cancer_date "Other cancer, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var other_cancer_date "Other cancer, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var haem_cancer_date "Haematological malignancy, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var haem_cancer_date "Haematological malignancy, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var liver_date "Liver, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var liver_date "Liver, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dialysis_date "Dialysis, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dialysis_date "Dialysis, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var transplant_kidney_date "Kidney transplant recipient, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var transplant_kidney_date "Kidney transplant recipient, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var transplant_notkidney_date "Organ (not kidney) transplant recipient, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var transplant_notkidney_date "Organ (not kidney) transplant recipient, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dysplenia_date "Dysplenia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dysplenia_date "Dysplenia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var sickle_cell_date "Sickle cell, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var sickle_cell_date "Sickle cell, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var aplastic_anaemia_date "Aplastic anaemia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var aplastic_anaemia_date "Aplastic anaemia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var autoimmune_date "RA, SLE, Psoriasis (autoimmune disease), date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var autoimmune_date "RA, SLE, Psoriasis (autoimmune disease), date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hiv_date "HIV, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hiv_date "HIV, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var perm_immuno_date "Conditions causing permanent immunosuppression, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var perm_immuno_date "Conditions causing permanent immunosuppression, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var temp_immuno_date "Conditions causing temporary immunosuppression, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var temp_immuno_date "Conditions causing temporary immunosuppression, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ibd_date "IBD, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ibd_date "IBD, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var fracture_date "Fracture, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var fracture_date "Fracture, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var smi_date "Serious mental illness, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var smi_date "Serious mental illness, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ldr_date "Learning disability register, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ldr_date "Learning disability register, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ld_profound_date "Profound/severe learning disability, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ld_profound_date "Profound/severe learning disability, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ds_date "Down's Syndrome, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ds_date "Down's Syndrome, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cp_date "Cerebral Palsy, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cp_date "Cerebral Palsy, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var coviddeath_date "Date of ONS COVID-19 death"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var coviddeath_date "Date of ONS COVID-19 death"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var otherdeath_date "Date of ONS non-COVID-19 death"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var otherdeath_date "Date of ONS non-COVID-19 death"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var covidadmission_date "Date of COVID-19 hospital admission"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var covidadmission_date "Date of COVID-19 hospital admission"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var covidpostest_date "SGSS first positive test"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var covidpostest_date "SGSS first positive test"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- sort patient_id
- order patient_id stp* region_7 imd* rural household* resid_care_old resid_care_ldr age male bmi* smoke* ethnicity* respiratory* asthm
> a* cf* cardiac* diabetes* hba1c* bp_sys bp_sys_date bp_dias bp_dias_date hypertension* af* dvt_pe* pad* amputate* stroke* dementia* n
> euro* tia* lung_cancer* haem_cancer* other_cancer* transplant_kidney* dialysis* liver* transplant_notkidney* dysplenia* sickle* hiv* 
> perm* temp* aplastic* autoimmune* ibd* smi* fracture* smi* ld* fracture* coviddeath_date otherdeath_date covidadmission_date covidpos
> test_date
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `""' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
  - _order `macval(0)'
  = _order patient_id stp* region_7 imd* rural household* resid_care_old resid_care_ldr age male bmi* smoke* ethnicity* respiratory* as
> thma* cf* cardiac* diabetes* hba1c* bp_sys bp_sys_date bp_dias bp_dias_date hypertension* af* dvt_pe* pad* amputate* stroke* dementia
> * neuro* tia* lung_cancer* haem_cancer* other_cancer* transplant_kidney* dialysis* liver* transplant_notkidney* dysplenia* sickle* hi
> v* perm* temp* aplastic* autoimmune* ibd* smi* fracture* smi* ld* fracture* coviddeath_date otherdeath_date covidadmission_date covid
> postest_date
  - exit
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- sort patient_id
- if "`index_date'" == "2020-03-01" {
= if "2020-03-01" == "2020-03-01" {
- label data "Base cohort dataset (wave 1), index date 1st March 2020"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("data", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label data "Base cohort dataset (wave 1), index date 1st March 2020"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- save "analysis/data_base_cohort1.dta", replace
file analysis/data_base_cohort1.dta saved
- }
- else if "`index_date'" == "2020-09-01" {
= else if "2020-03-01" == "2020-09-01" {
  label data "Base cohort dataset (wave 2), index date 1st September 2020"
  save "analysis/data_base_cohort2.dta", replace
  }
- }
- if `i'==1 {
= if 2==1 {
  local index_date = "2020-03-01"
  }
- else if `i'==2 {
= else if 2==2 {
- local index_date = "2020-09-01"
- }
- noi di "`index_date'"
= noi di "2020-09-01"
2020-09-01
- local index = date(subinstr("`index_date'", "-", "/", .), "YMD")
= local index = date(subinstr("2020-09-01", "-", "/", .), "YMD")
- import delimited output/input_`index_date'.csv, clear
= import delimited output/input_2020-09-01.csv, clear
  -------------------------------------------------------------------------------------------------------------------- begin import ---
  - version 12
  - local version : di "version " string(_caller()) ":"
  - gettoken subcmd 0 : 0, parse(" ,")
  - if `"`subcmd'"' == "dbase" {
  = if `"delimited"' == "dbase" {
    `version' ImpDbase `macval(0)'
    }
  - else if `"`subcmd'"' == "delim" {
  = else if `"delimited"' == "delim" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimi" {
  = else if `"delimited"' == "delimi" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimit" {
  = else if `"delimited"' == "delimit" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimite" {
  = else if `"delimited"' == "delimite" {
    `version' ImpDelim `macval(0)'
    }
  - else if `"`subcmd'"' == "delimited" {
  = else if `"delimited"' == "delimited" {
  - `version' ImpDelim `macval(0)'
  = version 16.1: ImpDelim  output/input_2020-09-01.csv, clear
    --------------------------------------------------------------------------------------------------------- begin import.ImpDelim ---
    - version 13
    - local version : di "version " string(_caller()) ":"
    - `version' import_delimited `macval(0)'
    = version 16.1: import_delimited output/input_2020-09-01.csv, clear
      ------------------------------------------------------------------------------------------------------ begin import_delimited ---
      - local ver : display "version " string(_caller()) ", missing:"
      - version 14
      - gettoken filename rest : 0, parse(" ,")
      - gettoken comma : rest, parse(" ,")
      - if (`"`filename'"' != "" & (trim(`"`comma'"') == "," | trim(`"`comma'"') == "")) {
      = if (`"output/input_2020-09-01.csv"' != "" & (trim(`","') == "," | trim(`","') == "")) {
      - local 0 `"using `0'"'
      = local 0 `"using output/input_2020-09-01.csv, clear"'
      - }
      - capture syntax using/ [, DELIMiters(string asis) ROWRange(string) COLRange(string) VARNames(string) case(string) ASDOUBle ASFLO
> at FAVORSTRFixed clear BINDQuotes(string) STRIPQuotes(string) NUMERICCols(string) STRINGCols(string) CHARSET(string) ENCoding(string)
>  PARSELocale(string) GROUPSeparator(string) DECIMALSeparator(string) MAXQUOTEDRows(string) COLLAPSEDelimiters]
      - if _rc {
        syntax [anything(name=vlist id="vlist")] using/ [, DELIMiters(string asis) ROWRange(string) COLRange(string) VARNames(string) c
> ase(string) ASDOUBle ASFLOat FAVORSTRFixed clear BINDQuotes(string) STRIPQuotes(string) NUMERICCols(string) STRINGCols(string) CHARSE
> T(string) ENCoding(string) PARSELocale(string) GROUPSeparator(string) DECIMALSeparator(string) MAXQUOTEDRows(string) COLLAPSEDelimite
> rs]
        }
      - mata:import_delim_import_file()
        --------------------------------------------------------------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ------------------------------------------------------------------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          --------------------------------------------------------------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        ----------------------------------------------------------------------------------------------------------------- end clear ---
        --------------------------------------------------------------------------------------------------------------- begin clear ---
        - if _caller() < 10 {
          _clear_9 `0'
          exit
          }
        - version 10
        - syntax [anything]
        - tokenize `anything'
        = tokenize 
        - if `"`2'"' != "" {
        = if `""' != "" {
          display as err "`2' not allowed"
          exit 198
          }
        - if "`1'"=="" {
        = if ""=="" {
        - drop _all
        - label drop _all
          ------------------------------------------------------------------------------------------------------------- begin label ---
          - version 10.0
          - local vv : display "version " string(_caller()) ", missing:"
          - gettoken val : 0
          - if (strpos("`val'", "val") > 0 ) {
          = if (strpos("drop", "val") > 0 ) {
            gettoken val 0 : 0
            syntax anything [, nofix]
            if "`fix'" != "" {
            local fix ", nofix"
            }
            gettoken var rest : anything
            while `"`rest'"' != "" {
            gettoken lab rest : rest
            local label "`lab'"
            }
            local vlist : list anything - lab
            if "`lab'" == "." {
            local lab ""
            }
            foreach var of varlist `vlist' {
            `vv' _label `val' `var' `lab' `fix'
            }
            }
          - else {
          - `vv' _label `macval(0)'
          = version 10, missing: _label drop _all
          - }
          --------------------------------------------------------------------------------------------------------------- end label ---
        - }
        - else if "`1'"=="frames" {
        = else if ""=="frames" {
          frames reset
          }
        - else if "`1'"=="mata" {
        = else if ""=="mata" {
          mata: mata clear
          }
        - else if "`1'"=="python" {
        = else if ""=="python" {
          python clear
          }
        - else if inlist("`1'", "results", "matrix") {
        = else if inlist("", "results", "matrix") {
          return clear
          clearreturn
          ereturn clear
          sreturn clear
          _return drop _all
          if ("`1'" == "matrix") {
          matrix drop _all
          _est drop _all
          }
          }
        - else if "`1'"=="programs" {
        = else if ""=="programs" {
          program drop _all
          }
        - else if "`1'"=="ado" {
        = else if ""=="ado" {
          program drop _allado
          }
        - else if "`1'"=="rngstream" | "`1'"=="rngstreams" {
        = else if ""=="rngstream" | ""=="rngstreams" {
          set rngstream clear
          }
        - else if "`1'"=="*" | "`1'"=="all" {
        = else if ""=="*" | ""=="all" {
          capture mata: st_local("semmods", strofreal(sg__global.hasmodels()))
          capture
          if (0`semmods') {
          display as err "-clear all- not allowed while an SEM Builder is open"
          exit 1
          }
          drop _all
          frames reset
          label drop _all
          matrix drop _all
          scalar drop _all
          constraint drop _all
          eq drop _all
          file close _all
          postutil clear
          _return drop _all
          discard
          program drop _all
          timer clear
          mata: _st__put_cmd_clear()
          mata: mata clear
          python clear
          }
        - else {
          display as err "`1' not allowed"
          exit 198
          }
        ----------------------------------------------------------------------------------------------------------------- end clear ---
(63 vars, 1,000 obs)
      - return add
      -------------------------------------------------------------------------------------------------------- end import_delimited ---
    ----------------------------------------------------------------------------------------------------------- end import.ImpDelim ---
  - }
  - else if `"`subcmd'"' == "exc" {
  = else if `"delimited"' == "exc" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "exce" {
  = else if `"delimited"' == "exce" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "excel" {
  = else if `"delimited"' == "excel" {
    ImpExcel `macval(0)'
    }
  - else if `"`subcmd'"' == "fred" {
  = else if `"delimited"' == "fred" {
    ImpFred `macval(0)'
    }
  - else if `"`subcmd'"' == "hav" {
  = else if `"delimited"' == "hav" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "have" {
  = else if `"delimited"' == "have" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "haver" {
  = else if `"delimited"' == "haver" {
    ImpHaver `macval(0)'
    }
  - else if `"`subcmd'"' == "sas" {
  = else if `"delimited"' == "sas" {
    ImpSas `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport5" {
  = else if `"delimited"' == "sasxport5" {
    ImpSasxport5 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport8" {
  = else if `"delimited"' == "sasxport8" {
    ImpSasxport8 `macval(0)'
    }
  - else if `"`subcmd'"' == "sasxport" {
  = else if `"delimited"' == "sasxport" {
    if (_caller() < 16) {
    ImpSasxport5 `macval(0)'
    }
    else {
    di as error "invalid syntax"
    di as error "   specify either {cmd:import sasxport5} or {cmd:import sasxport8}"
    exit 198
    }
    }
  - else if `"`subcmd'"' == "shp" {
  = else if `"delimited"' == "shp" {
    ImpShape `macval(0)'
    }
  - else if `"`subcmd'"' == "spss" {
  = else if `"delimited"' == "spss" {
    ImpSpss `macval(0)'
    }
  - else {
    display as error `"import: unknown subcommand "`subcmd'""'
    exit 198
    }
  ---------------------------------------------------------------------------------------------------------------------- end import ---
- gen tempold = (age>=65)
- replace tempold = . if age>=.
(0 real changes made)
- gen templdr = (ldr != "")
- bysort household_id: egen num_old = sum(tempold)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"num_old"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable num_old
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gsum.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gsum.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gsum.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"tempold"' == "_all" | `"tempold"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(household_id)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname num_old
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("sum","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gsum float __000001 = (tempold)   , by(household_id) 
    ------------------------------------------------------------------------------------------------------------------- begin _gsum ---
    - _gtotal `0'
    = _gtotal float __000001 = (tempold)   , by(household_id) 
      --------------------------------------------------------------------------------------------------------------- begin _gtotal ---
      - version 16.1, missing
      - syntax newvarname =/exp [if/] [in] [, BY(varlist) Missing ]
      - global EGEN_Message 1
      - if (`"`if'"' != "") {
      = if (`""' != "") {
        local ifif `"if `if'"'
        local andif `"& (`if')"'
        local timesif `"(`if')*"'
        }
      - tempvar x
      - if ("`by'" == "") {
      = if ("household_id" == "") {
        _expression_to_variable `exp' `in', varname(`x')
        local x `s(varname)'
        summarize `x' `ifif' `in', meanonly
        if ("`missing'" != "" & r(N) == 0) {
        gen `typlist' `varlist' = .
        }
        else {
        gen `typlist' `varlist' = r(sum) `ifif' `in'
        }
        }
      - else {
      - if ("`in'" != "") {
      = if ("" != "") {
        marksample touse, novarlist
        local ifif if `touse'
        local andif & `touse'
        local timesif `touse'*
        }
      - sort `by'
      = sort household_id
      - if ("`missing'" != "") {
      = if ("" != "") {
        qui by `by': gen double `x' = cond(sum((`exp') < . `andif') > 0, sum(`timesif'(`exp')), .)
        }
      - else {
      - qui by `by': gen double `x' = sum(`timesif'(`exp'))
      = qui by household_id: gen double __000002 = sum(((tempold)   ))
      - }
      - by `by': gen `typlist' `varlist' = `x'[_N] `ifif'
      = by household_id: gen float __000001 = __000002[_N] 
      - }
      ----------------------------------------------------------------------------------------------------------------- end _gtotal ---
    --------------------------------------------------------------------------------------------------------------------- end _gsum ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 1
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "1" == "" {
    quietly count if missing(`dummy')
    if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
    }
  - rename `dummy' `name'
  = rename __000001 num_old
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- bysort household_id: egen num_ldr = sum(templdr)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"num_ldr"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable num_ldr
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gsum.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gsum.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gsum.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gsum.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gsum.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"templdr"' == "_all" | `"templdr"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(household_id)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname num_ldr
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("sum","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gsum float __000001 = (templdr)   , by(household_id) 
    ------------------------------------------------------------------------------------------------------------------- begin _gsum ---
    - _gtotal `0'
    = _gtotal float __000001 = (templdr)   , by(household_id) 
      --------------------------------------------------------------------------------------------------------------- begin _gtotal ---
      - version 16.1, missing
      - syntax newvarname =/exp [if/] [in] [, BY(varlist) Missing ]
      - global EGEN_Message 1
      - if (`"`if'"' != "") {
      = if (`""' != "") {
        local ifif `"if `if'"'
        local andif `"& (`if')"'
        local timesif `"(`if')*"'
        }
      - tempvar x
      - if ("`by'" == "") {
      = if ("household_id" == "") {
        _expression_to_variable `exp' `in', varname(`x')
        local x `s(varname)'
        summarize `x' `ifif' `in', meanonly
        if ("`missing'" != "" & r(N) == 0) {
        gen `typlist' `varlist' = .
        }
        else {
        gen `typlist' `varlist' = r(sum) `ifif' `in'
        }
        }
      - else {
      - if ("`in'" != "") {
      = if ("" != "") {
        marksample touse, novarlist
        local ifif if `touse'
        local andif & `touse'
        local timesif `touse'*
        }
      - sort `by'
      = sort household_id
      - if ("`missing'" != "") {
      = if ("" != "") {
        qui by `by': gen double `x' = cond(sum((`exp') < . `andif') > 0, sum(`timesif'(`exp')), .)
        }
      - else {
      - qui by `by': gen double `x' = sum(`timesif'(`exp'))
      = qui by household_id: gen double __000002 = sum(((templdr)   ))
      - }
      - by `by': gen `typlist' `varlist' = `x'[_N] `ifif'
      = by household_id: gen float __000001 = __000002[_N] 
      - }
      ----------------------------------------------------------------------------------------------------------------- end _gtotal ---
    --------------------------------------------------------------------------------------------------------------------- end _gsum ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 1
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "1" == "" {
    quietly count if missing(`dummy')
    if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
    }
  - rename `dummy' `name'
  = rename __000001 num_ldr
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- recode num_old 0/4=0 5/max=1, gen(resid_care_old)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"num_old 0/4=0 5/max=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : num_old, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist num_old
    - local n : word count `varlist'
    = local n : word count num_old
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var num_old
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0/4=0 5/max=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"resid_care_old"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"resid_care_old"' != "" {
  - confirm new var `generate'
  = confirm new var resid_care_old
  - local nnew : word count `generate'
  = local nnew : word count resid_care_old
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "resid_care_old" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir resid_care_old
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir resid_care_old
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label resid_care_old
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0/4=0 5/max=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 0
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(0) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 0 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = num_old if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type num_old
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ num_old if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "3" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(num_old) >= float(0) & float(num_old) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_old) >= float(0) & float(num_old) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(num_old) >= float(5) & float(num_old) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_old) >= float(5) & float(num_old) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(num_old) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "resid_care_old" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"resid_care_old"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of resid_care_old
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(393 differences between num_old and resid_care_old)"
(393 differences between num_old and resid_care_old)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "resid_care_old" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of resid_care_old
  - gen `g' = `NEW`iv''
  = gen resid_care_old = __000003
  - recast `vntype`iv'' `g'
  = recast float resid_care_old
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize resid_care_old
    - local stop : word count `varlist'
    = local stop : word count resid_care_old
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = resid_care_old
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if resid_care_old~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label resid_care_old
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format resid_care_old
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label resid_care_old
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename resid_care_old __000005
    - move `RECAST' ``i''
    = move __000005 resid_care_old
    - drop ``i''
    = drop resid_care_old
    - rename `RECAST' ``i''
    = rename __000005 resid_care_old
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label num_old
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var resid_care_old `"RECODE of num_old"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var resid_care_old `"RECODE of num_old"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- recode num_ldr 0/4=0 5/max=1, gen(resid_care_ldr)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"num_ldr 0/4=0 5/max=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : num_ldr, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist num_ldr
    - local n : word count `varlist'
    = local n : word count num_ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var num_ldr
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0/4=0 5/max=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"resid_care_ldr"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"resid_care_ldr"' != "" {
  - confirm new var `generate'
  = confirm new var resid_care_ldr
  - local nnew : word count `generate'
  = local nnew : word count resid_care_ldr
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "resid_care_ldr" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir resid_care_ldr
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir resid_care_ldr
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label resid_care_ldr
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0/4=0 5/max=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 0
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(0) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 0 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = num_ldr if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type num_ldr
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ num_ldr if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "3" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(num_ldr) >= float(0) & float(num_ldr) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_ldr) >= float(0) & float(num_ldr) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(num_ldr) >= float(5) & float(num_ldr) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(num_ldr) >= float(5) & float(num_ldr) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(num_ldr) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "resid_care_ldr" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"resid_care_ldr"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of resid_care_ldr
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(394 differences between num_ldr and resid_care_ldr)"
(394 differences between num_ldr and resid_care_ldr)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "resid_care_ldr" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of resid_care_ldr
  - gen `g' = `NEW`iv''
  = gen resid_care_ldr = __000003
  - recast `vntype`iv'' `g'
  = recast float resid_care_ldr
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize resid_care_ldr
    - local stop : word count `varlist'
    = local stop : word count resid_care_ldr
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = resid_care_ldr
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if resid_care_ldr~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label resid_care_ldr
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format resid_care_ldr
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label resid_care_ldr
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename resid_care_ldr __000005
    - move `RECAST' ``i''
    = move __000005 resid_care_ldr
    - drop ``i''
    = drop resid_care_ldr
    - rename `RECAST' ``i''
    = rename __000005 resid_care_ldr
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label num_ldr
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var resid_care_ldr `"RECODE of num_ldr"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var resid_care_ldr `"RECODE of num_ldr"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- drop templdr tempold num_old num_ldr
- order resid_care_old resid_care_ldr, after(household_id)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"household_id"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"household_id"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"household_id"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"household_id"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dem
> entia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv 
> perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1
> c_mmol_per_mol hba1c_percentage asthma_severity patient_id resid_care_old resid_care_ldr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id resid_care_old resid_care_ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 65>=1 & 65<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "household_id" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 48 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension st
> roke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_c
> ell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urba
> n stp region imd household_id household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_d
> ias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-household_id
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dem
> entia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv 
> perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension str
> oke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_ce
> ll hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 48>=1 & 48<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension stroke dementia neu
> ro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immu
> no temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd 
> household_id resid_care_old resid_care_ldr
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"household_id"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"household_id"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- di "STARTING COUNT FROM IMPORT:"
STARTING COUNT FROM IMPORT:
- noi count
  1,000
- qui summ age
- noi di "DROPPING AGE>105:"
DROPPING AGE>105:
- drop if age>105
(0 observations deleted)
- noi di "DROPPING AGE<0:"
DROPPING AGE<0:
- drop if age<0
(0 observations deleted)
- assert inrange(age, 0, 105)
- assert inlist(sex, "M", "F", "I", "U")
- noi di "DROPPING GENDER NOT M/F:"
DROPPING GENDER NOT M/F:
- drop if inlist(sex, "I", "U")
(0 observations deleted)
- noi di "DROPPING IF STP MISSING:"
DROPPING IF STP MISSING:
- drop if stp==""
(0 observations deleted)
- noi di "DROPPING IF NO IMD"
DROPPING IF NO IMD
- capture confirm string var imd
- if _rc==0 {
  drop if imd==""
  }
- else {
- drop if imd>=.
(0 observations deleted)
- drop if imd==-1
(0 observations deleted)
- }
- noi di "DROPPING IF DIED BEFORE INDEX DATE"
DROPPING IF DIED BEFORE INDEX DATE
- confirm string variable died_date_ons
- gen temp = date(died_date_ons, "YMD")
(800 missing values generated)
- drop if temp < `index'
= drop if temp < 22159
(117 observations deleted)
- drop temp
- foreach var of varlist cf respiratory cardiac hypertension af dvt_pe pad_surg amputate diabetes tia stroke dementia neuro lung_cancer
>  haem_cancer other_cancer liver transplant_notkidney transplant_kidney dialysis dysplenia sickle_cell hiv perm_immuno aplastic_anaemi
> a temp_immuno autoimmune ibd fracture smi ldr ld_profound ds cp {
- capture confirm string variable `var'
= capture confirm string variable cf
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cf = cf + "-15"
variable cf was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename cf cf_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cf_dstr = " " if cf_dstr == "-15"
(712 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cf_date = date(cf_dstr, "YMD")
(712 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cf_date, after(cf_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cf_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cf_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cf_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertension strok
> e dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell
>  hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban s
> tp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_c
> hild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cf_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cf_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cf_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 9 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr respiratory cardiac af dvt_pe pad_surg amputate diabetes hypertensio
> n stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sick
> le_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cf_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 9>=1 & 9<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_dstr cf_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cf_dstr
- }
- format `var'_date %td
= format cf_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable respiratory
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace respiratory = respiratory + "-15"
variable respiratory was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename respiratory respiratory_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace respiratory_dstr = " " if respiratory_dstr == "-15"
(711 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen respiratory_date = date(respiratory_dstr, "YMD")
(711 missing values generated)
- order `var'_date, after(`var'_dstr)
= order respiratory_date, after(respiratory_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"respiratory_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"respiratory_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"respiratory_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypertension 
> stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia sickle
> _cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_ur
> ban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult 
> bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id respiratory_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypert
> ension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia
>  sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id respiratory_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "respiratory_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hypert
> ension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia
>  sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 10 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr cardiac af dvt_pe pad_surg amputate diabetes hyper
> tension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dyspleni
> a sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any 
> rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bm
> i_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-respiratory_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 10>=1 & 10<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_dstr respiratory_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop respiratory_dstr
- }
- format `var'_date %td
= format respiratory_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable cardiac
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cardiac = cardiac + "-15"
variable cardiac was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename cardiac cardiac_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cardiac_dstr = " " if cardiac_dstr == "-15"
(709 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cardiac_date = date(cardiac_dstr, "YMD")
(709 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cardiac_date, after(cardiac_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cardiac_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cardiac_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cardiac_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes hyperten
> sion stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysplenia s
> ickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rur
> al_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_a
> dult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cardiac_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes h
> ypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysp
> lenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cardiac_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cardiac_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes h
> ypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysp
> lenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 11 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr af dvt_pe pad_surg amputate diabetes 
> hypertension stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dys
> plenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag
> _any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_stat
> us bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cardiac_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 11>=1 & 11<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_dstr cardiac_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cardiac_dstr
- }
- format `var'_date %td
= format cardiac_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable hypertension
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace hypertension = hypertension + "-15"
variable hypertension was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename hypertension hypertension_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace hypertension_dstr = " " if hypertension_dstr == "-15"
(702 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen hypertension_date = date(hypertension_dstr, "YMD")
(702 missing values generated)
- order `var'_date, after(`var'_dstr)
= order hypertension_date, after(hypertension_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"hypertension_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"hypertension_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"hypertension_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hyperten
> sion_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney dysple
> nia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_an
> y rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status 
> bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hypertension_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney
>  dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hypertension_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "hypertension_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney
>  dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 17 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes 
> hypertension_dstr stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidne
> y dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid
> _flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking
> _status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-hypertension_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hyperten
> sion_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes h
> ypertension_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 17>=1 & 17<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af dvt_pe pad_surg amputate diabetes hypertension_dstr
>  hypertension_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hypertension_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop hypertension_dstr
- }
- format `var'_date %td
= format hypertension_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable af
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace af = af + "-15"
variable af was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename af af_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace af_dstr = " " if af_dstr == "-15"
(707 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen af_date = date(af_dstr, "YMD")
(707 missing values generated)
- order `var'_date, after(`var'_dstr)
= order af_date, after(af_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"af_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"af_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"af_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"af_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabetes hyp
> ertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkidney d
> ysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_fl
> ag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_st
> atus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id af_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabe
> tes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notk
> idney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id af_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "af_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diabe
> tes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notk
> idney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 12 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr dvt_pe pad_surg amputate diab
> etes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_not
> kidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_
> covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 sm
> oking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-af_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 12>=1 & 12<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_dstr af_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop af_dstr
- }
- format `var'_date %td
= format af_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dvt_pe
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dvt_pe = dvt_pe + "-15"
variable dvt_pe was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename dvt_pe dvt_pe_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dvt_pe_dstr = " " if dvt_pe_dstr == "-15"
(704 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dvt_pe_date = date(dvt_pe_dstr, "YMD")
(704 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dvt_pe_date, after(dvt_pe_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dvt_pe_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dvt_pe_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dvt_pe_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate diabete
> s hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_notkid
> ney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_cov
> id_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoki
> ng_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dvt_pe_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate 
> diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant
> _notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dvt_pe_
> date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dvt_pe_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate 
> diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant
> _notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 13 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr pad_surg amputate
>  diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplan
> t_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died
> _ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_
> 16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dvt_pe_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 13>=1 & 13<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_dstr dvt_pe_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dvt_pe_dstr
- }
- format `var'_date %td
= format dvt_pe_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable pad_surg
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace pad_surg = pad_surg + "-15"
variable pad_surg was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename pad_surg pad_surg_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace pad_surg_dstr = " " if pad_surg_dstr == "-15"
(711 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen pad_surg_date = date(pad_surg_dstr, "YMD")
(711 missing values generated)
- order `var'_date, after(`var'_dstr)
= order pad_surg_date, after(pad_surg_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"pad_surg_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"pad_surg_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"pad_surg_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr amputate di
> abetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transplant_n
> otkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_on
> s_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 
> smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id pad_surg_
> date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr ampu
> tate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver trans
> plant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp 
> died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnic
> ity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id pa
> d_surg_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "pad_surg_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr ampu
> tate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver trans
> plant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp 
> died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnic
> ity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 14 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr amp
> utate diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver tran
> splant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp
>  died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethni
> city_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-pad_surg_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 14>=1 & 14<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_dstr pad_surg_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"pad_surg_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop pad_surg_dstr
- }
- format `var'_date %td
= format pad_surg_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable amputate
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace amputate = amputate + "-15"
variable amputate was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename amputate amputate_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace amputate_dstr = " " if amputate_dstr == "-15"
(709 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen amputate_date = date(amputate_dstr, "YMD")
(709 missing values generated)
- order `var'_date, after(`var'_dstr)
= order amputate_date, after(amputate_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"amputate_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"amputate_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"amputate_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_ds
> tr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver transpl
> ant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp di
> ed_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicit
> y_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ampu
> tate_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver 
> transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound d
> s cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity e
> thnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_
> id amputate_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "amputate_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver 
> transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound d
> s cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity e
> thnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_
> id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 15 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_dstr diabetes hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver
>  transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound 
> ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity 
> ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient
> _id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-amputate_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_ds
> tr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 15>=1 & 15<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_dstr amputa
> te_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"amputate_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop amputate_dstr
- }
- format `var'_date %td
= format amputate_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable diabetes
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace diabetes = diabetes + "-15"
variable diabetes was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename diabetes diabetes_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace diabetes_dstr = " " if diabetes_dstr == "-15"
(712 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen diabetes_date = date(diabetes_dstr, "YMD")
(712 missing values generated)
- order `var'_date, after(`var'_dstr)
= order diabetes_date, after(diabetes_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"diabetes_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"diabetes_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"diabetes_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis liver tr
> ansplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds 
> cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity eth
> nicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
>  diabetes_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis l
> iver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profo
> und ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnic
> ity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pat
> ient_id diabetes_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "diabetes_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis l
> iver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profo
> und ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnic
> ity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pat
> ient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 16 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_dstr hypertension_date stroke dementia neuro tia lung_cancer haem_cancer other_cancer transplant_kidney dialysis 
> liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_prof
> ound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethni
> city ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity pa
> tient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-diabetes_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 16>=1 & 16<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_dstr diabetes_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop diabetes_dstr
- }
- format `var'_date %td
= format diabetes_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable tia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace tia = tia + "-15"
variable tia was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename tia tia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace tia_dstr = " " if tia_dstr == "-15"
(702 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen tia_date = date(tia_dstr, "YMD")
(702 missing values generated)
- order `var'_date, after(`var'_dstr)
= order tia_date, after(tia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"tia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"tia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"tia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialysis liv
> er transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profoun
> d ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicit
> y ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patie
> nt_id tia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialy
> sis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_
> profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex e
> thnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severit
> y patient_id tia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "tia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dialy
> sis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_
> profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex e
> thnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severit
> y patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 21 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr lung_cancer haem_cancer other_cancer transplant_kidney dial
> ysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld
> _profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex 
> ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severi
> ty patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-tia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke dementia neuro tia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke dementia neuro tia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 21>=1 & 21<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke dementia neuro tia_dstr tia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop tia_dstr
- }
- format `var'_date %td
= format tia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable stroke
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace stroke = stroke + "-15"
variable stroke was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename stroke stroke_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace stroke_dstr = " " if stroke_dstr == "-15"
(713 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen stroke_date = date(stroke_dstr, "YMD")
(713 missing values generated)
- order `var'_date, after(`var'_dstr)
= order stroke_date, after(stroke_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"stroke_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"stroke_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"stroke_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney dialysi
> s liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_pr
> ofound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex eth
> nicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity 
> patient_id stroke_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney 
> dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ld
> r ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age 
> sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_se
> verity patient_id stroke_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "stroke_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney 
> dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ld
> r ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age 
> sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_se
> verity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 18 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_dstr dementia neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney
>  dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture l
> dr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age
>  sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_s
> everity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-stroke_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 18>=1 & 18<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_dstr stroke_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop stroke_dstr
- }
- format `var'_date %td
= format stroke_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dementia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dementia = dementia + "-15"
variable dementia was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename dementia dementia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dementia_dstr = " " if dementia_dstr == "-15"
(715 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dementia_date = date(dementia_dstr, "YMD")
(715 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dementia_date, after(dementia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dementia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dementia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dementia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_kidney di
> alysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr 
> ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age se
> x ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_seve
> rity patient_id dementia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_ki
> dney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fractu
> re ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size
>  age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asth
> ma_severity patient_id dementia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dementia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_ki
> dney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fractu
> re ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size
>  age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asth
> ma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 19 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_dstr neuro tia_date lung_cancer haem_cancer other_cancer transplant_k
> idney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fract
> ure ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_siz
> e age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage ast
> hma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dementia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 19>=1 & 19<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_dstr dementia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dementia_dstr
- }
- format `var'_date %td
= format dementia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable neuro
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace neuro = neuro + "-15"
variable neuro was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename neuro neuro_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace neuro_dstr = " " if neuro_dstr == "-15"
(710 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen neuro_date = date(neuro_dstr, "YMD")
(710 missing values generated)
- order `var'_date, after(`var'_dstr)
= order neuro_date, after(neuro_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"neuro_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"neuro_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"neuro_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transplant_kidn
> ey dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fracture
>  ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size a
> ge sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma
> _severity patient_id neuro_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpla
> nt_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi f
> racture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household
> _size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage
>  asthma_severity patient_id neuro_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "neuro_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpla
> nt_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi f
> racture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household
> _size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage
>  asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 20 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr tia_date lung_cancer haem_cancer other_cancer transpl
> ant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi 
> fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr househol
> d_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentag
> e asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-neuro_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 20>=1 & 20<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_dstr neuro_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop neuro_dstr
- }
- format `var'_date %td
= format neuro_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable lung_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace lung_cancer = lung_cancer + "-15"
variable lung_cancer was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename lung_cancer lung_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace lung_cancer_dstr = " " if lung_cancer_dstr == "-15"
(711 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen lung_cancer_date = date(lung_cancer_dstr, "YMD")
(711 missing values generated)
- order `var'_date, after(`var'_dstr)
= order lung_cancer_date, after(lung_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"lung_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"lung_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"lung_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer transplant
> _kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd smi fra
> cture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_s
> ize age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage a
> sthma_severity patient_id lung_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tra
> nsplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd 
> smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hous
> ehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perce
> ntage asthma_severity patient_id lung_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "lung_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tra
> nsplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd 
> smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hous
> ehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perce
> ntage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 22 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr haem_cancer other_cancer tr
> ansplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd
>  smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr hou
> sehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_perc
> entage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-lung_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 22>=1 & 22<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_dstr lung_cancer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"lung_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop lung_cancer_dstr
- }
- format `var'_date %td
= format lung_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable haem_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace haem_cancer = haem_cancer + "-15"
variable haem_cancer was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename haem_cancer haem_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace haem_cancer_dstr = " " if haem_cancer_dstr == "-15"
(702 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen haem_cancer_date = date(haem_cancer_dstr, "YMD")
(702 missing values generated)
- order `var'_date, after(`var'_dstr)
= order haem_cancer_date, after(haem_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"haem_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"haem_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"haem_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cancer trans
> plant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune ibd sm
> i fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr househ
> old_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percent
> age asthma_severity patient_id haem_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cance
> r transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune
>  ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr
>  household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_
> percentage asthma_severity patient_id haem_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "haem_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_cance
> r transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune
>  ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr
>  household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_
> percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 23 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr other_canc
> er transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmun
> e ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ld
> r household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c
> _percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-haem_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 23>=1 & 23<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_dstr haem_cancer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"haem_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop haem_cancer_dstr
- }
- format `var'_date %td
= format haem_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable other_cancer
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace other_cancer = other_cancer + "-15"
variable other_cancer was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename other_cancer other_cancer_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace other_cancer_dstr = " " if other_cancer_dstr == "-15"
(703 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen other_cancer_date = date(other_cancer_dstr, "YMD")
(703 missing values generated)
- order `var'_date, after(`var'_dstr)
= order other_cancer_date, after(other_cancer_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"other_cancer_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"other_cancer_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"other_cancer_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr 
> transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimmune i
> bd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr h
> ousehold_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_pe
> rcentage asthma_severity patient_id other_cancer_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoi
> mmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_car
> e_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol h
> ba1c_percentage asthma_severity patient_id other_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "other_cancer_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoi
> mmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_car
> e_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol h
> ba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 24 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_dstr transplant_kidney dialysis liver transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia auto
> immune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_ca
> re_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol 
> hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-other_cancer_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 24>=1 & 24<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_dstr other_can
> cer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop other_cancer_dstr
- }
- format `var'_date %td
= format other_cancer_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable liver
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace liver = liver + "-15"
variable liver was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename liver liver_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace liver_dstr = " " if liver_dstr == "-15"
(707 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen liver_date = date(liver_dstr, "YMD")
(707 missing values generated)
- order `var'_date, after(`var'_dstr)
= order liver_date, after(liver_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"liver_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"liver_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"liver_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia autoimm
> une ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_
> ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba
> 1c_percentage asthma_severity patient_id liver_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia 
> autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resi
> d_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_
> mol hba1c_percentage asthma_severity patient_id liver_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "liver_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia 
> autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resi
> d_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_
> mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 27 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney dialysis liver_dstr transplant_notkidney dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia
>  autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old res
> id_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per
> _mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-liver_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 27>=1 & 27<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney dialysis liver_dstr liver_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop liver_dstr
- }
- format `var'_date %td
= format liver_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable transplant_notkidney
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace transplant_notkidney = transplant_notkidney + "-15"
variable transplant_notkidney was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename transplant_notkidney transplant_notkidney_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace transplant_notkidney_dstr = " " if transplant_notkidney_dstr == "-15"
(712 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen transplant_notkidney_date = date(transplant_notkidney_dstr, "YMD")
(712 missing values generated)
- order `var'_date, after(`var'_dstr)
= order transplant_notkidney_date, after(transplant_notkidney_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_notkidney_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_notkidney_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaemia au
> toimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_
> care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mo
> l hba1c_percentage asthma_severity patient_id transplant_notkidney_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_ana
> emia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old
>  resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol
> _per_mol hba1c_percentage asthma_severity patient_id transplant_notkidney_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_notkidney_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_ana
> emia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old
>  resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol
> _per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 28 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney dialysis liver_date transplant_notkidney_dstr dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_an
> aemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_ol
> d resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmo
> l_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-transplant_notkidney_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney dialysis liver_date transplant_notkidney_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney dialysis liver_date transplant_notkidney_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 28>=1 & 28<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney dialysis liver_date transplant_notkidney_dstr transplant_notkidney_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_notkidney_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop transplant_notkidney_dstr
- }
- format `var'_date %td
= format transplant_notkidney_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable transplant_kidney
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace transplant_kidney = transplant_kidney + "-15"
variable transplant_kidney was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename transplant_kidney transplant_kidney_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace transplant_kidney_dstr = " " if transplant_kidney_dstr == "-15"
(705 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen transplant_kidney_date = date(transplant_kidney_dstr, "YMD")
(705 missing values generated)
- order `var'_date, after(`var'_dstr)
= order transplant_kidney_date, after(transplant_kidney_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_kidney_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_kidney_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_kidney_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_anaem
> ia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old r
> esid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_p
> er_mol hba1c_percentage asthma_severity patient_id transplant_kidney_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplasti
> c_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_car
> e_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c
> _mmol_per_mol hba1c_percentage asthma_severity patient_id transplant_kidney_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_kidney_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplasti
> c_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_car
> e_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c
> _mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 25 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_dstr dialysis liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplast
> ic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_ca
> re_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1
> c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-transplant_kidney_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 25>=1 & 25<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_dstr transplant_kidney_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop transplant_kidney_dstr
- }
- format `var'_date %td
= format transplant_kidney_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dialysis
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dialysis = dialysis + "-15"
variable dialysis was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename dialysis dialysis_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dialysis_dstr = " " if dialysis_dstr == "-15"
(701 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dialysis_date = date(dialysis_dstr, "YMD")
(701 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dialysis_date, after(dialysis_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dialysis_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dialysis_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dialysis_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno aplastic_
> anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_
> old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_m
> mol_per_mol hba1c_percentage asthma_severity patient_id dialysis_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno ap
> lastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resi
> d_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias 
> hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dialysis_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dialysis_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno ap
> lastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resi
> d_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias 
> hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 26 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_dstr liver_date transplant_notkidney_date dysplenia sickle_cell hiv perm_immuno temp_immuno a
> plastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id res
> id_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias
>  hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dialysis_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 26>=1 & 26<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_dstr dialysis_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dialysis_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dialysis_dstr
- }
- format `var'_date %td
= format dialysis_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable dysplenia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace dysplenia = dysplenia + "-15"
variable dysplenia was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename dysplenia dysplenia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace dysplenia_dstr = " " if dysplenia_dstr == "-15"
(704 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen dysplenia_date = date(dysplenia_dstr, "YMD")
(704 missing values generated)
- order `var'_date, after(`var'_dstr)
= order dysplenia_date, after(dysplenia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dysplenia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dysplenia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dysplenia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immuno apla
> stic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id resid_
> care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hb
> a1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dysplenia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immu
> no aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id
>  resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_
> dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id dysplenia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dysplenia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_immu
> no aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id
>  resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_
> dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 29 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr sickle_cell hiv perm_immuno temp_imm
> uno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_i
> d resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp
> _dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-dysplenia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 29>=1 & 29<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_dstr dysplenia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dysplenia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop dysplenia_dstr
- }
- format `var'_date %td
= format dysplenia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable sickle_cell
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace sickle_cell = sickle_cell + "-15"
variable sickle_cell was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename sickle_cell sickle_cell_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace sickle_cell_dstr = " " if sickle_cell_dstr == "-15"
(714 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen sickle_cell_date = date(sickle_cell_dstr, "YMD")
(714 missing values generated)
- order `var'_date, after(`var'_dstr)
= order sickle_cell_date, after(sickle_cell_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"sickle_cell_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"sickle_cell_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"sickle_cell_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp_immuno
>  aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household_id r
> esid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id sickle_cell_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp
> _immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househo
> ld_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id sickle_cell_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "sickle_cell_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno temp
> _immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househo
> ld_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 30 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr hiv perm_immuno tem
> p_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd househ
> old_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_s
> ys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-sickle_cell_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 30>=1 & 30<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_dstr sickle_cell_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop sickle_cell_dstr
- }
- format `var'_date %td
= format sickle_cell_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable hiv
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace hiv = hiv + "-15"
variable hiv was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename hiv hiv_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace hiv_dstr = " " if hiv_dstr == "-15"
(708 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen hiv_date = date(hiv_dstr, "YMD")
(708 missing values generated)
- order `var'_date, after(`var'_dstr)
= order hiv_date, after(hiv_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"hiv_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"hiv_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"hiv_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno temp_i
> mmuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd household
> _id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys 
> bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hiv_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno
>  temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd ho
> usehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine 
> bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id hiv_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "hiv_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immuno
>  temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd ho
> usehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine 
> bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 31 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr perm_immun
> o temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd h
> ousehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine
>  bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-hiv_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 31>=1 & 31<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_dstr hiv_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"hiv_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop hiv_dstr
- }
- format `var'_date %td
= format hiv_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable perm_immuno
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace perm_immuno = perm_immuno + "-15"
variable perm_immuno was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename perm_immuno perm_immuno_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace perm_immuno_dstr = " " if perm_immuno_dstr == "-15"
(708 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen perm_immuno_date = date(perm_immuno_dstr, "YMD")
(708 missing values generated)
- order `var'_date, after(`var'_dstr)
= order perm_immuno_date, after(perm_immuno_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"perm_immuno_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"perm_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"perm_immuno_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr t
> emp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd hous
> ehold_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id perm_immuno_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region i
> md household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creati
> nine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id perm_immuno_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "perm_immuno_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region i
> md household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creati
> nine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 32 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_dstr temp_immuno aplastic_anaemia autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region 
> imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creat
> inine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-perm_immuno_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 32>=1 & 32<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_dstr perm_immun
> o_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"perm_immuno_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop perm_immuno_dstr
- }
- format `var'_date %td
= format perm_immuno_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable aplastic_anaemia
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace aplastic_anaemia = aplastic_anaemia + "-15"
variable aplastic_anaemia was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename aplastic_anaemia aplastic_anaemia_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace aplastic_anaemia_dstr = " " if aplastic_anaemia_dstr == "-15"
(878 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen aplastic_anaemia_date = date(aplastic_anaemia_dstr, "YMD")
(878 missing values generated)
- order `var'_date, after(`var'_dstr)
= order aplastic_anaemia_date, after(aplastic_anaemia_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"aplastic_anaemia_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"aplastic_anaemia_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp region imd
>  household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id aplastic_anaemia_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp reg
> ion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id aplastic_anaemia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "aplastic_anaemia_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp reg
> ion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 34 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno aplastic_anaemia_dstr autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp re
> gion imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child 
> creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-aplastic_anaemia_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno aplastic_anaemia_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno aplastic_anaemia_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 34>=1 & 34<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o aplastic_anaemia_dstr aplastic_anaemia_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"aplastic_anaemia_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop aplastic_anaemia_dstr
- }
- format `var'_date %td
= format aplastic_anaemia_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable temp_immuno
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace temp_immuno = temp_immuno + "-15"
variable temp_immuno was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename temp_immuno temp_immuno_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace temp_immuno_dstr = " " if temp_immuno_dstr == "-15"
(882 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen temp_immuno_date = date(temp_immuno_dstr, "YMD")
(882 missing values generated)
- order `var'_date, after(`var'_dstr)
= order temp_immuno_date, after(temp_immuno_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"temp_immuno_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"temp_immuno_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"temp_immuno_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp regio
> n imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_child cre
> atinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id temp_immuno_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban st
> p region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_ch
> ild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id temp_immuno_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "temp_immuno_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban st
> p region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_ch
> ild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 33 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_dstr aplastic_anaemia_date autoimmune ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban s
> tp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_c
> hild creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-temp_immuno_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 33>=1 & 33<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_dstr temp_immuno_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"temp_immuno_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop temp_immuno_dstr
- }
- format `var'_date %td
= format temp_immuno_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable autoimmune
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace autoimmune = autoimmune + "-15"
variable autoimmune was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename autoimmune autoimmune_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace autoimmune_dstr = " " if autoimmune_dstr == "-15"
(713 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen autoimmune_date = date(autoimmune_dstr, "YMD")
(713 missing values generated)
- order `var'_date, after(`var'_dstr)
= order autoimmune_date, after(autoimmune_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"autoimmune_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"autoimmune_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"autoimmune_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban stp 
> region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi_chil
> d creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id autoimmune_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult b
> mi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id autoimmune_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "autoimmune_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult b
> mi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 35 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_dstr ibd smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_ur
> ban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult 
> bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-autoimmune_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 35>=1 & 35<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_dstr autoimmune_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop autoimmune_dstr
- }
- format `var'_date %td
= format autoimmune_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ibd
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ibd = ibd + "-15"
variable ibd was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename ibd ibd_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ibd_dstr = " " if ibd_dstr == "-15"
(705 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ibd_date = date(ibd_dstr, "YMD")
(705 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ibd_date, after(ibd_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ibd_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ibd_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ibd_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rural_urban
>  stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adult bmi
> _child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ibd_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rura
> l_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_ad
> ult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ibd_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ibd_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rura
> l_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_ad
> ult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 36 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr smi fracture ldr ld_profound ds cp died_ons_covid_flag_any rur
> al_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_a
> dult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ibd_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 36>=1 & 36<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_dstr ibd_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ibd_dstr
- }
- format `var'_date %td
= format ibd_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable fracture
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace fracture = fracture + "-15"
variable fracture was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename fracture fracture_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace fracture_dstr = " " if fracture_dstr == "-15"
(880 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen fracture_date = date(fracture_dstr, "YMD")
(880 missing values generated)
- order `var'_date, after(`var'_dstr)
= order fracture_date, after(fracture_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"fracture_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"fracture_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"fracture_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any rural_
> urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi_adul
> t bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id fracture_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any
>  rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status b
> mi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id fracture_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "fracture_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_any
>  rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status b
> mi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 38 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr ldr ld_profound ds cp died_ons_covid_flag_an
> y rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status 
> bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-fracture_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 38>=1 & 38<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi fracture_dstr fracture_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"fracture_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop fracture_dstr
- }
- format `var'_date %td
= format fracture_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable smi
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace smi = smi + "-15"
variable smi was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename smi smi_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace smi_dstr = " " if smi_dstr == "-15"
(709 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen smi_date = date(smi_dstr, "YMD")
(709 missing values generated)
- order `var'_date, after(`var'_dstr)
= order smi_date, after(smi_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"smi_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"smi_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"smi_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_status bmi
> _adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id smi_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fla
> g_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_sta
> tus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id smi_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "smi_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fla
> g_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_sta
> tus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 37 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr fracture_date ldr ld_profound ds cp died_ons_covid_fl
> ag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_st
> atus bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-smi_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 37>=1 & 37<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_dstr smi_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop smi_dstr
- }
- format `var'_date %td
= format smi_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ldr
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ldr = ldr + "-15"
variable ldr was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename ldr ldr_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ldr_dstr = " " if ldr_dstr == "-15"
(712 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ldr_date = date(ldr_dstr, "YMD")
(712 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ldr_date, after(ldr_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ldr_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ldr_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ldr_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covid_flag_
> any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_statu
> s bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ldr_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covi
> d_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smokin
> g_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ldr_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ldr_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_covi
> d_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smokin
> g_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 39 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ld_profound ds cp died_ons_cov
> id_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoki
> ng_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ldr_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 39>=1 & 39<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_dstr ldr_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ldr_dstr
- }
- format `var'_date %td
= format ldr_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ld_profound
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ld_profound = ld_profound + "-15"
variable ld_profound was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename ld_profound ld_profound_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ld_profound_dstr = " " if ld_profound_dstr == "-15"
(711 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ld_profound_date = date(ld_profound_dstr, "YMD")
(711 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ld_profound_date, after(ld_profound_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ld_profound_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ld_profound_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ld_profound_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons_covid_
> flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smoking_
> status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ld_profound_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons
> _covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 s
> moking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ld_profoun
> d_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ld_profound_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_ons
> _covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 s
> moking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 40 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ds cp died_on
> s_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 
> smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ld_profound_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 40>=1 & 40<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_dstr ld_profound_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ld_profound_dstr
- }
- format `var'_date %td
= format ld_profound_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable ds
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace ds = ds + "-15"
variable ds was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename ds ds_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace ds_dstr = " " if ds_dstr == "-15"
(710 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen ds_date = date(ds_dstr, "YMD")
(710 missing values generated)
- order `var'_date, after(`var'_dstr)
= order ds_date, after(ds_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ds_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ds_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ds_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp died_ons_c
> ovid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_16 smo
> king_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ds_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp die
> d_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity
> _16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id ds_da
> te
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ds_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp die
> d_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity
> _16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 41 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr cp di
> ed_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicit
> y_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-ds_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 41>=1 & 41<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_dstr ds_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop ds_dstr
- }
- format `var'_date %td
= format ds_date %td
- }
- capture confirm string variable `var'
= capture confirm string variable cp
- if _rc!=0 {
  assert `var'==.
  rename `var' `var'_date
  }
- else {
- replace `var' = `var' + "-15"
= replace cp = cp + "-15"
variable cp was str7 now str10
(883 real changes made)
- rename `var' `var'_dstr
= rename cp cp_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace `var'_dstr = " " if `var'_dstr == "-15"
= replace cp_dstr = " " if cp_dstr == "-15"
(715 real changes made)
- gen `var'_date = date(`var'_dstr, "YMD")
= gen cp_date = date(cp_dstr, "YMD")
(715 missing values generated)
- order `var'_date, after(`var'_dstr)
= order cp_date, after(cp_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cp_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cp_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cp_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr died_
> ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethnicity_1
> 6 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id cp_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethn
> icity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id 
> cp_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cp_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity ethn
> icity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 42 of died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child
> _date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amp
> utate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_canc
> er_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immun
> o_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_ds
> tr died_ons_covid_flag_any rural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age sex ethnicity eth
> nicity_16 smoking_status bmi_adult bmi_child creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-cp_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_me
> asured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_da
> te diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date 
> transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date t
> emp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_
> date_measured bp_sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date ampu
> tate_date diabetes_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cance
> r_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno
> _date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dst
> r
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 42>=1 & 42<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date ethnicity_date ethnicity_16_date bmi_child_date_measured bp
> _sys_date_measured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabet
> es_date hypertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplan
> t_kidney_date dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immun
> o_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_dstr cp_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'_dstr
= drop cp_dstr
- }
- format `var'_date %td
= format cp_date %td
- }
- assert age<.
- assert inlist(sex, "M", "F")
- gen male = (sex=="M")
- drop sex
- label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define smoke 1 "Never" 2 "Former" 3 "Current" .u "Unknown (.u)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- gen smoke = 1 if smoking_status=="N"
(856 missing values generated)
- replace smoke = 2 if smoking_status=="E"
(21 real changes made)
- replace smoke = 3 if smoking_status=="S"
(111 real changes made)
- replace smoke = .u if smoking_status=="M"
(18 real changes made, 18 to missing)
- replace smoke = .u if smoking_status==""
(706 real changes made, 706 to missing)
- label values smoke smoke
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" smoke"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "smoke"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "smoke" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist smoke {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values smoke smoke 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop smoking_status
- rename ethnicity ethnicity_5
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace ethnicity_5 = .u if ethnicity_5==.
(217 real changes made, 217 to missing)
- label define ethnicity 1 "White" 2 "Mixed" 3 "Asian or Asian British" 4 "Black" 5 "Other" .u "Unknown"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ethnicity 1 "White" 2 "Mixed" 3 "Asian or Asian British" 4 "Black" 5 "Other" .u "Unknown"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ethnicity_5 ethnicity
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ethnicity"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ethnicity"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ethnicity" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ethnicity_5 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ethnicity_5 ethnicity 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- replace ethnicity_16 = .u if ethnicity_5>=.
(217 real changes made, 217 to missing)
- replace ethnicity_16 = .u if ethnicity_16>=.
(154 real changes made, 154 to missing)
- label define ethnicity_16 1 "British or Mixed British" 2 "Irish" 3 "Other White" 4 "White + Black Caribbean" 5 "White + Black African
> " 6 "White + Asian" 7 "Other mixed" 8 "Indian or British Indian" 9 "Pakistani or British Pakistani" 10 "Bangladeshi or British Bangla
> deshi" 11 "Other Asian" 12 "Caribbean" 13 "African" 14 "Other Black" 15 "Chinese" 16 "Other" .u "Unknown"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ethnicity_16 1 "British or Mixed British" 2 "Irish" 3 "Other White" 4 "White + Black Caribbean
> " 5 "White + Black African" 6 "White + Asian" 7 "Other mixed" 8 "Indian or British Indian" 9 "Pakistani or British Pakistani" 10 "Ban
> gladeshi or British Bangladeshi" 11 "Other Asian" 12 "Caribbean" 13 "African" 14 "Other Black" 15 "Chinese" 16 "Other" .u "Unknown"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ethnicity_16 ethnicity_16
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ethnicity_16"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ethnicity_16"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ethnicity_16" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ethnicity_16 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ethnicity_16 ethnicity_16 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop ethnicity_date ethnicity_16_date
- replace bmi_adult = . if age<16
(170 real changes made, 170 to missing)
- capture confirm string variable bmi_child_date_measured
- if _rc!=0 {
  assert bmi_child_date_measured==.
  rename bmi_child_date_measured bmi_child_date_measured_date
  }
- else {
- replace bmi_child_date_measured = bmi_child_date_measured + "-15"
variable bmi_child_date_measured was str7 now str10
(883 real changes made)
- rename bmi_child_date_measured bmi_child_date_measured_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- replace bmi_child_date_measured_dstr = " " if bmi_child_date_measured_dstr == "-15"
(46 real changes made)
- gen bmi_child_date_measured_date = date(bmi_child_date_measured_dstr, "YMD")
(46 missing values generated)
- order bmi_child_date_measured_date, after(bmi_child_date_measured_dstr)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"bmi_child_date_measured_dstr"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"bmi_child_date_measured_dstr"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi_child_date_measured_date
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi_child_date_measured_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "bmi_child_date_measured_dstr" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 4 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-bmi_child_date_measured_dstr
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 4>=1 & 4<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_dstr bmi_child_date_measured_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_child_date_measured_dstr"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop bmi_child_date_measured_dstr
- }
- format bmi_child_date_measured_date %td
- replace bmi_child = . if age>=16
(713 real changes made, 713 to missing)
- replace bmi_child_date_measured_date = . if age>=16
(680 real changes made, 680 to missing)
- noi summ bmi_adult bmi_child

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
   bmi_adult |        713    33.19478    12.33728  -2.620086   62.88037
   bmi_child |        170     31.3665    12.45191          0   58.22521
- gen bmi = bmi_adult if age>=16
(170 missing values generated)
- replace bmi = bmi_child if age<16
(170 real changes made)
- replace bmi = . if !inrange(bmi, 15, 50)
(125 real changes made, 125 to missing)
- order bmi, after(bmi_adult)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"bmi_adult"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"bmi_adult"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"bmi_adult"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child creatini
> ne bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke bmi
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "bmi_adult" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child c
> reatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 53 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi_child 
> creatinine bp_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-bmi_adult
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stp region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 53>=1 & 53<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban stp re
> gion imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi_adult bmi
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi_adult"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop bmi_adult bmi_child
- rename stp stpcode
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- bysort stpcode: gen stp = 1 if _n==1
(852 missing values generated)
- replace stp = sum(stp)
(882 real changes made)
- order stp, after(stpcode)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"stpcode"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"stpcode"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"stpcode"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"stpcode"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sys bp
> _dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke stp
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke stp
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "stpcode" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp
> _sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 43 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stpcode region imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine b
> p_sys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-stpcode
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 43>=1 & 43<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban stpcod
> e stp
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stpcode"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stpcode"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- gen region_7 = 1 if region=="East"
(806 missing values generated)
- replace region_7 = 2 if region=="London"
(191 real changes made)
- replace region_7 = 3 if region=="East Midlands"
(178 real changes made)
- replace region_7 = 3 if region=="West Midlands"
(82 real changes made)
- replace region_7 = 4 if region=="North East"
(81 real changes made)
- replace region_7 = 4 if region=="Yorkshire and The Humber"
(108 real changes made)
- replace region_7 = 5 if region=="North West"
(85 real changes made)
- replace region_7 = 6 if region=="South East"
(81 real changes made)
- replace region_7 = 7 if region=="South West"
(0 real changes made)
- label define region_7 1 "East" 2 "London" 3 "Midlands" 4 "North East and Yorkshire" 5 "North West" 6 "South East" 7 "South West"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define region_7 1 "East" 2 "London" 3 "Midlands" 4 "North East and Yorkshire" 5 "North West" 6 "South
>  East" 7 "South West"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values region_7 region_7
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" region_7"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "region_7"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "region_7" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist region_7 {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values region_7 region_7 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var region_7 "Region of England (7 regions)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var region_7 "Region of England (7 regions)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop region
- capture confirm string var rural_urban
- if _rc==0 {
  assert inlist(rural_urban, "rural", "urban", "")
  replace rural_urban = "urban" if !inlist(rural_urban, "rural", "urban")
  gen rural = rural_urban=="rural"
  order rural, after(rural_urban)
  drop rural_urban
  }
- else {
- recode rural_urban -1 0=.
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"rural_urban -1 0=."' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : rural_urban, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist rural_urban
    - local n : word count `varlist'
    = local n : word count rural_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var rural_urban
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" -1 0=."' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" -1 0=."', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"-1"', "", "*", "else") & `"-1"' != bsubstr("missing", 1, max(3,length(`"-1"'))) & `"-1"' != bsubstr("nonmissing", 1
> , max(4,length(`"-1"'))) {
  - if `"`1'"' == "=" {
  = if `"-1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"-1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number -1
    - if !_rc {
    - return local s1 `v'
    = return local s1 -1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"0"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(-1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==-1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"."' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number .
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"."' == "." {
    - return local s1 "."
    - }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"."')==2 & `"."' >= ".a" & `"."' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"."', "max", "min") {
      return local s1 "r(`v')"
      scalar `statcode' = max(`statcode',1)
      }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 .
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 2- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = rural_urban if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type rural_urban
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = . if __000002==1 & float(rural_urban)==float(-1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban)==float(-1)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = . if __000002==1 & float(rural_urban)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban)==float(0)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(rural_urban) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = rural_urban if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(rural_urban: 23 changes made)"
(rural_urban: 23 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace rural_urban = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- bysort stp: egen ru_mode=mode(rural_urban)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"ru_mode"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable ru_mode
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gmode.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gmode.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gmode.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gmode.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gmode.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gmode.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"rural_urban"' == "_all" | `"rural_urban"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
  - local byopt "by(`_byvars')"
  = local byopt "by(stp)"
  - local cma ","
  - }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname ru_mode
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("mode","mode","concat","group") {
  - local vv : display "version " string(`cvers') ", missing:"
  = local vv : display "version " string(16.1) ", missing:"
  - }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily version 16.1, missing: _gmode float __000001 = (rural_urban)   , by(stp) 
    ------------------------------------------------------------------------------------------------------------------ begin _gmode ---
    - if _caller() < 10.1 {
      _gmode10 `0'
      exit
      }
    - version 7, missing
    - gettoken type 0 : 0
    - gettoken g 0 : 0
    - gettoken eqs 0 : 0
    - syntax varlist(max=1) [if] [in] [, MISSing BY(varlist) MINmode MAXmode Nummode(numlist max=1 int >= 1) ]
    - if ("`minmode'"!="") + ("`maxmode'"!="") + ("`nummode'"!="") > 1 {
    = if (""!="") + (""!="") + (""!="") > 1 {
      di as err "{p}only one of minmode, maxmode, or nummode() allowed"
      di "{p_end}"
      exit 198
      }
    - if "`by'" != "" & "`nummode'" != "" {
    = if "stp" != "" & "" != "" {
      di as err "{p}option nummode() may not be combined with by{p_end}"
      exit 190
      }
    - tempvar touse freq fmode uniq count maxfreq miss flag
    - mark `touse' `if' `in'
    = mark __000002  
    - sort `touse' `by' `varlist'
    = sort __000002 stp rural_urban
    - qui by `touse' `by' `varlist' : gen `c(obs_t)' `freq' = _N
    = qui by __000002 stp rural_urban : gen int __000003 = _N
    - if "`missing'" == "" {
    = if "" == "" {
    - qui replace `freq' = 0 if missing(`varlist')
    = qui replace __000003 = 0 if missing(rural_urban)
    - qui gen `miss' = !missing(`varlist') if `touse'
    = qui gen __000008 = !missing(rural_urban) if __000002
    - }
    - gen byte `uniq' = 1
    = gen byte __000005 = 1
    - local type : type `varlist'
    = local type : type rural_urban
    - if "`minmode'" != "" {
    = if "" != "" {
      if bsubstr("`type'",1,3) == "str" {
      gsort `touse' `by' `freq' -`varlist'
      }
      else {
      gsort `touse' `by' `freq' -`varlist', mfirst
      }
      }
    - else if "`maxmode'" != "" {
    = else if "" != "" {
      sort `touse' `by' `freq' `varlist'
      }
    - else if "`nummode'" != "" {
    = else if "" != "" {
      sort `touse' `by' `freq' `varlist'
      qui by `touse' `by' : gen `fmode' = `freq'[_N]
      qui by `touse' `by' `freq' `varlist' : gen long `count' = 1 if `fmode'==`freq' & _n==1 & `touse'
      qui replace `count' = sum(`count')
      qui replace `count' = . if !`touse' | `fmode'!=`freq'
      sort `touse' `by' `freq' `count'
      qui sum `count', meanonly
      local max = r(max)
      if `nummode' > `max' {
      di as err "{p}nummode(`nummode') too large -- there"
      if `max' == 1 {
      di "is only 1 mode{p_end}"
      }
      else {
      di "are only `max' modes{p_end}"
      }
      exit 198
      }
      qui replace `count'=0 if `count'!=`nummode'
      sort `touse' `by' `count' `varlist'
      }
    - else {
    - qui gsort `touse' `by' `freq' -`varlist'
    = qui gsort __000002 stp __000003 -rural_urban
      ----------------------------------------------------------------------------------------------------------------- begin gsort ---
      - if _caller() >= 12 {
        local vv : di "version " string(_caller()) ":"
        }
      - tempname myr
      - _return hold `myr'
      = _return hold __00000A
      - version 6.0, missing
      - parse `"`*'"', parse(" +-,")
      = parse `"__000002 stp __000003 -rural_urban"', parse(" +-,")
      - local noryet 1
      - local i 1
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"__000002"'!="" & `"__000002"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"__000002"'=="-" | `"__000002"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev __000002
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"__000002 "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist __000002
        - sret local k : word count `varlist'
        = sret local k : word count __000002
        - global S_1 "`varlist'"
        = global S_1 "__000002"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"stp"'!="" & `"stp"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"stp"'=="-" | `"stp"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev stp
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"stp "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist stp
        - sret local k : word count `varlist'
        = sret local k : word count stp
        - global S_1 "`varlist'"
        = global S_1 "stp"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002 stp"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"__000003"'!="" & `"__000003"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"__000003"'=="-" | `"__000003"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev __000003
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"__000003 "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist __000003
        - sret local k : word count `varlist'
        = sret local k : word count __000003
        - global S_1 "`varlist'"
        = global S_1 "__000003"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"+"'=="+" {
      - local part1 `"`part1' `s(varlist)'"'
      = local part1 `" __000002 stp __000003"'
      - }
      - else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `"-"'!="" & `"-"'!="," {
      - if `"`1'"'=="-" | `"`1'"'=="+" {
      = if `"-"'=="-" | `"-"'=="+" {
      - local sign `"`1'"'
      = local sign `"-"'
      - mac shift
      - if `"`1'"'=="," | `"`1'"'=="" { error 198 }
      = if `"rural_urban"'=="," | `"rural_urban"'=="" { error 198 }
      - }
      - else local sign "+"
      - unabbrev `1'
      = unabbrev rural_urban
        ------------------------------------------------------------------------------------------------------------ begin unabbrev ---
        - version 6
        - sret clear
        - gettoken list1 0 : 0
        - local 0 `"`list1' `0'"'
        = local 0 `"rural_urban "'
        - syntax varlist [, min(string) max(string)]
        - sret local varlist `varlist'
        = sret local varlist rural_urban
        - sret local k : word count `varlist'
        = sret local k : word count rural_urban
        - global S_1 "`varlist'"
        = global S_1 "rural_urban"
        - global S_2 `s(k)'
        = global S_2 1
        - if "`min'"=="" & "`max'"=="" { exit }
        = if ""=="" & ""=="" { exit }
        -------------------------------------------------------------------------------------------------------------- end unabbrev ---
      - if `noryet' & `"`sign'"'=="+" {
      = if 1 & `"-"'=="+" {
        local part1 `"`part1' `s(varlist)'"'
        }
      - else {
      - local noryet 0
      - local sign`i' `"`sign'"'
      = local sign1 `"-"'
      - local names `"`names' `1'"'
      = local names `" rural_urban"'
      - local i=`i'+1
      = local i=1+1
      - }
      - mac shift
      - }
      - while `"`1'"'!="" & `"`1'"'!="," {
      = while `""'!="" & `""'!="," {
        if `"`1'"'=="-" | `"`1'"'=="+" {
        local sign `"`1'"'
        mac shift
        if `"`1'"'=="," | `"`1'"'=="" { error 198 }
        }
        else local sign "+"
        unabbrev `1'
        if `noryet' & `"`sign'"'=="+" {
        local part1 `"`part1' `s(varlist)'"'
        }
        else {
        local noryet 0
        local sign`i' `"`sign'"'
        local names `"`names' `1'"'
        local i=`i'+1
        }
        mac shift
        }
      - if `"`part1'"'=="" & `"`names'"'=="" {
      = if `" __000002 stp __000003"'=="" & `" rural_urban"'=="" {
        di in red "varlist required"
        exit 100
        }
      - local options "Generate(string) Mfirst"
      - parse `"`*'"'
      = parse `""'
      - if `"`generat'"'!="" {
      = if `""'!="" {
        confirm new var `generat'
        }
      - parse `"`names'"', parse(" ")
      = parse `" rural_urban"', parse(" ")
      - local i 1
      - while `"``i''"'!="" {
      = while `"rural_urban"'!="" {
      - `vv' sort ``i''
      =  sort rural_urban
      - tempvar n
      - quietly gen long `n' = .
      = quietly gen long __00000B = .
      - quietly by ``i'': replace `n'=1 if _n==1
      = quietly by rural_urban: replace __00000B=1 if _n==1
      - quietly replace `n'= 0 `sign`i'' sum(`n')
      = quietly replace __00000B= 0 - sum(__00000B)
      - if `"`mfirst'"' == "" {
      = if `""' == "" {
      - local typ : type ``i''
      = local typ : type rural_urban
      - if bsubstr("`typ'",1,3) != "str" {
      = if bsubstr("byte",1,3) != "str" {
      - if "`sign`i''" == "-" {
      = if "-" == "-" {
      - tempvar nn
      - qui gen long `nn' = .
      = qui gen long __00000C = .
      - qui by ``i'': replace `nn' = 1 if _n==1 & ``i''>=.
      = qui by rural_urban: replace __00000C = 1 if _n==1 & rural_urban>=.
      - qui sum `nn' if ``i''>=., meanonly
      = qui sum __00000C if rural_urban>=., meanonly
      - local nsum = `r(sum)'
      = local nsum = 1
      - qui replace `nn' = sum(`nn') if ``i''>=.
      = qui replace __00000C = sum(__00000C) if rural_urban>=.
      - qui replace `n' = `nsum' - `nn' if ``i''>=.
      = qui replace __00000B = 1 - __00000C if rural_urban>=.
      - }
      - else {
        qui replace `n'=``i'' if ``i''>=.
        }
      - }
      - }
      - local tvars `"`tvars' `n'"'
      = local tvars `" __00000B"'
      - quietly compress `n'
      = quietly compress __00000B
      - local i=`i'+1
      = local i=1+1
      - }
      - while `"``i''"'!="" {
      = while `""'!="" {
        `vv' sort ``i''
        tempvar n
        quietly gen long `n' = .
        quietly by ``i'': replace `n'=1 if _n==1
        quietly replace `n'= 0 `sign`i'' sum(`n')
        if `"`mfirst'"' == "" {
        local typ : type ``i''
        if bsubstr("`typ'",1,3) != "str" {
        if "`sign`i''" == "-" {
        tempvar nn
        qui gen long `nn' = .
        qui by ``i'': replace `nn' = 1 if _n==1 & ``i''>=.
        qui sum `nn' if ``i''>=., meanonly
        local nsum = `r(sum)'
        qui replace `nn' = sum(`nn') if ``i''>=.
        qui replace `n' = `nsum' - `nn' if ``i''>=.
        }
        else {
        qui replace `n'=``i'' if ``i''>=.
        }
        }
        }
        local tvars `"`tvars' `n'"'
        quietly compress `n'
        local i=`i'+1
        }
      - `vv' sort `part1' `tvars'
      =  sort  __000002 stp __000003  __00000B
      - if `"`generat'"'!="" {
      = if `""'!="" {
        tempvar mark
        qui by `part1' `tvars': gen `c(obs_t)' `mark' = 1 if _n==1
        qui replace `mark' = sum(`mark')
        qui compress `mark'
        `vv' sort `mark'
        rename `mark' `generat'
        }
      - _return restore `myr'
      = _return restore __00000A
      ------------------------------------------------------------------------------------------------------------------- end gsort ---
    - qui by `touse' `by' `freq' : gen `c(obs_t)' `fmode' = _N
    = qui by __000002 stp __000003 : gen int __000004 = _N
    - qui by `touse' `by' : replace `uniq' = `freq'[_N] == `fmode'[_N]
    = qui by __000002 stp : replace __000005 = __000003[_N] == __000004[_N]
    - }
    - qui by `touse' `by' : gen `flag' = `uniq'[_N] == 0
    = qui by __000002 stp : gen __000009 = __000005[_N] == 0
    - qui count if `flag' & `touse'
    = qui count if __000009 & __000002
    - local flag_mult_modes = `r(N)'
    = local flag_mult_modes = 20
    - if bsubstr("`type'",1,3) == "str" {
    = if bsubstr("byte",1,3) == "str" {
      qui gen `type' `g' = ""
      }
    - else {
    - qui gen `type' `g' = .
    = qui gen byte __000001 = .
    - }
    - qui by `touse' `by': replace `g' = `varlist'[_N] if `touse' & `uniq'
    = qui by __000002 stp: replace __000001 = rural_urban[_N] if __000002 & __000005
    - if "`missing'" == "" {
    = if "" == "" {
    - if "`by'" == "" {
    = if "stp" == "" {
      capture assert !missing(`g') if `touse'
      if _rc == 9 {
      qui sum `miss' if `touse'
      if `r(sum)' == 0 {
      di "{p}{txt}Warning: `varlist' contains all"
      di "missing values.  Generating missing"
      di "values for the mode.  Use the"
      di "{cmd:missing} option to treat missing"
      di "values as a category.{p_end}"
      }
      else {
      di "{p}{txt}Warning: multiple modes"
      di "encountered.  Generating missing values"
      di "for the mode.  Use the {cmd:maxmode},"
      di "{cmd:minmode}, or {cmd:nummode()} options"
      di "to control this behavior.{p_end}"
      }
      }
      }
    - else {
    - capture assert !missing(`g') if `touse'
    = capture assert !missing(__000001) if __000002
    - if _rc == 9 {
    - di "{p}{txt}Warning: at least one group contains all"
Warning: at least one group contains all - di "missing values or contains multiple modes." missing values or contains multiple modes.
- di "Generating missing values for the mode of these" Generating missing values for the mode of these - di "groups.  Use the {cmd:
missing}, {cmd:maxmode}," groups.  Use the missing, maxmode, - di "{cmd:minmode}, or {cmd:nummode()}" minmode, or nummode() - di
"options to control this behavior.{p_end}" options to control this behavior.
    - }
    - }
    - }
    - else if "`missing'" != "" & "`maxmode'" == "" & "`minmode'" == "" & "`nummode'" == "" {
    = else if "" != "" & "" == "" & "" == "" & "" == "" {
      capture assert !missing(`g') if `touse'
      if _rc == 9 & `flag_mult_modes' {
      if "`by'" == "" {
      di "{p}{txt}Warning: multiple modes encountered."
      di "Generating missing values for the mode.  Use the"
      di "{cmd:maxmode}, {cmd:minmode}, or {cmd:nummode()}"
      di "options to control this behavior.{p_end}"
      }
      else {
      di "{p}{txt}Warning: at least one group contains"
      di "multiple modes. Generating missing values for"
      di "the mode of these groups. Use the {cmd:maxmode},"
      di "{cmd:minmode}, or {cmd:nummode()}"
      di "options to control this behavior.{p_end}"
      }
      }
      }
    -------------------------------------------------------------------------------------------------------------------- end _gmode ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
  - local s = cond(r(N)>1,"s","")
  - local N : di %11.0fc r(N)
  - local N `N'
  = local N          20
  - di in bl "(`N' missing value`s' generated)"
  = di in bl "(20 missing values generated)"
(20 missing values generated)
  - }
  - }
  - rename `dummy' `name'
  = rename __000001 ru_mode
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- replace rural_urban = ru_mode if rural_urban>=.
(23 real changes made)
- drop ru_mode
- recode rural_urban 1/4=0 5/8=1, gen(rural)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"rural_urban 1/4=0 5/8=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : rural_urban, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist rural_urban
    - local n : word count `varlist'
    = local n : word count rural_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var rural_urban
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 1/4=0 5/8=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"rural"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"rural"' != "" {
  - confirm new var `generate'
  = confirm new var rural
  - local nnew : word count `generate'
  = local nnew : word count rural
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "rural" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir rural
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir rural
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label rural
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 1/4=0 5/8=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 1
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 4
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(1) & float(`vn') <= float(4)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 1 & `vn' <= 4"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 5
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"8"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 8
    - if !_rc {
    - return local s1 `v'
    = return local s1 8
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 8
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(5) & float(`vn') <= float(8)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 5 & `vn' <= 8"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = rural_urban if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type rural_urban
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(rural_urban) >= float(1) & float(rural_urban) <= float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban) >= float(1) & float(rural_urban) <= float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(rural_urban) >= float(5) & float(rural_urban) <= float(8)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(rural_urban) >= float(5) & float(rural_urban) <= float(8)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(rural_urban) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "rural" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"rural"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of rural
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(883 differences between rural_urban and rural)"
(883 differences between rural_urban and rural)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "rural" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of rural
  - gen `g' = `NEW`iv''
  = gen rural = __000003
  - recast `vntype`iv'' `g'
  = recast byte rural
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize rural
    - local stop : word count `varlist'
    = local stop : word count rural
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen byte __000005 = rural
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if rural~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label rural
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format rural
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label rural
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename rural __000005
    - move `RECAST' ``i''
    = move __000005 rural
    - drop ``i''
    = drop rural
    - rename `RECAST' ``i''
    = rename __000005 rural
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label rural_urban
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var rural `"RECODE of rural_urban"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var rural `"RECODE of rural_urban"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- order rural, after(rural_urban)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"rural_urban"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"rural_urban"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"rural_urban"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"rural_urban"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sys bp_di
> as hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7 rural
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7 rural
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "rural_urban" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_sy
> s bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 42 of died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_m
> easured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hyp
> ertension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_da
> te dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date apla
> stic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any r
> ural_urban stpcode stp imd household_id resid_care_old resid_care_ldr household_size age ethnicity_5 ethnicity_16 bmi creatinine bp_s
> ys bp_dias hba1c_mmol_per_mol hba1c_percentage asthma_severity patient_id male smoke region_7
  - unab nlist : `fvar'-`lvar'
  = unab nlist : died_date_ons-rural_urban
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured 
> bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertensio
> n_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialy
> sis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_ana
> emia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urb
> an
    - local n : word count `varlist'
    = local n : word count died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_me
> asured bp_dias_date_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hype
> rtension_date stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_dat
> e dialysis_date liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplas
> tic_anaemia_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any ru
> ral_urban
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 42>=1 & 42<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order died_date_ons covid_admission_date sgss_first_positive_test_date bmi_child_date_measured_date bp_sys_date_measured bp_dias_d
> ate_measured cf_date respiratory_date cardiac_date af_date dvt_pe_date pad_surg_date amputate_date diabetes_date hypertension_date st
> roke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date 
> liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date ds_date cp_date died_ons_covid_flag_any rural_urban rural
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"rural_urban"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"rural_urban"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop rural_urban
- }
- rename imd imd_order
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- label define asthmacat 1 "No" 2 "Yes, no OCS" 3 "Yes with OCS"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define asthmacat 1 "No" 2 "Yes, no OCS" 3 "Yes with OCS"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- rename asthma_severity asthmacat
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- recode asthmacat 0=1 1=2 2=3
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"asthmacat 0=1 1=2 2=3"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : asthmacat, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist asthmacat
    - local n : word count `varlist'
    = local n : word count asthmacat
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var asthmacat
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0=1 1=2 2=3"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0=1 1=2 2=3"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"2"', "", "*", "else") & `"2"' != bsubstr("missing", 1, max(3,length(`"2"'))) & `"2"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"2"'))) {
  - if `"`1'"' == "=" {
  = if `"2"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs3 "float(`vn')==float(2)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs3 "`vn'==2"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 3
  - local nrhs = `j'- 1
  = local nrhs = 4- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = asthmacat if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type asthmacat
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 3 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(asthmacat)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(0)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(asthmacat)==float(1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(1)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(asthmacat)==float(2)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(asthmacat)==float(2)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(asthmacat) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = asthmacat if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(asthmacat: 173 changes made)"
(asthmacat: 173 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace asthmacat = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label values asthmacat asthmacat
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" asthmacat"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "asthmacat"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "asthmacat" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist asthmacat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values asthmacat asthmacat 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- replace creatinine = . if !inrange(creatinine, 20, 3000)
(48 real changes made, 48 to missing)
- gen SCr_adj = creatinine/88.4
(48 missing values generated)
- gen min = .
(883 missing values generated)
- replace min = SCr_adj/0.7 if male==0
(425 real changes made)
- replace min = SCr_adj/0.9 if male==1
(410 real changes made)
- replace min = min^-0.329 if male==0
(425 real changes made)
- replace min = min^-0.411 if male==1
(410 real changes made)
- replace min = 1 if min<1
(232 real changes made)
- gen max = .
(883 missing values generated)
- replace max = SCr_adj/0.7 if male==0
(425 real changes made)
- replace max = SCr_adj/0.9 if male==1
(410 real changes made)
- replace max = max^-1.209
(835 real changes made)
- replace max = 1 if max>1
(651 real changes made)
- gen egfr = min*max*141
(48 missing values generated)
- replace egfr = egfr*(0.993^age)
(826 real changes made)
- replace egfr = egfr*1.018 if male==0
(425 real changes made)
- replace egfr = . if creatinine==.
(0 real changes made)
- drop min max SCr_adj creatinine
- replace hba1c_percentage = . if hba1c_percentage <= 0
(49 real changes made, 49 to missing)
- replace hba1c_mmol_per_mol = . if hba1c_mmol_per_mol <= 0
(59 real changes made, 59 to missing)
- noi summ hba1c_percentage hba1c_mmol_per_mol

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
hba1c_perc~e |        834    4.947423    1.950932    .069461   11.53121
hba1c_mmol~l |        824    40.42078    17.98125   .0505364   97.06688
- gen hba1c_pct = hba1c_percentage
(49 missing values generated)
- replace hba1c_pct = (hba1c_mmol_per_mol/10.929) + 2.15 if hba1c_mmol_per_mol<.
(824 real changes made)
- replace hba1c_pct = . if !inrange(hba1c_pct, 0, 20)
(0 real changes made)
- replace hba1c_pct = round(hba1c_pct, 0.1)
(881 real changes made)
- drop hba1c_percentage hba1c_mmol_per_mol
- confirm string variable died_date_ons
- rename died_date_ons died_date_ons_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- gen died_date_ons = date(died_date_ons_dstr, "YMD")
(800 missing values generated)
- format died_date_ons %td
- drop died_date_ons_dstr
- gen coviddeath_date = died_date_ons if died_ons_covid_flag_any==1
(864 missing values generated)
- gen otherdeath_date = died_date_ons if died_ons_covid_flag_any!=1
(819 missing values generated)
- drop died_date_ons
- format coviddeath_date otherdeath_date %td
- drop died_ons_covid_flag_any
- confirm string variable covid_admission_date
- rename covid_admission_date covid_admission_date_dstr
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- gen covidadmission_date = date(covid_admission_date_dstr, "YMD")
(704 missing values generated)
- format covidadmission_date %td
- drop covid_admission_date_dstr
- confirm string variable sgss_first_positive_test_date
- gen covidpostest_date = date(sgss_first_positive_test_date, "YMD")
(702 missing values generated)
- format covidpostest_date %td
- drop sgss_first_positive_test_date
- label var patient_id "Patient ID"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var patient_id "Patient ID"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var age "Age (years)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var age "Age (years)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var male "Male"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var male "Male"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var imd_order "Ranking of index of Multiple Deprivation (IMD)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var imd_order "Ranking of index of Multiple Deprivation (IMD)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ethnicity_16 "Ethnicity in 16 categories"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ethnicity_16 "Ethnicity in 16 categories"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ethnicity_5 "Ethnicity in 5 categories"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ethnicity_5 "Ethnicity in 5 categories"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stp "Sustainability and Transformation Partnership"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stp "Sustainability and Transformation Partnership"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stpcode "Sustainability and Transformation Partnership"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stpcode "Sustainability and Transformation Partnership"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var region_7 "Geographical region (7 England regions)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var region_7 "Geographical region (7 England regions)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var rural "Rural/urban binary classification"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var rural "Rural/urban binary classification"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var household_id "Household ID"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var household_id "Household ID"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var household_size "Household size"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var household_size "Household size"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var resid_care_old "Residential care, elderly"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var resid_care_old "Residential care, elderly"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var resid_care_ldr "Residential care, learning disability"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var resid_care_ldr "Residential care, learning disability"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var smoke "Smoking status"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var smoke "Smoking status"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bmi "Body Mass Index (BMI, kg/m2)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bmi "Body Mass Index (BMI, kg/m2)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bmi_child_date_measured_date "Date BMI measured (if age<16)"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bmi_child_date_measured_date "Date BMI measured (if age<16)"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_sys "Systolic blood pressure"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_sys "Systolic blood pressure"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_sys_date "Systolic blood pressure, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_sys_date "Systolic blood pressure, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_dias "Diastolic blood pressure"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_dias "Diastolic blood pressure"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var bp_dias_date "Diastolic blood pressure, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var bp_dias_date "Diastolic blood pressure, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var egfr "Estimated globular filtration rate"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var egfr "Estimated globular filtration rate"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hba1c_pct "Hba1c percentage"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hba1c_pct "Hba1c percentage"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var asthmacat "Asthma"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var asthmacat "Asthma"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cf_date "Cystic fibrosis, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cf_date "Cystic fibrosis, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var respiratory_date "Respiratory disease (excl. asthma), date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var respiratory_date "Respiratory disease (excl. asthma), date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cardiac_date "Heart disease, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cardiac_date "Heart disease, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var af_date "Atrial fibrillation, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var af_date "Atrial fibrillation, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dvt_pe_date "Deep vein thrombosis/pulmonary embolism, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dvt_pe_date "Deep vein thrombosis/pulmonary embolism, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var pad_surg_date "Surgery for peripheral arterial disease, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var pad_surg_date "Surgery for peripheral arterial disease, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var amputate_date "Limb amputation, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var amputate_date "Limb amputation, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var diabetes_date "Diabetes, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var diabetes_date "Diabetes, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hypertension_date "Date of diagnosed hypertension"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hypertension_date "Date of diagnosed hypertension"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var tia_date "Transient ischemic attack, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var tia_date "Transient ischemic attack, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var stroke_date "Stroke, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var stroke_date "Stroke, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dementia_date "Dementia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dementia_date "Dementia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var neuro_date "Neuro condition other than stroke/dementia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var neuro_date "Neuro condition other than stroke/dementia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var lung_cancer_date "Lung cancer, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var lung_cancer_date "Lung cancer, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var other_cancer_date "Other cancer, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var other_cancer_date "Other cancer, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var haem_cancer_date "Haematological malignancy, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var haem_cancer_date "Haematological malignancy, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var liver_date "Liver, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var liver_date "Liver, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dialysis_date "Dialysis, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dialysis_date "Dialysis, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var transplant_kidney_date "Kidney transplant recipient, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var transplant_kidney_date "Kidney transplant recipient, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var transplant_notkidney_date "Organ (not kidney) transplant recipient, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var transplant_notkidney_date "Organ (not kidney) transplant recipient, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var dysplenia_date "Dysplenia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var dysplenia_date "Dysplenia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var sickle_cell_date "Sickle cell, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var sickle_cell_date "Sickle cell, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var aplastic_anaemia_date "Aplastic anaemia, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var aplastic_anaemia_date "Aplastic anaemia, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var autoimmune_date "RA, SLE, Psoriasis (autoimmune disease), date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var autoimmune_date "RA, SLE, Psoriasis (autoimmune disease), date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var hiv_date "HIV, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var hiv_date "HIV, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var perm_immuno_date "Conditions causing permanent immunosuppression, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var perm_immuno_date "Conditions causing permanent immunosuppression, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var temp_immuno_date "Conditions causing temporary immunosuppression, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var temp_immuno_date "Conditions causing temporary immunosuppression, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ibd_date "IBD, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ibd_date "IBD, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var fracture_date "Fracture, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var fracture_date "Fracture, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var smi_date "Serious mental illness, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var smi_date "Serious mental illness, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ldr_date "Learning disability register, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ldr_date "Learning disability register, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ld_profound_date "Profound/severe learning disability, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ld_profound_date "Profound/severe learning disability, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var ds_date "Down's Syndrome, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var ds_date "Down's Syndrome, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var cp_date "Cerebral Palsy, date"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var cp_date "Cerebral Palsy, date"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var coviddeath_date "Date of ONS COVID-19 death"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var coviddeath_date "Date of ONS COVID-19 death"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var otherdeath_date "Date of ONS non-COVID-19 death"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var otherdeath_date "Date of ONS non-COVID-19 death"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var covidadmission_date "Date of COVID-19 hospital admission"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var covidadmission_date "Date of COVID-19 hospital admission"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label var covidpostest_date "SGSS first positive test"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("var", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label var covidpostest_date "SGSS first positive test"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- sort patient_id
- order patient_id stp* region_7 imd* rural household* resid_care_old resid_care_ldr age male bmi* smoke* ethnicity* respiratory* asthm
> a* cf* cardiac* diabetes* hba1c* bp_sys bp_sys_date bp_dias bp_dias_date hypertension* af* dvt_pe* pad* amputate* stroke* dementia* n
> euro* tia* lung_cancer* haem_cancer* other_cancer* transplant_kidney* dialysis* liver* transplant_notkidney* dysplenia* sickle* hiv* 
> perm* temp* aplastic* autoimmune* ibd* smi* fracture* smi* ld* fracture* coviddeath_date otherdeath_date covidadmission_date covidpos
> test_date
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `""' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
  - _order `macval(0)'
  = _order patient_id stp* region_7 imd* rural household* resid_care_old resid_care_ldr age male bmi* smoke* ethnicity* respiratory* as
> thma* cf* cardiac* diabetes* hba1c* bp_sys bp_sys_date bp_dias bp_dias_date hypertension* af* dvt_pe* pad* amputate* stroke* dementia
> * neuro* tia* lung_cancer* haem_cancer* other_cancer* transplant_kidney* dialysis* liver* transplant_notkidney* dysplenia* sickle* hi
> v* perm* temp* aplastic* autoimmune* ibd* smi* fracture* smi* ld* fracture* coviddeath_date otherdeath_date covidadmission_date covid
> postest_date
  - exit
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- sort patient_id
- if "`index_date'" == "2020-03-01" {
= if "2020-09-01" == "2020-03-01" {
  label data "Base cohort dataset (wave 1), index date 1st March 2020"
  save "analysis/data_base_cohort1.dta", replace
  }
- else if "`index_date'" == "2020-09-01" {
= else if "2020-09-01" == "2020-09-01" {
- label data "Base cohort dataset (wave 2), index date 1st September 2020"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("data", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label data "Base cohort dataset (wave 2), index date 1st September 2020"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- save "analysis/data_base_cohort2.dta", replace
file analysis/data_base_cohort2.dta saved
- }
- }

. log close
      name:  <unnamed>
       log:  C:\Users\emsuewil\Documents\Work\Covid\OpenSAFELY\Absolute_risks\absolute-risks-covid-research\logs/001_clean_input_data.l
> og
  log type:  text
 closed on:   8 Feb 2021, 11:17:08
---------------------------------------------------------------------------------------------------------------------------------------
