---------------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  C:\Users\emsuewil\Documents\Work\Covid\OpenSAFELY\Absolute_risks\absolute-risks-covid-research\logs/002_create_ld_analysis
> _dataset.log
  log type:  text
 opened on:   8 Feb 2021, 09:45:08

. 
. * Wave 1: i=1  (1 Mar 20 - 31 Aug 20) 
. * Wave 2: i=2  (1 Sept 20 - latest)
. forvalues i = 2 (1) 2 {
  2.          
.         * Open dataset
.         if `i'<=1 {
  3.                 local j = 1
  4.         }
  5.         else {
  6.                 local j = 2
  7.         }
  8.         use "analysis/data_base_cohort`j'.dta", clear 
  9. 
. 
.         * Index date
.         if `i'<=1 {
 10.                 local index_date = "2020-03-01"
 11.         }
 12.         else if `i'==2 {
 13.                 local index_date = "2020-09-01"     
 14.         }
 15.         
.         * Display the input parameter (index date for cohort)
.         noi di "`index_date'"
 16.         local index = date(subinstr("`index_date'", "-", "/", .), "YMD")
 17.         
. 
. 
. 
.         **************************
.         *  Categorise variables  *
.         **************************
. 
. 
.         /*  Age variables  */ 
. 
.         * Create categorised age
.         recode  age                      0/15.9999=1    ///
>                                                         16/44.9999=2    ///
>                                                         45/64.9999=3    ///
>                                                         65/69.9999=4    ///
>                                                         70/74.9999=5    ///
>                                                         75/79.9999=6    ///
>                                                         80/max=7,               ///
>                                                         gen(agegroup) 
 18. 
.         label define agegroup   1 "0-<16"               ///
>                                                         2 "16-<45"              ///
>                                                         3 "45-<65"              ///
>                                                         4 "65-<70"              ///
>                                                         5 "70-<75"              ///
>                                                         6 "75-<80"              ///
>                                                         6 "80+"
 19.         label values agegroup agegroup
 20. 
. 
.         * Check there are no missing ages
.         assert agegroup<.
 21. 
. 
.         *  Age splines 
.                         
.         qui summ age
 22.         mkspline age = age, cubic nknots(4)
 23.         order age1 age2 age3, after(age)
 24. 
.         * Child indicator
. 
.         recode age min/15.999999=1 16/max=0, gen(child)
 25. 
. 
. 
.         /*  Body Mass Index  */
. 
.         * Only include child BMI measurements within 2 years
.         replace bmi = . if age<16 & (`index' - bmi_child_date_measured_date) > 365.25*2
 26.         drop bmi_child_date_measured_date
 27. 
.         recode bmi min/39.99999=0 40/max=1, gen(obese40)
 28.         replace obese40 = 0 if bmi>=.
 29.         order obese40, after(bmi)
 30. 
. 
. 
. 
.         /*  IMD  */
. 
.         * Group into 5 groups
.         assert imd_order!=-1
 31.         egen imd = cut(imd_order), group(5) icodes
 32.         replace imd = imd + 1
 33.         replace imd = .u if imd_order>=.
 34.         drop imd_order
 35. 
.         * Reverse the order (so high is more deprived)
.         recode imd 5=1 4=2 3=3 2=4 1=5 .u=.u
 36. 
.         label define imd        1 "1 least deprived"    ///
>                                                 2 "2"                                   ///
>                                                 3 "3"                                   ///
>                                                 4 "4"                                   ///
>                                                 5 "5 most deprived"     ///
>                                                 .u "Unknown"
 37.         label values imd imd 
 38. 
. 
. 
. 
. 
.         ***************************
.         *  Grouped comorbidities  *
.         ***************************
. 
. 
.         /*  Spleen  */
. 
.         * Spleen problems (dysplenia/splenectomy/etc and sickle cell disease)   
.         egen spleen_date = rowmin(dysplenia_date sickle_cell_date)
 39.         format spleen_date %td
 40.         order spleen_date spleen, after(sickle_cell)
 41.         drop dysplenia_date sickle_cell_date
 42. 
. 
. 
.         /*  Non-haematological malignancies  */
. 
.         gen exhaem_cancer_date = min(lung_cancer_date, other_cancer_date)
 43.         format exhaem_cancer_date %td
 44.         order exhaem_cancer_date, after(other_cancer_date)
 45.         drop lung_cancer_date other_cancer_date
 46. 
.         rename haem_cancer_date         cancerHaem_date
 47.         rename exhaem_cancer_date       cancerExhaem_date
 48. 
.         * Only consider non-haematological malignancies if in previous year
.         gen cancerExhaem1yr = inrange(cancerExhaem_date, `index'- 365.25, `index')
 49.         drop cancerExhaem_date
 50. 
. 
. 
.         /*  Haematological malignancies  */
. 
.         gen     cancerHaem = 4 if                                                                                       ///
>                                 inrange(cancerHaem_date, d(1/1/1900), `index' - 5*365.25)
 51.         replace cancerHaem = 3 if                                                                                       ///
>                                 inrange(cancerHaem_date, `index' - 5*365.25, `index' - 365.25)
 52.         replace cancerHaem = 2 if                                                                                       ///
>                                 inrange(cancerHaem_date, `index' - 365.25,   `index')
 53.         recode  cancerHaem . = 1
 54. 
.         * Label cancer variables
.         capture label drop cancer
 55.         label define cancer 1 "Never"                   ///
>                                                 2 "Last year"           ///
>                                                 3 "2-5 years ago"       ///
>                                                 4 "5+ years"
 56.         label values cancerHaem cancer
 57.                 
. 
.         /*  Immunosuppression  */
. 
.         * Temporary immunodeficiency or aplastic anaemia last year, HIV/permanent
.         *   condition ever
.         gen immunosuppression =                                                                                           ///
>                         (inrange(temp_immuno_date,      `index' - 365.25, `index')      | ///
>                          inrange(aplastic_anaemia_date, `index' - 365.25, `index')      | ///
>                         (perm_immuno_date < `index')                                                            | ///
>                         (hiv_date < `index'))
 58.         drop temp_immuno_date aplastic_anaemia_date perm_immuno_date hiv_date
 59. 
. 
. 
.         /*  Dialysis  */
. 
. 
.         * If transplant since dialysis, set dialysis to no
.         gen dialysis                    = (dialysis_date <.)
 60.         gen transplant_kidney   = (transplant_kidney_date <.)
 61.         replace dialysis = 0   if dialysis == 1                         ///
>                                                         & transplant_kidney     == 1    ///
>                                                         & transplant_kidney_date > dialysis_date 
 62.         order dialysis, after(transplant_kidney_date)
 63.         drop dialysis_date 
 64. 
. 
. 
. 
.         /*  Transplant  */
. 
.         egen transplant_date = rowmin(transplant_kidney_date ///
>                                                                   transplant_notkidney_date)
 65.         drop transplant_kidney_date transplant_notkidney_date
 66.         format transplant_date %td
 67. 
. 
. 
. 
. 
. 
. 
.         **************************
.         *  "Ever" comorbidities  *
.         **************************
. 
.         * Replace dates with binary indicators 
.         foreach var of varlist  respiratory_date                                ///
>                                                         cf_date                                                 ///
>                                                         cardiac_date                                    ///
>                                                         diabetes_date                                   ///
>                                                         af_date                                                 ///
>                                                         dvt_pe_date                                             ///
>                                                         tia_date                                                ///
>                                                         stroke_date                                             ///
>                                                         dementia_date                                   ///
>                                                         neuro_date                                              ///
>                                                         liver_date                                              ///
>                                                         transplant_date                                 ///     
>                                                         spleen_date                                             ///
>                                                         autoimmune_date                                 ///
>                                                         ibd_date                                                ///
>                                                         smi_date                                                ///
>                                                         ldr_date                                                ///
>                                                         ld_profound_date                                ///
>                                                         ds_date                                                 ///
>                                                         cp_date                                                 ///
>                                                 {
 68.                 local newvar =  substr("`var'", 1, length("`var'") - 5)
 69.                 gen `newvar' = (`var'< `index')
 70.                 order `newvar', after(`var')
 71.                 drop `var'
 72.         }
 73. 
. 
. 
. 
. 
. 
.          
. 
.         ************
.         *   eGFR   *
.         ************
. 
. 
.         label define kidneyfn   1 "None"                                        ///
>                                                         2 "Stage 3a/3b egfr 30-60"      ///
>                                                         3 "Stage 4/5 egfr<30"
 74.                                         
.         * Categorise into CKD stages
.         egen egfr_cat = cut(egfr), at(0, 15, 30, 45, 60, 5000)
 75.         recode egfr_cat 0=5 15=4 30=3 45=2 60=0
 76. 
.         * Kidney function 
.         recode egfr_cat 0=1 2/3=2 4/5=3, gen(kidneyfn)
 77.         replace kidneyfn = 1 if egfr==. 
 78.         label values kidneyfn kidneyfn 
 79. 
.         * Delete variables no longer needed
.         drop egfr egfr_cat
 80. 
.         * If either dialysis or kidney transplant then set kidney function to the 
.         *   lowest level
.         replace  kidneyfn = 3 if dialysis                       == 1
 81.         replace  kidneyfn = 3 if transplant_kidney      == 1
 82.         drop transplant_kidney
 83. 
. 
. 
.         ****************************************
.         *   Hba1c:  Level of diabetic control  *
.         ****************************************
. 
.         label define hba1ccat   0 "<6.5%"               ///
>                                                         1">=6.5-7.4"    ///
>                                                         2">=7.5-7.9"    ///
>                                                         3">=8-8.9"              ///
>                                                         4">=9"
 84. 
. 
. 
.         /* Categorise hba1c and diabetes  */
. 
.         * Group hba1c
.         gen     hba1ccat = 0 if hba1c_pct <  6.5
 85.         replace hba1ccat = 1 if hba1c_pct >= 6.5  & hba1c_pct < 7.5
 86.         replace hba1ccat = 2 if hba1c_pct >= 7.5  & hba1c_pct < 8
 87.         replace hba1ccat = 3 if hba1c_pct >= 8    & hba1c_pct < 9
 88.         replace hba1ccat = 4 if hba1c_pct >= 9    & hba1c_pct !=.
 89.         label values hba1ccat hba1ccat
 90. 
.         * Delete unneeded variables
.         drop hba1c_pct 
 91. 
.         * Create diabetes, split by control/not
.         gen     diabcat = 1 if diabetes==0
 92.         replace diabcat = 2 if diabetes==1 & inlist(hba1ccat, 0, 1)
 93.         replace diabcat = 3 if diabetes==1 & inlist(hba1ccat, 2, 3, 4)
 94.         replace diabcat = 4 if diabetes==1 & !inlist(hba1ccat, 0, 1, 2, 3, 4)
 95. 
.         label define diabetes   1 "No diabetes"                         ///
>                                                         2 "Controlled diabetes"         ///
>                                                         3 "Uncontrolled diabetes"       ///
>                                                         4 "Diabetes, no hba1c measure"
 96.         label values diabcat diabetes
 97. 
. 
. 
. 
.         ************************************
.         *  Exposures: learning disability  *
.         ************************************
. 
.         * Split LDR into moderate-mild and severe-profound
.         noi tab ldr ld_profound, m
 98. 
.         gen ldr_cat = ldr
 99.         recode ldr_cat 1=2 if ld_profound==1
100. 
.         label define ldprofound 0 "Not on LDR"  ///
>                                                         1 "LDR, mild"   ///
>                                                         2 "LDR, profound"
101.         label values ldr_cat ldprofound
102. 
. 
.         * Split into in residential care and not
.         noi tab ldr resid_care_ld, m
103. 
.         gen ldr_carecat = ldr
104.         recode ldr 1=2 if resid_care_ld==1
105. 
.         label define ldcare 0 "Not on LDR"                                                      ///
>                                                         1 "LDR, not in residential care"        ///
>                                                         2 "LDR, in residential care"
106.         label values ldr_carecat ldcare
107. 
. 
. 
. 
. 
.         ***************************************
.         *  Binary outcomes and survival time  *
.         ***************************************
. 
.         * Check all dates are in future
.         assert coviddeath_date          >= `index'
108.         assert otherdeath_date          >= `index'
109.         assert covidadmission_date      >= `index'
110. 
. 
. 
.         *** WAVE 1 CENSORING *** 31st August 2020
.         global coviddeathcensor1     = d(31Aug2020)
111.         global covidadmissioncensor1 = d(31Aug2020)
112. 
.         *** WAVE 2 CENSORING *** last outcome date minus 7 days
.         * COVID death
.         noi summ coviddeath_date, format
113.         global coviddeathcensor2 = r(max) - 7
114.                 
.         * COVID hospital admission
.         noi summ covidadmission_date, format
115.         global covidadmissioncensor2 = r(max) - 7
116. 
. 
.         gen coviddeathcensor1     = $coviddeathcensor1
117.         gen covidadmissioncensor1 = $covidadmissioncensor1
118. 
.         gen coviddeathcensor2     = $coviddeathcensor2
119.         gen covidadmissioncensor2 = $covidadmissioncensor2
120. 
.                 
.         * Composite outcome date (either COVID-19 death or hospitalisation)
.         gen composite_date = min(coviddeath_date, covidadmission_date)
121.                 
. 
.         /*  Binary outcome and survival time  */
. 
.         forvalues k = 1 (1) 2 {
122.             
.                 * COVID-19 death
.                 gen     coviddeath`k' = (coviddeath_date<.)
123.                 replace coviddeath`k' = 0 if coviddeath_date > coviddeathcensor`k'
124.                 replace coviddeath`k' = 0 if coviddeath_date > otherdeath_date
125. 
.                 * COVID-19 hospitalisation
.                 gen     covidadmission`k' = (covidadmission_date<.)
126.                 replace covidadmission`k' = 0 if covidadmission_date > covidadmissioncensor`k'
127.                 replace covidadmission`k' = 0 if covidadmission_date > coviddeathcensor`k'
128.                 replace covidadmission`k' = 0 if covidadmission_date > coviddeath_date
129.                 replace covidadmission`k' = 0 if covidadmission_date > otherdeath_date
130. 
.                 * Composite (either COVID-19 death or hospitalisation)
.                 gen     composite`k' = (composite_date<.)
131.                 replace composite`k' = 0 if composite_date > covidadmissioncensor`k'
132.                 replace composite`k' = 0 if composite_date > coviddeathcensor`k'
133.                 format composite_date %td
134. 
. 
.                 /*  Calculate survival times  (days until event/censoring)  */
. 
.                 egen stime_coviddeath`k'         = rowmin(coviddeath_date       /// 
>                                                                         otherdeath_date                                 ///
>                                                                         coviddeathcensor`k') 
135.                 egen stime_covidadmission`k' = rowmin(covidadmission_date       ///
>                                                                         coviddeath_date                                 ///
>                                                                         otherdeath_date                                 /// 
>                                                                         covidadmissioncensor`k'                 ///
>                                                                         coviddeathcensor`k')
136.                 egen stime_composite`k'      = rowmin(composite_date            ///
>                                                                         otherdeath_date                                 /// 
>                                                                         covidadmissioncensor`k'                 ///
>                                                                         coviddeathcensor`k')
137. 
.                 * Convert to days since index date
.                 foreach var of varlist stime* {
138.                         replace `var' = `var' - `index' + 1
139.                 }
140.                 drop coviddeathcensor`k' covidadmissioncensor`k' 
141.         }
142.         
.         
.         
.         * Wave 1: Keep both outcomes (censored at Aug 31, and all time)
.         * Wave 2: Keep only outcome censored at end
.         if `i'==2 {
143.             drop coviddeath1 covidadmission1 composite1 ///
>                         stime_coviddeath1 stime_covidadmission1 stime_composite1
144.         }
145. 
.         
.         
. 
.         *********************
.         *  Label variables  *
.         *********************
. 
. 
.         * Demographics
.         label var patient_id                    "Patient ID"
146.         label var age                                   "Age (years)"
147.         label var age1                                  "Age spline term 1"
148.         label var age2                                  "Age spline term 2"
149.         label var age3                                  "Age spline term 3"
150.         label var agegroup                              "Grouped age"
151.         label var male                                  "Male"
152.         label var imd                                   "Index of Multiple Deprivation (IMD)"
153.         label var ethnicity_5                   "Ethnicity in 16 categories"
154.         label var stp                                   "Sustainability and Transformation Partnership"
155.         label var stpcode                               "Sustainability and Transformation Partnership"
156.         label var region_7                              "Geographical region (7 England regions)"
157.         label var household_id                  "Household ID"
158.         label var resid_care_old                "Residential care, elderly"
159.         label var resid_care_ldr                "Residential care, learning disability"
160. 
. 
.         * Learning disabilities
.         label var ldr                                   "Learning disability or Down's Syndrome"
161.         label var ld_profound                   "Severe-profound learning disability or Down's Syndrome"
162.         label var ldr_cat                               "Learning disability split into mild-moderate and severe-profound" 
163.         label var ldr_carecat                   "Learning disability split into residential vs non-residential setting" 
164.         label var ds                                    "Down's Syndrome"
165.         label var cp                                    "Cerebral Palsy"
166. 
. 
.         * Confounders and comorbidities 
.         label var bmi                                   "Body Mass Index (BMI, kg/m2)"
167.         label var obese40                               "Evidence of BMI>40"
168.         label var asthmacat                             "Severity of asthma"
169.         label var respiratory                   "Respiratory disease (excl. asthma)"
170.         label var cardiac                               "Heart disease"
171.         label var af                                    "Atrial fibrillation"
172.         label var dvt                                   "Deep vein thrombosis/pulmonary embolism"
173.         label var diabcat                               "Diabetes"
174.         label var tia                                   "Transient ischemic attack"
175.         label var stroke                                "Stroke"
176.         label var dementia                              "Dementia"
177.         label var neuro                                 "Neuro condition other than stroke/dementia"    
178.         label var cancerExhaem1yr               "Non haematological cancer"
179.         label var cancerHaem                    "Haematological cancer"
180.         label var liver                                 "Liver disease"
181.         label var kidneyfn                              "Kidney function"
182.         label var transplant                    "Organ transplant recipient"
183.         label var spleen                                "Spleen problems (dysplenia, sickle cell)"
184.         label var autoimmune                    "RA, SLE, Psoriasis (autoimmune disease)"
185.         label var immunosuppression             "Conditions causing permanent or temporary immunosuppression"
186.         label var ibd                                   "IBD"
187.         label var smi                                   "Serious mental illness"
188. 
.         * Outcomes 
.         label var  coviddeath_date                      "Date of ONS COVID-19 death"
189.         label var  otherdeath_date                      "Date of ONS non-COVID-19 death"
190.         label var  covidadmission_date          "Date of COVID-19 hospital admission"
191.         label var  composite_date                       "Date of first of COVID-19 hospital admission or death"
192.                         
.         local tag1 = "censored 31 Aug 20"
193.         local tag2 = "censored latest date"
194.         
.         forvalues k = 1 (1) 2 {
195.                 capture label var  coviddeath`k'                        "COVID-19 death (ONS), `tag`k''"
196.                 capture label var  covidadmission`k'            "COVID-19 hospital admission, `tag`k''"
197.                 capture label var  composite`k'                         "COVID-19 hospital admission or death, `tag`k''"
198.                         
.                 capture label var  stime_coviddeath`k'          "Days from study entry until COVID-19 death or censoring, `tag`k''"
199.                 capture label var  stime_covidadmission`k'      "Days from study entry until COVID-19 hospital admission or censor
> ing, `tag`k''"
200.                 capture label var  stime_composite`k'           "Days from study entry until COVID-19 hospital admission or death 
> or censoring, `tag`k''"
201.         }       
202. 
. 
.         *********************
.         *  Order variables  *
.         *********************
. 
.         sort patient_id
203.         order   patient_id stp* region_7 imd rural                                                      ///
>                         household* resid_care_old resid_care_ldr                                        ///
>                         ldr ldr_cat ld_profound ldr_carecat ds cp                                       ///
>                         age age age1 age2 age3 agegroup child male                                      ///
>                         bmi* obese* ethnicity*                                                                          /// 
>                         respiratory* asthma* cf* cardiac* diabcat*                                      ///
>                         af* dvt_pe*                                                                                             ///
>                         stroke* dementia* neuro* tia*                                                           ///
>                         cancerExhaem* cancerHaem*                                                                       ///
>                         kidneyfn* dialysis* liver* transplant*                                          ///
>                         spleen* autoimmune* immunosuppression*  ibd*                            ///
>                         smi*                                                                                                         
>    ///
>                         coviddeath* otherdeath* covidadmission* composite*
204. 
.         keep    patient_id stp* region_7 imd rural                                                      ///
>                         household* resid_care_old resid_care_ldr                                        ///
>                         ldr ldr_cat ld_profound ldr_carecat ds cp                                       ///
>                         age age age1 age2 age3 agegroup child male                                      ///
>                         bmi* obese* ethnicity*                                                                          /// 
>                         respiratory* asthmacat cf cardiac diabcat                                       ///
>                         af dvt_pe stroke dementia neuro tia                                                     ///
>                         cancerExhaem* cancerHaem                                                                        ///
>                         kidneyfn dialysis liver transplant                                                      ///
>                         spleen autoimmune immunosuppression ibd                                         ///
>                         smi                                                                                                          
>    ///
>                         coviddeath* otherdeath* covidadmission* composite*
205. 
. 
.                         
. 
.         ***************
.         *  Save data  *
.         ***************
. 
.     sort patient_id
206.         if `i'==1 {
207.             label data "Analysis dataset, wave 1 (1 Mar - 31 Aug 20), for learning disability work"
208.         }
209.         else if `i'==2 {
210.             label data "Analysis dataset, wave 2 (1 Sept 20 - latest), for learning disability work"
211.         }
212.         * Save overall dataset
.         save "analysis/data_ldanalysis_cohort`j'.dta", replace 
213. }
- forvalues i = 2 (1) 2 {
- if `i'<=1 {
= if 2<=1 {
  local j = 1
  }
- else {
- local j = 2
- }
- use "analysis/data_base_cohort`j'.dta", clear
= use "analysis/data_base_cohort2.dta", clear
(Base cohort dataset (wave 2), index date 1st September 2020)
- if `i'<=1 {
= if 2<=1 {
  local index_date = "2020-03-01"
  }
- else if `i'==2 {
= else if 2==2 {
- local index_date = "2020-09-01"
- }
- noi di "`index_date'"
= noi di "2020-09-01"
2020-09-01
- local index = date(subinstr("`index_date'", "-", "/", .), "YMD")
= local index = date(subinstr("2020-09-01", "-", "/", .), "YMD")
- recode age 0/15.9999=1 16/44.9999=2 45/64.9999=3 65/69.9999=4 70/74.9999=5 75/79.9999=6 80/max=7, gen(agegroup)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"age 0/15.9999=1 16/44.9999=2 45/64.9999=3 65/69.9999=4 70/74.9999=5 75/79.9999=6 80/max=7"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : age, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist age
    - local n : word count `varlist'
    = local n : word count age
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var age
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0/15.9999=1 16/44.9999=2 45/64.9999=3 65/69.9999=4 70/74.9999=5 75/79.9999=6 80/max=7"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"agegroup"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"agegroup"' != "" {
  - confirm new var `generate'
  = confirm new var agegroup
  - local nnew : word count `generate'
  = local nnew : word count agegroup
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "agegroup" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir agegroup
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir agegroup
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label agegroup
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0/15.9999=1 16/44.9999=2 45/64.9999=3 65/69.9999=4 70/74.9999=5 75/79.9999=6 80/max=7"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 0
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"15.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 15.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 15.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 15.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(0) & float(`vn') <= float(15.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= 0 & `vn' <= 15.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"16"', "", "*", "else") & `"16"' != bsubstr("missing", 1, max(3,length(`"16"'))) & `"16"' != bsubstr("nonmissing", 1
> , max(4,length(`"16"'))) {
  - if `"`1'"' == "=" {
  = if `"16"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"16"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 16
    - if !_rc {
    - return local s1 `v'
    = return local s1 16
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 16
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"44.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 44.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 44.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 44.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(16) & float(`vn') <= float(44.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 16 & `vn' <= 44.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"45"', "", "*", "else") & `"45"' != bsubstr("missing", 1, max(3,length(`"45"'))) & `"45"' != bsubstr("nonmissing", 1
> , max(4,length(`"45"'))) {
  - if `"`1'"' == "=" {
  = if `"45"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"45"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 45
    - if !_rc {
    - return local s1 `v'
    = return local s1 45
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 45
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"64.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 64.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 64.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 64.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs3 "float(`vn') >= float(45) & float(`vn') <= float(64.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs3 "`vn' >= 45 & `vn' <= 64.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"65"', "", "*", "else") & `"65"' != bsubstr("missing", 1, max(3,length(`"65"'))) & `"65"' != bsubstr("nonmissing", 1
> , max(4,length(`"65"'))) {
  - if `"`1'"' == "=" {
  = if `"65"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs4 4
  - GetEl `"`1'"' `statcode'
  = GetEl `"65"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 65
    - if !_rc {
    - return local s1 `v'
    = return local s1 65
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 65
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"69.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 69.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 69.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 69.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs4 "float(`vn') >= float(65) & float(`vn') <= float(69.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs4 "`vn' >= 65 & `vn' <= 69.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs4 4
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"70"', "", "*", "else") & `"70"' != bsubstr("missing", 1, max(3,length(`"70"'))) & `"70"' != bsubstr("nonmissing", 1
> , max(4,length(`"70"'))) {
  - if `"`1'"' == "=" {
  = if `"70"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs5 5
  - GetEl `"`1'"' `statcode'
  = GetEl `"70"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 70
    - if !_rc {
    - return local s1 `v'
    = return local s1 70
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 70
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"74.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 74.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 74.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 74.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs5 "float(`vn') >= float(70) & float(`vn') <= float(74.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs5 "`vn' >= 70 & `vn' <= 74.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs5 5
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"75"', "", "*", "else") & `"75"' != bsubstr("missing", 1, max(3,length(`"75"'))) & `"75"' != bsubstr("nonmissing", 1
> , max(4,length(`"75"'))) {
  - if `"`1'"' == "=" {
  = if `"75"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs6 6
  - GetEl `"`1'"' `statcode'
  = GetEl `"75"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 75
    - if !_rc {
    - return local s1 `v'
    = return local s1 75
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 75
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"79.9999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 79.9999
    - if !_rc {
    - return local s1 `v'
    = return local s1 79.9999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 79.9999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs6 "float(`vn') >= float(75) & float(`vn') <= float(79.9999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs6 "`vn' >= 75 & `vn' <= 79.9999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"6"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 6
    - if !_rc {
    - return local s1 `v'
    = return local s1 6
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs6 6
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"80"', "", "*", "else") & `"80"' != bsubstr("missing", 1, max(3,length(`"80"'))) & `"80"' != bsubstr("nonmissing", 1
> , max(4,length(`"80"'))) {
  - if `"`1'"' == "=" {
  = if `"80"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs7 7
  - GetEl `"`1'"' `statcode'
  = GetEl `"80"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 80
    - if !_rc {
    - return local s1 `v'
    = return local s1 80
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 80
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs7 "float(`vn') >= float(80) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs7 "`vn' >= 80 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"7"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 7
    - if !_rc {
    - return local s1 `v'
    = return local s1 7
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs7 7
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 7
  - local nrhs = `j'- 1
  = local nrhs = 8- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = age if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type age
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ age if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "93" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 7 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(age) >= float(0) & float(age) <= float(15.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(0) & float(age) <= float(15.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(age) >= float(16) & float(age) <= float(44.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(16) & float(age) <= float(44.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(age) >= float(45) & float(age) <= float(64.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(45) & float(age) <= float(64.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 4 if __000002==1 & float(age) >= float(65) & float(age) <= float(69.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(65) & float(age) <= float(69.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 5 if __000002==1 & float(age) >= float(70) & float(age) <= float(74.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(70) & float(age) <= float(74.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 6 if __000002==1 & float(age) >= float(75) & float(age) <= float(79.9999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(75) & float(age) <= float(79.9999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 7 if __000002==1 & float(age) >= float(80) & float(age) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(80) & float(age) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(age) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "agegroup" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"agegroup"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of agegroup
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(795 differences between age and agegroup)"
(795 differences between age and agegroup)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "agegroup" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of agegroup
  - gen `g' = `NEW`iv''
  = gen agegroup = __000003
  - recast `vntype`iv'' `g'
  = recast byte agegroup
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize agegroup
    - local stop : word count `varlist'
    = local stop : word count agegroup
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen byte __000005 = agegroup
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if agegroup~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label agegroup
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format agegroup
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label agegroup
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename agegroup __000005
    - move `RECAST' ``i''
    = move __000005 agegroup
    - drop ``i''
    = drop agegroup
    - rename `RECAST' ``i''
    = rename __000005 agegroup
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label age
  - if `"`vlab'"' != "" {
  = if `"Age (years)"' != "" {
  - local vlab `" (`vlab')"'
  = local vlab `" (Age (years))"'
  - }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var agegroup `"RECODE of age (Age (years))"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var agegroup `"RECODE of age (Age (years))"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label define agegroup 1 "0-<16" 2 "16-<45" 3 "45-<65" 4 "65-<70" 5 "70-<75" 6 "75-<80" 6 "80+"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define agegroup 1 "0-<16" 2 "16-<45" 3 "45-<65" 4 "65-<70" 5 "70-<75" 6 "75-<80" 6 "80+"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values agegroup agegroup
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" agegroup"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "agegroup"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "agegroup" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist agegroup {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values agegroup agegroup 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- assert agegroup<.
- qui summ age
- mkspline age = age, cubic nknots(4)
  ------------------------------------------------------------------------------------------------------------------ begin mkspline ---
  - version 6, missing
  - gettoken name 0 : 0, parse(" =")
  - gettoken eqsign : 0, parse(" =")
  - if "`eqsign'" == "=" {
  = if "=" == "=" {
  - gettoken eqsign 0 : 0, parse(" =")
  - syntax varname [if] [in] [fweight], cubic [NKnots(numlist max=1) Knots(numlist) DIsplayknots]
  - marksample touse
  - if "`weight'" != "" {
  = if "" != "" {
    tempvar wgt
    qui gen `wgt' `exp'
    }
  - if "`nknots'"!="" {
  = if "4"!="" {
  - local nk `nknots'
  = local nk 4
  - }
  - else {
    local nk=5
    }
  - if "`knots'"!="" {
  = if ""!="" {
    local nc 0
    tokenize "`knots'"
    while "`1'" != "" {
    local nc = `nc' + 1
    local t`nc' "`1'"
    mac shift
    }
    }
  - if "`nknots'"!="" & "`knots'"=="" {
  = if "4"!="" & ""=="" {
  - local nc `nk'
  = local nc 4
  - }
  - if "`nknots'"=="" & "`knots'"!="" {
  = if "4"=="" & ""!="" {
    local nk `nc'
    }
  - if "`nknots'"!="" & "`knots'"!="" {
  = if "4"!="" & ""!="" {
    if `nc' != `nk' {
    display as error "Count in nknots must be the same as the number of knots specified."
    error 498
    }
    }
  - sort `varlist'
  = sort age
  - if "`knots'"!="" {
  = if ""!="" {
    if `nc' < 2 {
    display as error "Restricted cubic splines must have at least 2 knots."
    error 498
    }
    local prevt=`t1'
    local j=2
    while `j'<=`nk' {
    if `t`j'' <= `prevt' {
    disp as error "Knots must be in increasing order."
    error 498
    }
    local prevt=`t`j''
    local j=`j'+1
    }
    }
  - else {
  - if "`weight'"!="" {
  = if ""!="" {
    local f = "f"
    local fwgt = "[fw `exp']"
    }
  - if `nk' == 3 {
  = if 4 == 3 {
    qui `f'centile `varlist' if `touse' `fwgt', centile(10 50 90)
    }
  - else if `nk'== 4 {
  = else if 4== 4 {
  - qui `f'centile `varlist' if `touse' `fwgt', centile(5 35 65 95)
  = qui centile age if __000001 , centile(5 35 65 95)
    ----------------------------------------------------------------------------------------------------------------- begin centile ---
    - version 6, missing
    - syntax [varlist] [if] [in] [, CCi Centile(numlist >=0 <=100) Level(cilevel) Meansd Normal ]
    - tempvar touse notuse
    - mark `touse' `if' `in'
    = mark __000003 if __000001  
    - qui gen byte `notuse' = .
    = qui gen byte __000004 = .
    - if "`centile'"=="" { local centile 50 }
    = if "5 35 65 95"=="" { local centile 50 }
    - local nc 0
    - tokenize "`centile'"
    = tokenize "5 35 65 95"
    - while "`1'" != "" {
    = while "5" != "" {
    - local nc = `nc' + 1
    = local nc = 0 + 1
    - local c`nc' `1'
    = local c1 5
    - local cents "`cents' `1'"
    = local cents " 5"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "35" != "" {
    - local nc = `nc' + 1
    = local nc = 1 + 1
    - local c`nc' `1'
    = local c2 35
    - local cents "`cents' `1'"
    = local cents " 5 35"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "65" != "" {
    - local nc = `nc' + 1
    = local nc = 2 + 1
    - local c`nc' `1'
    = local c3 65
    - local cents "`cents' `1'"
    = local cents " 5 35 65"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "95" != "" {
    - local nc = `nc' + 1
    = local nc = 3 + 1
    - local c`nc' `1'
    = local c4 95
    - local cents "`cents' `1'"
    = local cents " 5 35 65 95"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "" != "" {
      local nc = `nc' + 1
      local c`nc' `1'
      local cents "`cents' `1'"
      mac shift
      }
    - local tl1 "      Obs "
    - local ttl "Percentile"
    - if "`meansd'"=="" {
    = if ""=="" {
    - if "`normal'"=="" {
    = if ""=="" {
    - if "`cci'"~="" {
    = if ""~="" {
      di in smcl in gr _n _col(56) "{hline 2} Binomial Exact {hline 2}"
      }
    - else {
    - di in smcl in gr _n _col(56) "{hline 2} Binom. Interp. {hline 2}"
    - }
    - }
    - else {
      di in smcl in gr _n _col(36) "{hline 2} Normal, based on observed centiles {hline 2}"
      }
    - }
    - else {
      di in smcl in gr _n _col(36) "{hline 2} Normal, based on mean and std. dev.{hline 2}"
      }
    - local cil `=string(`level')'
    = local cil 95
    - local cil `=length("`cil'")'
    = local cil 2
    - local spaces ""
    - if `cil' == 2 {
    = if 2 == 2 {
    - local spaces "   "
    - }
    - else if `cil' == 4 {
    = else if 2 == 4 {
      local spaces " "
      }
    - di in smcl in gr `"    Variable {c |} `tl1' `ttl'    Centile     `spaces'[`=strsubdp("`level'")'% Conf. Interval]"' _n "{hline 13
> }{c +}{hline 61}"
    = di in smcl in gr `"    Variable {c |}       Obs  Percentile    Centile        [95% Conf. Interval]"' _n "{hline 13}{c +}{hline 61
> }"
    - local anymark 0
    - local alpha2 = (100-`level')/200
    = local alpha2 = (100-95)/200
    - local zalpha2 = -invnorm(`alpha2')
    = local zalpha2 = -invnorm(.025)
    - tokenize `varlist'
    = tokenize age
    - local vl
    - while "`1'" != "" {
    = while "age" != "" {
    - capt conf str var `1'
    = capt conf str var age
    - if _rc {
    - local vl "`vl' `1'"
    = local vl " age"
    - }
    - mac shift
    - }
    - while "`1'" != "" {
    = while "" != "" {
      capt conf str var `1'
      if _rc {
      local vl "`vl' `1'"
      }
      mac shift
      }
    - local nobs 0
    - tokenize `vl'
    = tokenize  age
    - while "`1'" ~= "" {
    = while "age" ~= "" {
    - local yvar "`1'"
    = local yvar "age"
    - qui replace `notuse' = ~`touse'
    = qui replace __000004 = ~__000003
    - qui replace `notuse' = 1 if `yvar'>=.
    = qui replace __000004 = 1 if age>=.
    - sort `notuse' `yvar'
    = sort __000004 age
    - qui sum `yvar' if ~`notuse'
    = qui sum age if ~__000004
    - local nobs = r(N)
    - local mean = r(mean)
    - local sd = sqrt(r(Var))
    - local fmt : format `yvar'
    = local fmt : format age
    - if bsubstr("`fmt'",-1,1)=="f" {
    = if bsubstr("%8.0g",-1,1)=="f" {
      local ofmt="%9."+bsubstr("`fmt'",-2,2)
      }
    - else if bsubstr("`fmt'",-2,2)=="fc" {
    = else if bsubstr("%8.0g",-2,2)=="fc" {
      local ofmt = "%9." + bsubstr("`fmt'",-3,3)
      }
    - else local ofmt "%9.0g"
    - local j 1
    - local s 7
    - while `j' <= `nc' {
    = while 1 <= 4 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c1"
    - local quant = ``cj''/100
    = local quant = 5/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.05
    - local i1 = int(`frac1')
    = local i1 = int(40.45)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 40.45-40
    - if `i1' >= `nobs' {
    = if 40 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 40 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[40]+ .4500000000000028*(age[40+1]-age[40])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.05
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(40.40000000000001*(1-.05))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+40.40000000000001-12.14228930384384)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+40.40000000000001+12.14228930384384)
    - local r1 `rzHIGH'
    = local r1 54
    - if `r1' > `nobs'+1 {
    = if 54 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 54-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,53,.05)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,54,.05)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0291194163183424 > .025 {
    - if `p1' <= `alpha2' {
    = if .0205813306838262 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0291194163183424 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 53 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 53 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[53] +((.0291194163183424-.025)/(.0291194163183424-.0205813306838262)) *(age[54]-age[53])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 28
    - if `r1' < 0 { local r1 0 }
    = if 28 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 28-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,27+1,.05)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,28+1,.05)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0228745674399278 > .025 {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
    - else if `p0' == `alpha2' {
    = else if .0146817720348236 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
    - local r0 = `r1'
    = local r0 = 28
    - local p0 = `p1'
    = local p0 = .0228745674399278
    - local r1 = `r1'+1
    = local r1 = 28+1
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,29+1,.05)
    - }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0344723540388047 > .025 {
    - if `p0' <= `alpha2' {
    = if .0228745674399278 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0228745674399278 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 29 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 29 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[29] +((.025-.0228745674399278)/(.0344723540388047-.0228745674399278)) *(age[29+1]-age[29])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (1 == 1) & (808 > 0) {
    - di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
    = di in smcl in gr %12s abbrev("age",12) " {c |}" _col(14) in yel %10.0fc 808 _col(29) %7.0g 5 _col(39) %9.0g 3.450000000000003 _co
> l(55) %9.0g 2 _col(67) %9.0g 5 in gr ""
    - }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 7 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_1 = 3.450000000000003
    - global S_`s' `centil'
    = global S_7 3.450000000000003
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_1 = 2
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_1 = 5
    - local j = `j'+1
    = local j = 1+1
    - local s = `s'+1
    = local s = 7+1
    - }
    - while `j' <= `nc' {
    = while 2 <= 4 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c2"
    - local quant = ``cj''/100
    = local quant = 35/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.35
    - local i1 = int(`frac1')
    = local i1 = int(283.15)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 283.15-283
    - if `i1' >= `nobs' {
    = if 283 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 283 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[283]+ .1499999999999773*(age[283+1]-age[283])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.35
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(282.8*(1-.35))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+282.8-26.57323767289177)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+282.8+26.57323767289177)
    - local r1 `rzHIGH'
    = local r1 310
    - if `r1' > `nobs'+1 {
    = if 310 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 310-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,309,.35)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,310,.35)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0296017570936393 > .025 {
    - if `p1' <= `alpha2' {
    = if .0250280416602473 <= .025 {
      local done 1
      }
    - else {
    - local r0 = `r1'
    = local r0 = 310
    - local p0 = `p1'
    = local p0 = .0250280416602473
    - local r1 = `r1'+1
    = local r1 = 310+1
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,311,.35)
    - }
    - }
    - else if `p0' == `alpha2' {
    = else if .0250280416602473 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0250280416602473 > .025 {
    - if `p1' <= `alpha2' {
    = if .0210637766456472 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0250280416602473 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 310 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 310 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[310] +((.0250280416602473-.025)/(.0250280416602473-.0210637766456472)) *(age[311]-age[310])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 256
    - if `r1' < 0 { local r1 0 }
    = if 256 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 256-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,255+1,.35)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,256+1,.35)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0255399285683089 > .025 {
    - if `p0' <= `alpha2' {
    = if .0213948403279046 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0213948403279046 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 256 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 256 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[256] +((.025-.0213948403279046)/(.0255399285683089-.0213948403279046)) *(age[256+1]-age[256])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (2 == 1) & (808 > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
    = di in smcl in gr "             {c |}" in yel _col(29) %7.0g 35 _col(39) %9.0g 27 _col(55) %9.0g 24 _col(67) %9.0g 29 in gr ""
    - }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 8 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_2 = 27
    - global S_`s' `centil'
    = global S_8 27
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_2 = 24
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_2 = 29
    - local j = `j'+1
    = local j = 2+1
    - local s = `s'+1
    = local s = 8+1
    - }
    - while `j' <= `nc' {
    = while 3 <= 4 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c3"
    - local quant = ``cj''/100
    = local quant = 65/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.65
    - local i1 = int(`frac1')
    = local i1 = int(525.85)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 525.85-525
    - if `i1' >= `nobs' {
    = if 525 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 525 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[525]+ .8500000000000227*(age[525+1]-age[525])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.65
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(525.2*(1-.65))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+525.2-26.57323767289176)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+525.2+26.57323767289176)
    - local r1 `rzHIGH'
    = local r1 553
    - if `r1' > `nobs'+1 {
    = if 553 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 553-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,552,.65)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,553,.65)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0255399285683089 > .025 {
    - if `p1' <= `alpha2' {
    = if .0213948403279046 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0255399285683089 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 552 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 552 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[552] +((.0255399285683089-.025)/(.0255399285683089-.0213948403279046)) *(age[553]-age[552])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 499
    - if `r1' < 0 { local r1 0 }
    = if 499 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 499-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,498+1,.65)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,499+1,.65)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0296017570936393 > .025 {
    - if `p0' <= `alpha2' {
    = if .0250280416602473 <= .025 {
      local done 1
      }
    - else {
    - local r1 = `r0'
    = local r1 = 498
    - local p1 = `p0'
    = local p1 = .0250280416602473
    - local r0 = `r0'-1
    = local r0 = 498-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,497+1,.65)
    - }
    - }
    - else if `p0' == `alpha2' {
    = else if .0210637766456472 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0250280416602473 > .025 {
    - if `p0' <= `alpha2' {
    = if .0210637766456472 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0210637766456472 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 498 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 498 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[498] +((.025-.0210637766456472)/(.0250280416602473-.0210637766456472)) *(age[498+1]-age[498])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (3 == 1) & (808 > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
    = di in smcl in gr "             {c |}" in yel _col(29) %7.0g 65 _col(39) %9.0g 50 _col(55) %9.0g 47 _col(67) %9.0g 54 in gr ""
    - }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 9 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_3 = 50
    - global S_`s' `centil'
    = global S_9 50
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_3 = 47
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_3 = 54
    - local j = `j'+1
    = local j = 3+1
    - local s = `s'+1
    = local s = 9+1
    - }
    - while `j' <= `nc' {
    = while 4 <= 4 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c4"
    - local quant = ``cj''/100
    = local quant = 95/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.95
    - local i1 = int(`frac1')
    = local i1 = int(768.55)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 768.55-768
    - if `i1' >= `nobs' {
    = if 768 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 768 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[768]+ .5499999999999545*(age[768+1]-age[768])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.95
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(767.5999999999999*(1-.95))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+767.5999999999999-12.14228930384385)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+767.5999999999999+12.14228930384385)
    - local r1 `rzHIGH'
    = local r1 781
    - if `r1' > `nobs'+1 {
    = if 781 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 781-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,780,.95)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,781,.95)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0228745674399273 > .025 {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
    - else if `p0' == `alpha2' {
    = else if .0228745674399273 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
    - local r1 = `r0'
    = local r1 = 780
    - local p1 = `p0'
    = local p1 = .0228745674399273
    - local r0 = `r0'-1
    = local r0 = 780-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,779,.95)
    - }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0344723540388042 > .025 {
    - if `p1' <= `alpha2' {
    = if .0228745674399273 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0344723540388042 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 779 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 779 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[779] +((.0344723540388042-.025)/(.0344723540388042-.0228745674399273)) *(age[780]-age[779])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 755
    - if `r1' < 0 { local r1 0 }
    = if 755 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 755-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,754+1,.95)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,755+1,.95)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0291194163183428 > .025 {
    - if `p0' <= `alpha2' {
    = if .0205813306838265 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0205813306838265 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 755 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 755 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[755] +((.025-.0205813306838265)/(.0291194163183428-.0205813306838265)) *(age[755+1]-age[755])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (4 == 1) & (808 > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
    = di in smcl in gr "             {c |}" in yel _col(29) %7.0g 95 _col(39) %9.0g 80 _col(55) %9.0g 77 _col(67) %9.0g 83 in gr ""
    - }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 10 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_4 = 80
    - global S_`s' `centil'
    = global S_10 80
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_4 = 77
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_4 = 83
    - local j = `j'+1
    = local j = 4+1
    - local s = `s'+1
    = local s = 10+1
    - }
    - while `j' <= `nc' {
    = while 5 <= 4 {
      local mark ""
      local cj "c`j'"
      local quant = ``cj''/100
      if "`meansd'" ~= "" & (`nobs' > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      else if `nobs' > 0 {
      local frac1 = (`nobs'+1)*`quant'
      local i1 = int(`frac1')
      local frac1 = `frac1'-`i1'
      if `i1' >= `nobs' {
      local centil = `yvar'[`nobs']
      }
      else if `i1' < 1 {
      local centil = `yvar'[1]
      }
      else {
      local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
      }
      if "`normal'" == "" {
      local nq = `nobs'*`quant'
      local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
      local rzLOW = int(.5+`nq'-`z')
      local rzHIGH = 1+int(.5+`nq'+`z')
      local r1 `rzHIGH'
      if `r1' > `nobs'+1 {
      local r1 = `nobs'+1
      }
      local r0 = `r1'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      local p1 = Binomial(`nobs',`r1',`quant')
      local done 0
      while ~`done' {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
      if `r0' >= `nobs' {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r0' < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
      }
      else {
      local cUPPER = `yvar'[`r1']
      }
      }
      local r1 `rzLOW'
      if `r1' < 0 { local r1 0 }
      local r0 = `r1'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      local done 0
      while ~`done' {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
      if `r1' >= `nobs' {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r1' < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
      }
      else {
      local cLOWER = `yvar'[`r1']
      }
      }
      }
      else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      }
      if (`j' == 1) & (`nobs' > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
      else if `nobs' > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
      else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
      local tmp = `s' - 6
      ret scalar c_`tmp' = `centil'
      global S_`s' `centil'
      ret scalar lb_`tmp' = `cLOWER'
      ret scalar ub_`tmp' = `cUPPER'
      local j = `j'+1
      local s = `s'+1
      }
    - mac shift
    - }
    - while "`1'" ~= "" {
    = while "" ~= "" {
      local yvar "`1'"
      qui replace `notuse' = ~`touse'
      qui replace `notuse' = 1 if `yvar'>=.
      sort `notuse' `yvar'
      qui sum `yvar' if ~`notuse'
      local nobs = r(N)
      local mean = r(mean)
      local sd = sqrt(r(Var))
      local fmt : format `yvar'
      if bsubstr("`fmt'",-1,1)=="f" {
      local ofmt="%9."+bsubstr("`fmt'",-2,2)
      }
      else if bsubstr("`fmt'",-2,2)=="fc" {
      local ofmt = "%9." + bsubstr("`fmt'",-3,3)
      }
      else local ofmt "%9.0g"
      local j 1
      local s 7
      while `j' <= `nc' {
      local mark ""
      local cj "c`j'"
      local quant = ``cj''/100
      if "`meansd'" ~= "" & (`nobs' > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      else if `nobs' > 0 {
      local frac1 = (`nobs'+1)*`quant'
      local i1 = int(`frac1')
      local frac1 = `frac1'-`i1'
      if `i1' >= `nobs' {
      local centil = `yvar'[`nobs']
      }
      else if `i1' < 1 {
      local centil = `yvar'[1]
      }
      else {
      local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
      }
      if "`normal'" == "" {
      local nq = `nobs'*`quant'
      local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
      local rzLOW = int(.5+`nq'-`z')
      local rzHIGH = 1+int(.5+`nq'+`z')
      local r1 `rzHIGH'
      if `r1' > `nobs'+1 {
      local r1 = `nobs'+1
      }
      local r0 = `r1'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      local p1 = Binomial(`nobs',`r1',`quant')
      local done 0
      while ~`done' {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
      if `r0' >= `nobs' {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r0' < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
      }
      else {
      local cUPPER = `yvar'[`r1']
      }
      }
      local r1 `rzLOW'
      if `r1' < 0 { local r1 0 }
      local r0 = `r1'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      local done 0
      while ~`done' {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
      if `r1' >= `nobs' {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r1' < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
      }
      else {
      local cLOWER = `yvar'[`r1']
      }
      }
      }
      else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      }
      if (`j' == 1) & (`nobs' > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
      else if `nobs' > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
      else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
      local tmp = `s' - 6
      ret scalar c_`tmp' = `centil'
      global S_`s' `centil'
      ret scalar lb_`tmp' = `cLOWER'
      ret scalar ub_`tmp' = `cUPPER'
      local j = `j'+1
      local s = `s'+1
      }
      mac shift
      }
    - if "`anymark'" == "1" {
    = if "0" == "1" {
      di in gr _n "`mark' Lower (upper) confidence limit held at minimum (maximum) of sample"
      }
    - ret scalar N = `nobs'
    = ret scalar N = 808
    - ret scalar n_cent = `nc'
    = ret scalar n_cent = 4
    - ret local centiles `cents'
    = ret local centiles  5 35 65 95
    - global S_1 `nobs'
    = global S_1 808
    - global S_2 `nc'
    = global S_2 4
    - global S_3 ``cj''
    = global S_3 95
    - global S_4 `centil'
    = global S_4 80
    - global S_5 `cLOWER'
    = global S_5 77
    - global S_6 `cUPPER'
    = global S_6 83
    ------------------------------------------------------------------------------------------------------------------- end centile ---
  - }
  - else if `nk'== 5 {
  = else if 4== 5 {
    qui `f'centile `varlist' if `touse' `fwgt', centile(5 27.5 50 72.5 95)
    }
  - else if `nk'== 6 {
  = else if 4== 6 {
    qui `f'centile `varlist' if `touse' `fwgt', centile(5 23 41 59 77 95)
    }
  - else if `nk'== 7 {
  = else if 4== 7 {
    qui `f'centile `varlist' if `touse' `fwgt', centile(2.5 18.33 34.17 50 65.83 81.67 97.5)
    }
  - else {
    display as error "Restricted cubic splines with `nk' knots at default values not implemented."
    display as error "Number of knots specified in nknots() must be between 3 and 7."
    error 498
    }
  - forvalues i=1 / `nk' {
  = forvalues i=1 / 4 {
  - forvalues i=1 / `nk' {
  - local t`i' = r(c_`i')
  = local t1 = r(c_1)
  - }
  - local t`i' = r(c_`i')
  = local t2 = r(c_2)
  - }
  - local t`i' = r(c_`i')
  = local t3 = r(c_3)
  - }
  - local t`i' = r(c_`i')
  = local t4 = r(c_4)
  - }
  - qui sum `varlist' `fwgt', meanonly
  = qui sum age , meanonly
  - local cenmin = 5/(r(N)+1)*100
  - local cenmax = (r(N)-4)/(r(N)+1)*100
  - qui `f'centile `varlist' if `touse' `fwgt', centile(`cenmin' `cenmax')
  = qui centile age if __000001 , centile(.6180469715698393 99.38195302843016)
    ----------------------------------------------------------------------------------------------------------------- begin centile ---
    - version 6, missing
    - syntax [varlist] [if] [in] [, CCi Centile(numlist >=0 <=100) Level(cilevel) Meansd Normal ]
    - tempvar touse notuse
    - mark `touse' `if' `in'
    = mark __000003 if __000001  
    - qui gen byte `notuse' = .
    = qui gen byte __000004 = .
    - if "`centile'"=="" { local centile 50 }
    = if ".6180469715698 99.38195302843"=="" { local centile 50 }
    - local nc 0
    - tokenize "`centile'"
    = tokenize ".6180469715698 99.38195302843"
    - while "`1'" != "" {
    = while ".6180469715698" != "" {
    - local nc = `nc' + 1
    = local nc = 0 + 1
    - local c`nc' `1'
    = local c1 .6180469715698
    - local cents "`cents' `1'"
    = local cents " .6180469715698"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "99.38195302843" != "" {
    - local nc = `nc' + 1
    = local nc = 1 + 1
    - local c`nc' `1'
    = local c2 99.38195302843
    - local cents "`cents' `1'"
    = local cents " .6180469715698 99.38195302843"
    - mac shift
    - }
    - while "`1'" != "" {
    = while "" != "" {
      local nc = `nc' + 1
      local c`nc' `1'
      local cents "`cents' `1'"
      mac shift
      }
    - local tl1 "      Obs "
    - local ttl "Percentile"
    - if "`meansd'"=="" {
    = if ""=="" {
    - if "`normal'"=="" {
    = if ""=="" {
    - if "`cci'"~="" {
    = if ""~="" {
      di in smcl in gr _n _col(56) "{hline 2} Binomial Exact {hline 2}"
      }
    - else {
    - di in smcl in gr _n _col(56) "{hline 2} Binom. Interp. {hline 2}"
    - }
    - }
    - else {
      di in smcl in gr _n _col(36) "{hline 2} Normal, based on observed centiles {hline 2}"
      }
    - }
    - else {
      di in smcl in gr _n _col(36) "{hline 2} Normal, based on mean and std. dev.{hline 2}"
      }
    - local cil `=string(`level')'
    = local cil 95
    - local cil `=length("`cil'")'
    = local cil 2
    - local spaces ""
    - if `cil' == 2 {
    = if 2 == 2 {
    - local spaces "   "
    - }
    - else if `cil' == 4 {
    = else if 2 == 4 {
      local spaces " "
      }
    - di in smcl in gr `"    Variable {c |} `tl1' `ttl'    Centile     `spaces'[`=strsubdp("`level'")'% Conf. Interval]"' _n "{hline 13
> }{c +}{hline 61}"
    = di in smcl in gr `"    Variable {c |}       Obs  Percentile    Centile        [95% Conf. Interval]"' _n "{hline 13}{c +}{hline 61
> }"
    - local anymark 0
    - local alpha2 = (100-`level')/200
    = local alpha2 = (100-95)/200
    - local zalpha2 = -invnorm(`alpha2')
    = local zalpha2 = -invnorm(.025)
    - tokenize `varlist'
    = tokenize age
    - local vl
    - while "`1'" != "" {
    = while "age" != "" {
    - capt conf str var `1'
    = capt conf str var age
    - if _rc {
    - local vl "`vl' `1'"
    = local vl " age"
    - }
    - mac shift
    - }
    - while "`1'" != "" {
    = while "" != "" {
      capt conf str var `1'
      if _rc {
      local vl "`vl' `1'"
      }
      mac shift
      }
    - local nobs 0
    - tokenize `vl'
    = tokenize  age
    - while "`1'" ~= "" {
    = while "age" ~= "" {
    - local yvar "`1'"
    = local yvar "age"
    - qui replace `notuse' = ~`touse'
    = qui replace __000004 = ~__000003
    - qui replace `notuse' = 1 if `yvar'>=.
    = qui replace __000004 = 1 if age>=.
    - sort `notuse' `yvar'
    = sort __000004 age
    - qui sum `yvar' if ~`notuse'
    = qui sum age if ~__000004
    - local nobs = r(N)
    - local mean = r(mean)
    - local sd = sqrt(r(Var))
    - local fmt : format `yvar'
    = local fmt : format age
    - if bsubstr("`fmt'",-1,1)=="f" {
    = if bsubstr("%8.0g",-1,1)=="f" {
      local ofmt="%9."+bsubstr("`fmt'",-2,2)
      }
    - else if bsubstr("`fmt'",-2,2)=="fc" {
    = else if bsubstr("%8.0g",-2,2)=="fc" {
      local ofmt = "%9." + bsubstr("`fmt'",-3,3)
      }
    - else local ofmt "%9.0g"
    - local j 1
    - local s 7
    - while `j' <= `nc' {
    = while 1 <= 2 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c1"
    - local quant = ``cj''/100
    = local quant = .6180469715698/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.006180469715698
    - local i1 = int(`frac1')
    = local i1 = int(4.999999999999682)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 4.999999999999682-4
    - if `i1' >= `nobs' {
    = if 4 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 4 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[4]+ .999999999999682*(age[4+1]-age[4])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.006180469715698
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(4.993819530283984*(1-.006180469715698))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+4.993819530283984-4.366347297326683)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+4.993819530283984+4.366347297326683)
    - local r1 `rzHIGH'
    = local r1 10
    - if `r1' > `nobs'+1 {
    = if 10 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 10-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,9,.006180469715698)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,10,.006180469715698)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0670851301688769 > .025 {
    - if `p1' <= `alpha2' {
    = if .0311574830447927 <= .025 {
      local done 1
      }
    - else {
    - local r0 = `r1'
    = local r0 = 10
    - local p0 = `p1'
    = local p0 = .0311574830447927
    - local r1 = `r1'+1
    = local r1 = 10+1
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,11,.006180469715698)
    - }
    - }
    - else if `p0' == `alpha2' {
    = else if .0311574830447927 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0311574830447927 > .025 {
    - if `p1' <= `alpha2' {
    = if .0133053748034113 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0311574830447927 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 10 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 10 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[10] +((.0311574830447927-.025)/(.0311574830447927-.0133053748034113)) *(age[11]-age[10])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 1
    - if `r1' < 0 { local r1 0 }
    = if 1 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 1-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,0+1,.006180469715698)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,1+1,.006180469715698)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0402188836480759 > .025 {
    - if `p0' <= `alpha2' {
    = if .0066754711917949 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0066754711917949 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 1 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 1 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[1] +((.025-.0066754711917949)/(.0402188836480759-.0066754711917949)) *(age[1+1]-age[1])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (1 == 1) & (808 > 0) {
    - di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
    = di in smcl in gr %12s abbrev("age",12) " {c |}" _col(14) in yel %10.0fc 808 _col(29) %7.0g .6180469715698 _col(39) %9.0g 0 _col(5
> 5) %9.0g 0 _col(67) %9.0g 1 in gr ""
    - }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 7 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_1 = 0
    - global S_`s' `centil'
    = global S_7 0
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_1 = 0
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_1 = 1
    - local j = `j'+1
    = local j = 1+1
    - local s = `s'+1
    = local s = 7+1
    - }
    - while `j' <= `nc' {
    = while 2 <= 2 {
    - local mark ""
    - local cj "c`j'"
    = local cj "c2"
    - local quant = ``cj''/100
    = local quant = 99.38195302843/100
    - if "`meansd'" ~= "" & (`nobs' > 0) {
    = if "" ~= "" & (808 > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - local frac1 = (`nobs'+1)*`quant'
    = local frac1 = (808+1)*.9938195302843
    - local i1 = int(`frac1')
    = local i1 = int(803.9999999999987)
    - local frac1 = `frac1'-`i1'
    = local frac1 = 803.9999999999987-803
    - if `i1' >= `nobs' {
    = if 803 >= 808 {
      local centil = `yvar'[`nobs']
      }
    - else if `i1' < 1 {
    = else if 803 < 1 {
      local centil = `yvar'[1]
      }
    - else {
    - local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
    = local centil = age[803]+ .9999999999987494*(age[803+1]-age[803])
    - }
    - if "`normal'" == "" {
    = if "" == "" {
    - local nq = `nobs'*`quant'
    = local nq = 808*.9938195302843
    - local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
    = local z = sqrt(803.0061804697144*(1-.9938195302843))*1.959963984540054
    - local rzLOW = int(.5+`nq'-`z')
    = local rzLOW = int(.5+803.0061804697144-4.366347297327372)
    - local rzHIGH = 1+int(.5+`nq'+`z')
    = local rzHIGH = 1+int(.5+803.0061804697144+4.366347297327372)
    - local r1 `rzHIGH'
    = local r1 808
    - if `r1' > `nobs'+1 {
    = if 808 > 808+1 {
      local r1 = `nobs'+1
      }
    - local r0 = `r1'-1
    = local r0 = 808-1
    - local p0 = Binomial(`nobs',`r0',`quant')
    = local p0 = Binomial(808,807,.9938195302843)
    - local p1 = Binomial(`nobs',`r1',`quant')
    = local p1 = Binomial(808,808,.9938195302843)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p0' > `alpha2' {
    = if .0402188836480224 > .025 {
    - if `p1' <= `alpha2' {
    = if .0066754711917843 <= .025 {
    - local done 1
    - }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0402188836480224 == .025 {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
    - if `r0' >= `nobs' {
    = if 807 >= 808 {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r0' < 1 {
    = else if 807 < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
    = local cUPPER = age[807] +((.0402188836480224-.025)/(.0402188836480224-.0066754711917843)) *(age[808]-age[807])
    - }
    - else {
      local cUPPER = `yvar'[`r1']
      }
    - }
    - local r1 `rzLOW'
    = local r1 799
    - if `r1' < 0 { local r1 0 }
    = if 799 < 0 { local r1 0 }
    - local r0 = `r1'-1
    = local r0 = 799-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,798+1,.9938195302843)
    - local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
    = local p1 = 1-Binomial(808,799+1,.9938195302843)
    - local done 0
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0670851301689795 > .025 {
    - if `p0' <= `alpha2' {
    = if .0311574830448496 <= .025 {
      local done 1
      }
    - else {
    - local r1 = `r0'
    = local r1 = 798
    - local p1 = `p0'
    = local p1 = .0311574830448496
    - local r0 = `r0'-1
    = local r0 = 798-1
    - local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
    = local p0 = 1-Binomial(808,797+1,.9938195302843)
    - }
    - }
    - else if `p0' == `alpha2' {
    = else if .0133053748034394 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~0 {
    - if `p1' > `alpha2' {
    = if .0311574830448496 > .025 {
    - if `p0' <= `alpha2' {
    = if .0133053748034394 <= .025 {
    - local done 1
    - }
    - else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
    - }
    - else if `p0' == `alpha2' {
    = else if .0133053748034394 == .025 {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
    - else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
    - }
    - while ~`done' {
    = while ~1 {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
    - if `r1' >= `nobs' {
    = if 798 >= 808 {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
    - else if `r1' < 1 {
    = else if 798 < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
    - else {
    - if "`cci'" == "" {
    = if "" == "" {
    - local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
    = local cLOWER = age[798] +((.025-.0133053748034394)/(.0311574830448496-.0133053748034394)) *(age[798+1]-age[798])
    - }
    - else {
      local cLOWER = `yvar'[`r1']
      }
    - }
    - }
    - else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
    - }
    - if (`j' == 1) & (`nobs' > 0) {
    = if (2 == 1) & (808 > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
    - else if `nobs' > 0 {
    = else if 808 > 0 {
    - di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
    = di in smcl in gr "             {c |}" in yel _col(29) %7.0g 99.38195302843 _col(39) %9.0g 89.99999999999875 _col(55) %9.0g 87 _co
> l(67) %9.0g 93 in gr ""
    - }
    - else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
    - local tmp = `s' - 6
    = local tmp = 8 - 6
    - ret scalar c_`tmp' = `centil'
    = ret scalar c_2 = 89.99999999999875
    - global S_`s' `centil'
    = global S_8 89.99999999999875
    - ret scalar lb_`tmp' = `cLOWER'
    = ret scalar lb_2 = 87
    - ret scalar ub_`tmp' = `cUPPER'
    = ret scalar ub_2 = 93
    - local j = `j'+1
    = local j = 2+1
    - local s = `s'+1
    = local s = 8+1
    - }
    - while `j' <= `nc' {
    = while 3 <= 2 {
      local mark ""
      local cj "c`j'"
      local quant = ``cj''/100
      if "`meansd'" ~= "" & (`nobs' > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      else if `nobs' > 0 {
      local frac1 = (`nobs'+1)*`quant'
      local i1 = int(`frac1')
      local frac1 = `frac1'-`i1'
      if `i1' >= `nobs' {
      local centil = `yvar'[`nobs']
      }
      else if `i1' < 1 {
      local centil = `yvar'[1]
      }
      else {
      local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
      }
      if "`normal'" == "" {
      local nq = `nobs'*`quant'
      local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
      local rzLOW = int(.5+`nq'-`z')
      local rzHIGH = 1+int(.5+`nq'+`z')
      local r1 `rzHIGH'
      if `r1' > `nobs'+1 {
      local r1 = `nobs'+1
      }
      local r0 = `r1'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      local p1 = Binomial(`nobs',`r1',`quant')
      local done 0
      while ~`done' {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
      if `r0' >= `nobs' {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r0' < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
      }
      else {
      local cUPPER = `yvar'[`r1']
      }
      }
      local r1 `rzLOW'
      if `r1' < 0 { local r1 0 }
      local r0 = `r1'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      local done 0
      while ~`done' {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
      if `r1' >= `nobs' {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r1' < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
      }
      else {
      local cLOWER = `yvar'[`r1']
      }
      }
      }
      else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      }
      if (`j' == 1) & (`nobs' > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
      else if `nobs' > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
      else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
      local tmp = `s' - 6
      ret scalar c_`tmp' = `centil'
      global S_`s' `centil'
      ret scalar lb_`tmp' = `cLOWER'
      ret scalar ub_`tmp' = `cUPPER'
      local j = `j'+1
      local s = `s'+1
      }
    - mac shift
    - }
    - while "`1'" ~= "" {
    = while "" ~= "" {
      local yvar "`1'"
      qui replace `notuse' = ~`touse'
      qui replace `notuse' = 1 if `yvar'>=.
      sort `notuse' `yvar'
      qui sum `yvar' if ~`notuse'
      local nobs = r(N)
      local mean = r(mean)
      local sd = sqrt(r(Var))
      local fmt : format `yvar'
      if bsubstr("`fmt'",-1,1)=="f" {
      local ofmt="%9."+bsubstr("`fmt'",-2,2)
      }
      else if bsubstr("`fmt'",-2,2)=="fc" {
      local ofmt = "%9." + bsubstr("`fmt'",-3,3)
      }
      else local ofmt "%9.0g"
      local j 1
      local s 7
      while `j' <= `nc' {
      local mark ""
      local cj "c`j'"
      local quant = ``cj''/100
      if "`meansd'" ~= "" & (`nobs' > 0) {
      local z = invnorm(`quant')
      local centil = `mean'+`z'*`sd'
      local se = `sd'*sqrt(1/`nobs'+(`z')^2/(2*(`nobs'-1)))
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      else if `nobs' > 0 {
      local frac1 = (`nobs'+1)*`quant'
      local i1 = int(`frac1')
      local frac1 = `frac1'-`i1'
      if `i1' >= `nobs' {
      local centil = `yvar'[`nobs']
      }
      else if `i1' < 1 {
      local centil = `yvar'[1]
      }
      else {
      local centil = `yvar'[`i1']+ `frac1'*(`yvar'[`i1'+1]-`yvar'[`i1'])
      }
      if "`normal'" == "" {
      local nq = `nobs'*`quant'
      local z = sqrt(`nq'*(1-`quant'))*`zalpha2'
      local rzLOW = int(.5+`nq'-`z')
      local rzHIGH = 1+int(.5+`nq'+`z')
      local r1 `rzHIGH'
      if `r1' > `nobs'+1 {
      local r1 = `nobs'+1
      }
      local r0 = `r1'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      local p1 = Binomial(`nobs',`r1',`quant')
      local done 0
      while ~`done' {
      if `p0' > `alpha2' {
      if `p1' <= `alpha2' {
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = Binomial(`nobs',`r1',`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r1 = `r0'
      local p1 = `p0'
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = Binomial(`nobs',`r0',`quant')
      }
      }
      if `r0' >= `nobs' {
      local cUPPER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r0' < 1 {
      local cUPPER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cUPPER = `yvar'[`r0'] +((`p0'-`alpha2')/(`p0'-`p1')) *(`yvar'[`r1']-`yvar'[`r0'])
      }
      else {
      local cUPPER = `yvar'[`r1']
      }
      }
      local r1 `rzLOW'
      if `r1' < 0 { local r1 0 }
      local r0 = `r1'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      local done 0
      while ~`done' {
      if `p1' > `alpha2' {
      if `p0' <= `alpha2' {
      local done 1
      }
      else {
      local r1 = `r0'
      local p1 = `p0'
      local r0 = `r0'-1
      local p0 = 1-Binomial(`nobs',`r0'+1,`quant')
      }
      }
      else if `p0' == `alpha2' {
      local r0 = `r1'
      local p0 = `p1'
      local done 1
      }
      else {
      local r0 = `r1'
      local p0 = `p1'
      local r1 = `r1'+1
      local p1 = 1-Binomial(`nobs',`r1'+1,`quant')
      }
      }
      if `r1' >= `nobs' {
      local cLOWER = `yvar'[`nobs']
      local mark "*"
      local anymark 1
      }
      else if `r1' < 1 {
      local cLOWER = `yvar'[1]
      local mark "*"
      local anymark 1
      }
      else {
      if "`cci'" == "" {
      local cLOWER = `yvar'[`r1'] +((`alpha2'-`p0')/(`p1'-`p0')) *(`yvar'[`r1'+1]-`yvar'[`r1'])
      }
      else {
      local cLOWER = `yvar'[`r1']
      }
      }
      }
      else {
      local dens = exp(-0.5*((`centil'-`mean')/`sd')^2)/(`sd'*sqrt(2*_pi))
      local se = sqrt(`quant'*(1-`quant')/`nobs')/`dens'
      local cLOWER = `centil'-`zalpha2'*`se'
      local cUPPER = `centil'+`zalpha2'*`se'
      }
      }
      if (`j' == 1) & (`nobs' > 0) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %10.0fc `nobs' _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' 
> _col(55) `ofmt' `cLOWER' _col(67) `ofmt' `cUPPER' in gr "`mark'"
      }
      else if `nobs' > 0 {
      di in smcl in gr "             {c |}" in yel _col(29) %7.0g ``cj'' _col(39) `ofmt' `centil' _col(55) `ofmt' `cLOWER' _col(67) `of
> mt' `cUPPER' in gr "`mark'"
      }
      else {
      if (`j' == 1) {
      di in smcl in gr %12s abbrev("`yvar'",12) " {c |}" _col(14) in yel %8.0f `nobs'
      }
      local centil .
      local cLOWER .
      local cUPPER .
      }
      local tmp = `s' - 6
      ret scalar c_`tmp' = `centil'
      global S_`s' `centil'
      ret scalar lb_`tmp' = `cLOWER'
      ret scalar ub_`tmp' = `cUPPER'
      local j = `j'+1
      local s = `s'+1
      }
      mac shift
      }
    - if "`anymark'" == "1" {
    = if "0" == "1" {
      di in gr _n "`mark' Lower (upper) confidence limit held at minimum (maximum) of sample"
      }
    - ret scalar N = `nobs'
    = ret scalar N = 808
    - ret scalar n_cent = `nc'
    = ret scalar n_cent = 2
    - ret local centiles `cents'
    = ret local centiles  .6180469715698 99.38195302843
    - global S_1 `nobs'
    = global S_1 808
    - global S_2 `nc'
    = global S_2 2
    - global S_3 ``cj''
    = global S_3 99.38195302843
    - global S_4 `centil'
    = global S_4 89.99999999999875
    - global S_5 `cLOWER'
    = global S_5 87
    - global S_6 `cUPPER'
    = global S_6 93
    ------------------------------------------------------------------------------------------------------------------- end centile ---
  - local min = r(c_1)
  - local max = r(c_2)
  - if `t1' < `min' {
  = if 3.450000000000003 < 0 {
    local t1 = `min'
    }
  - if `t`nk'' > `max' {
  = if 80 > 89.99999999999875 {
    local t`nk' = `max'
    }
  - }
  - local j = 1
  - matrix loc = J(1,`nk',0)
  = matrix loc = J(1,4,0)
  - local col ""
  - while `j' <= `nk' {
  = while 1 <= 4 {
  - mat loc[1,`j'] = `t`j''
  = mat loc[1,1] = 3.450000000000003
  - local col "`col' knot`j'"
  = local col " knot1"
  - local j = `j'+1
  = local j = 1+1
  - }
  - while `j' <= `nk' {
  = while 2 <= 4 {
  - mat loc[1,`j'] = `t`j''
  = mat loc[1,2] = 27
  - local col "`col' knot`j'"
  = local col " knot1 knot2"
  - local j = `j'+1
  = local j = 2+1
  - }
  - while `j' <= `nk' {
  = while 3 <= 4 {
  - mat loc[1,`j'] = `t`j''
  = mat loc[1,3] = 50
  - local col "`col' knot`j'"
  = local col " knot1 knot2 knot3"
  - local j = `j'+1
  = local j = 3+1
  - }
  - while `j' <= `nk' {
  = while 4 <= 4 {
  - mat loc[1,`j'] = `t`j''
  = mat loc[1,4] = 80
  - local col "`col' knot`j'"
  = local col " knot1 knot2 knot3 knot4"
  - local j = `j'+1
  = local j = 4+1
  - }
  - while `j' <= `nk' {
  = while 5 <= 4 {
    mat loc[1,`j'] = `t`j''
    local col "`col' knot`j'"
    local j = `j'+1
    }
  - mat colnames loc = `col'
  = mat colnames loc =  knot1 knot2 knot3 knot4
  - matrix rownames loc = "`varlist'"
  = matrix rownames loc = "age"
  - local km1 = `nk' - 1
  = local km1 = 4 - 1
  - if `t1' >= `t2' | `t`nk'' <= `t`km1'' {
  = if 3.450000000000003 >= 27 | 80 <= 50 {
    display as error "Sample size too small for this many knots."
    error 198
    }
  - qui gen `name'1=`varlist' if `touse'
  = qui gen age1=age if __000001
  - local j = 1
  - while `j' <= `nk' {
  = while 1 <= 4 {
  - qui gen _Xm`j' = `varlist' - `t`j''
  = qui gen _Xm1 = age - 3.450000000000003
  - uplus _Xm`j' _Xm`j'p
  = uplus _Xm1 _Xm1p
    ---------------------------------------------------------------------------------------------------------- begin mkspline.uplus ---
    - version 7
    - args u uplus
    - qui gen `uplus' = `u'
    = qui gen _Xm1p = _Xm1
    - quietly replace `uplus' = 0 if `u' <= 0
    = quietly replace _Xm1p = 0 if _Xm1 <= 0
    ------------------------------------------------------------------------------------------------------------ end mkspline.uplus ---
  - local j = `j'+1
  = local j = 1+1
  - }
  - while `j' <= `nk' {
  = while 2 <= 4 {
  - qui gen _Xm`j' = `varlist' - `t`j''
  = qui gen _Xm2 = age - 27
  - uplus _Xm`j' _Xm`j'p
  = uplus _Xm2 _Xm2p
    ---------------------------------------------------------------------------------------------------------- begin mkspline.uplus ---
    - version 7
    - args u uplus
    - qui gen `uplus' = `u'
    = qui gen _Xm2p = _Xm2
    - quietly replace `uplus' = 0 if `u' <= 0
    = quietly replace _Xm2p = 0 if _Xm2 <= 0
    ------------------------------------------------------------------------------------------------------------ end mkspline.uplus ---
  - local j = `j'+1
  = local j = 2+1
  - }
  - while `j' <= `nk' {
  = while 3 <= 4 {
  - qui gen _Xm`j' = `varlist' - `t`j''
  = qui gen _Xm3 = age - 50
  - uplus _Xm`j' _Xm`j'p
  = uplus _Xm3 _Xm3p
    ---------------------------------------------------------------------------------------------------------- begin mkspline.uplus ---
    - version 7
    - args u uplus
    - qui gen `uplus' = `u'
    = qui gen _Xm3p = _Xm3
    - quietly replace `uplus' = 0 if `u' <= 0
    = quietly replace _Xm3p = 0 if _Xm3 <= 0
    ------------------------------------------------------------------------------------------------------------ end mkspline.uplus ---
  - local j = `j'+1
  = local j = 3+1
  - }
  - while `j' <= `nk' {
  = while 4 <= 4 {
  - qui gen _Xm`j' = `varlist' - `t`j''
  = qui gen _Xm4 = age - 80
  - uplus _Xm`j' _Xm`j'p
  = uplus _Xm4 _Xm4p
    ---------------------------------------------------------------------------------------------------------- begin mkspline.uplus ---
    - version 7
    - args u uplus
    - qui gen `uplus' = `u'
    = qui gen _Xm4p = _Xm4
    - quietly replace `uplus' = 0 if `u' <= 0
    = quietly replace _Xm4p = 0 if _Xm4 <= 0
    ------------------------------------------------------------------------------------------------------------ end mkspline.uplus ---
  - local j = `j'+1
  = local j = 4+1
  - }
  - while `j' <= `nk' {
  = while 5 <= 4 {
    qui gen _Xm`j' = `varlist' - `t`j''
    uplus _Xm`j' _Xm`j'p
    local j = `j'+1
    }
  - local j = 1
  - while `j' <= `nk' -2 {
  = while 1 <= 4 -2 {
  - local jp1 = `j' + 1
  = local jp1 = 1 + 1
  - qui gen `name'`jp1' = (_Xm`j'p^3 - (_Xm`km1'p^3)* (`t`nk'' - `t`j'')/(`t`nk'' - `t`km1'') + (_Xm`nk'p^3 )*(`t`km1'' - `t`j'')/ (`t`
> nk'' - `t`km1'')) / (`t`nk'' - `t1')^2 if `touse'
  = qui gen age2 = (_Xm1p^3 - (_Xm3p^3)* (80 - 3.450000000000003)/(80 - 50) + (_Xm4p^3 )*(50 - 3.450000000000003)/ (80 - 50)) / (80 - 3
> .450000000000003)^2 if __000001
  - local j = `j' + 1
  = local j = 1 + 1
  - }
  - while `j' <= `nk' -2 {
  = while 2 <= 4 -2 {
  - local jp1 = `j' + 1
  = local jp1 = 2 + 1
  - qui gen `name'`jp1' = (_Xm`j'p^3 - (_Xm`km1'p^3)* (`t`nk'' - `t`j'')/(`t`nk'' - `t`km1'') + (_Xm`nk'p^3 )*(`t`km1'' - `t`j'')/ (`t`
> nk'' - `t`km1'')) / (`t`nk'' - `t1')^2 if `touse'
  = qui gen age3 = (_Xm2p^3 - (_Xm3p^3)* (80 - 27)/(80 - 50) + (_Xm4p^3 )*(50 - 27)/ (80 - 50)) / (80 - 3.450000000000003)^2 if __00000
> 1
  - local j = `j' + 1
  = local j = 2 + 1
  - }
  - while `j' <= `nk' -2 {
  = while 3 <= 4 -2 {
    local jp1 = `j' + 1
    qui gen `name'`jp1' = (_Xm`j'p^3 - (_Xm`km1'p^3)* (`t`nk'' - `t`j'')/(`t`nk'' - `t`km1'') + (_Xm`nk'p^3 )*(`t`km1'' - `t`j'')/ (`t`
> nk'' - `t`km1'')) / (`t`nk'' - `t1')^2 if `touse'
    local j = `j' + 1
    }
  - drop _Xm* _Xm*p
  - if "`displayknots'"!="" {
  = if ""!="" {
    matlist loc
    }
  - return scalar N_knots = `nk'
  = return scalar N_knots = 4
  - return matrix knots loc
  - exit
  -------------------------------------------------------------------------------------------------------------------- end mkspline ---
- order age1 age2 age3, after(age)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"age"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"age"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"age"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"age"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"age"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"age"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age male 
> bmi_child_date_measured_date bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_p
> ct bp_sys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke
> _date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date live
> r_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date aut
> oimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp
> _date egfr agegroup age1 age2 age3
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e male bmi_child_date_measured_date bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date 
> hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date
>  stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_da
> te liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_d
> ate autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_
> date cp_date egfr agegroup age1 age2 age3
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 65>=1 & 65<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "age" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e male bmi_child_date_measured_date bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date 
> hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date
>  stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_da
> te liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_d
> ate autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_
> date cp_date egfr agegroup
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 11 of patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr a
> ge male bmi_child_date_measured_date bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date
>  hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_dat
> e stroke_date dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_d
> ate liver_date transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_
> date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds
> _date cp_date egfr agegroup
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-age
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 11>=1 & 11<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"age"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"age"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- recode age min/15.999999=1 16/max=0, gen(child)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"age min/15.999999=1 16/max=0"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : age, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist age
    - local n : word count `varlist'
    = local n : word count age
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var age
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" min/15.999999=1 16/max=0"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"child"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"child"' != "" {
  - confirm new var `generate'
  = confirm new var child
  - local nnew : word count `generate'
  = local nnew : word count child
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "child" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir child
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir child
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label child
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" min/15.999999=1 16/max=0"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"min"', "", "*", "else") & `"min"' != bsubstr("missing", 1, max(3,length(`"min"'))) & `"min"' != bsubstr("nonmissing
> ", 1, max(4,length(`"min"'))) {
  - if `"`1'"' == "=" {
  = if `"min"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"min"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number min
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"min"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"min"')==2 & `"min"' >= ".a" & `"min"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"min"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(min)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow r(min)
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"15.999999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 15.999999
    - if !_rc {
    - return local s1 `v'
    = return local s1 15.999999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 15.999999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(r(min)) & float(`vn') <= float(15.999999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= r(min) & `vn' <= 15.999999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"16"', "", "*", "else") & `"16"' != bsubstr("missing", 1, max(3,length(`"16"'))) & `"16"' != bsubstr("nonmissing", 1
> , max(4,length(`"16"'))) {
  - if `"`1'"' == "=" {
  = if `"16"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"16"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 16
    - if !_rc {
    - return local s1 `v'
    = return local s1 16
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 16
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(16) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 16 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = age if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type age
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("byte", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ age if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "93" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(age) >= float(r(min)) & float(age) <= float(15.999999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(r(min)) & float(age) <= float(15.999999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(age) >= float(16) & float(age) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(age) >= float(16) & float(age) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(age) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "child" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"child"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of child
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(795 differences between age and child)"
(795 differences between age and child)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "child" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of child
  - gen `g' = `NEW`iv''
  = gen child = __000003
  - recast `vntype`iv'' `g'
  = recast byte child
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize child
    - local stop : word count `varlist'
    = local stop : word count child
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen byte __000005 = child
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if child~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label child
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format child
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label child
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename child __000005
    - move `RECAST' ``i''
    = move __000005 child
    - drop ``i''
    = drop child
    - rename `RECAST' ``i''
    = rename __000005 child
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label age
  - if `"`vlab'"' != "" {
  = if `"Age (years)"' != "" {
  - local vlab `" (`vlab')"'
  = local vlab `" (Age (years))"'
  - }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var child `"RECODE of age (Age (years))"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var child `"RECODE of age (Age (years))"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- replace bmi = . if age<16 & (`index' - bmi_child_date_measured_date) > 365.25*2
= replace bmi = . if age<16 & (22159 - bmi_child_date_measured_date) > 365.25*2
(127 real changes made, 127 to missing)
- drop bmi_child_date_measured_date
- recode bmi min/39.99999=0 40/max=1, gen(obese40)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"bmi min/39.99999=0 40/max=1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : bmi, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist bmi
    - local n : word count `varlist'
    = local n : word count bmi
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var bmi
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" min/39.99999=0 40/max=1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"obese40"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"obese40"' != "" {
  - confirm new var `generate'
  = confirm new var obese40
  - local nnew : word count `generate'
  = local nnew : word count obese40
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "obese40" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir obese40
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir obese40
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label obese40
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" min/39.99999=0 40/max=1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"min"', "", "*", "else") & `"min"' != bsubstr("missing", 1, max(3,length(`"min"'))) & `"min"' != bsubstr("nonmissing
> ", 1, max(4,length(`"min"'))) {
  - if `"`1'"' == "=" {
  = if `"min"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"min"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number min
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"min"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"min"')==2 & `"min"' >= ".a" & `"min"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"min"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(min)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow r(min)
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"39.99999"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 39.99999
    - if !_rc {
    - return local s1 `v'
    = return local s1 39.99999
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 39.99999
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs1 "float(`vn') >= float(r(min)) & float(`vn') <= float(39.99999)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs1 "`vn' >= r(min) & `vn' <= 39.99999"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"40"', "", "*", "else") & `"40"' != bsubstr("missing", 1, max(3,length(`"40"'))) & `"40"' != bsubstr("nonmissing", 1
> , max(4,length(`"40"'))) {
  - if `"`1'"' == "=" {
  = if `"40"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"40"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 40
    - if !_rc {
    - return local s1 `v'
    = return local s1 40
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 40
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"max"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number max
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"max"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"max"')==2 & `"max"' >= ".a" & `"max"' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"max"', "max", "min") {
    - return local s1 "r(`v')"
    = return local s1 "r(max)"
    - scalar `statcode' = max(`statcode',1)
    = scalar __000001 = max(__000001,1)
    - }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh r(max)
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(40) & float(`vn') <= float(r(max))"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 40 & `vn' <= r(max)"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 2
  - local nrhs = `j'- 1
  = local nrhs = 3- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = bmi if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type bmi
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
  - summ `vn' if `touse', meanonly
  = summ bmi if __000000, meanonly
  - if "`r(max)'" == "" {
  = if "49.96608734130859" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
  - }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 2 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(bmi) >= float(r(min)) & float(bmi) <= float(39.99999)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(bmi) >= float(r(min)) & float(bmi) <= float(39.99999)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(bmi) >= float(40) & float(bmi) <= float(r(max))
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(bmi) >= float(40) & float(bmi) <= float(r(max))
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(bmi) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "obese40" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"obese40"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of obese40
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(559 differences between bmi and obese40)"
(559 differences between bmi and obese40)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "obese40" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of obese40
  - gen `g' = `NEW`iv''
  = gen obese40 = __000003
  - recast `vntype`iv'' `g'
  = recast float obese40
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize obese40
    - local stop : word count `varlist'
    = local stop : word count obese40
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = obese40
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if obese40~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label obese40
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format obese40
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label obese40
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename obese40 __000005
    - move `RECAST' ``i''
    = move __000005 obese40
    - drop ``i''
    = drop obese40
    - rename `RECAST' ``i''
    = rename __000005 obese40
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label bmi
  - if `"`vlab'"' != "" {
  = if `"Body Mass Index (BMI, kg/m2)"' != "" {
  - local vlab `" (`vlab')"'
  = local vlab `" (Body Mass Index (BMI, kg/m2))"'
  - }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var obese40 `"RECODE of bmi (Body Mass Index (BMI, kg/m2))"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var obese40 `"RECODE of bmi (Body Mass Index (BMI, kg/m2))"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- replace obese40 = 0 if bmi>=.
(249 real changes made)
- order obese40, after(bmi)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"bmi"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"bmi"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"bmi"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"bmi"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"bmi"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"bmi"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age age1 
> age2 age3 male bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_s
> ys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia
> _date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date transpl
> ant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date i
> bd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr age
> group child obese40
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e age1 age2 age3 male bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_s
> ys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date d
> ementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date 
> transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune
> _date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date e
> gfr agegroup child obese40
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "bmi" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e age1 age2 age3 male bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_s
> ys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date d
> ementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date 
> transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune
> _date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date e
> gfr agegroup child
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 16 of patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr a
> ge age1 age2 age3 male bmi smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_
> sys bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date 
> dementia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date
>  transplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmun
> e_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date 
> egfr agegroup child
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-bmi
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age age1 
> age2 age3 male bmi
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr ag
> e age1 age2 age3 male bmi
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 16>=1 & 16<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 imd_order rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3
>  male bmi obese40
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"bmi"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- assert imd_order!=-1
- egen imd = cut(imd_order), group(5) icodes
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"imd"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable imd
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gcut.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gcut.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gcut.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gcut.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gcut.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"imd_order"' == "_all" | `"imd_order"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
    local byopt "by(`_byvars')"
    local cma ","
    }
  - else if `"`options'"' != "" {
  = else if `"group(5) icodes"' != "" {
  - local cma ","
  - }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname imd
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("cut","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gcut float __000001 = (imd_order)   ,  group(5) icodes
    ------------------------------------------------------------------------------------------------------------------- begin _gcut ---
    - version 7, missing
    - syntax newvarname(gen) =/exp [if] [in] [, AT(numlist asc) Group(real 0) ICodes Label BY(string)]
    - if `"`by'"' != "" {
    = if `""' != "" {
      _egennoby cut() `"`by'"'
      }
    - cap qui sum `exp', meanonly
    = cap qui sum (imd_order)   , meanonly
    - if _rc~=0 {
      di as err "cut`exp'invalid, variable name expected"
      exit 198
      }
    - if "`at'"=="" & `group'==0 {
    = if ""=="" & 5==0 {
      di as err "one of at() or group() must be specified"
      exit 198
      }
    - if "`at'"!="" & `group'!=0 {
    = if ""!="" & 5!=0 {
      di as err "cannot specify both at() and group() option"
      exit 198
      }
    - tempvar touse pctile x
    - qui gen `typelist' `x' = `exp'
    = qui gen  __000004 = (imd_order)   
    - if "`at'" != "" {
    = if "" != "" {
      local n : word count `at'
      local top : word `n' of `at'
      qui replace `x' = . if `x' >= `top'
      }
    - marksample touse, novarlist
    - markout `touse' `x'
    = markout __000005 __000004
    - if "`at'"=="" & `group'!=0 & "`icodes'"=="" {
    = if ""=="" & 5!=0 & "icodes"=="" {
      local icodes "icodes"
      }
    - if "`label'"!="" & "`icodes'"=="" {
    = if ""!="" & "icodes"=="" {
      local icodes "icodes"
      }
    - local vlbl "$EGEN_Varname"
    = local vlbl "imd"
    - local vlablen : label `vlbl' maxlength
    = local vlablen : label imd maxlength
    - if `vlablen' != 0 {
    = if 0 != 0 {
      local chop = ustrlen("`vlbl'") - 1
      local ends = "abcdefghijklmnopqrstuvwxyz0123456789" + "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
      forvalues j = 1/62 {
      local vlbl = usubstr("`vlbl'",1,`chop') + bsubstr("`ends'",`j',1)
      local vlablen : label `vlbl' maxlength
      if `vlablen' == 0 {
      continue, break
      }
      }
      }
    - if "`at'"=="" {
    = if ""=="" {
    - qui summ `x', meanonly
    = qui summ __000004, meanonly
    - tempname extra
    - scalar `extra' = r(min)
    = scalar __000006 = r(min)
    - local at "`extra'"
    = local at "__000006"
    - qui pctile `pctile' = `x' if `touse', nq(`group')
    = qui pctile __000003 = __000004 if __000005, nq(5)
      ---------------------------------------------------------------------------------------------------------------- begin pctile ---
      - version 8 , born(01jul2003) missing
      - version 6.0, missing
      - _parsewt "aweight fweight pweight" `0'
      = _parsewt "aweight fweight pweight" __000003 = __000004 if __000005, nq(5)
        ------------------------------------------------------------------------------------------------------------ begin _parsewt ---
        - version 6.0, missing
        - sret clear
        - gettoken wtypes 0 : 0
        - sret local newcmd `"`0'"'
        = sret local newcmd `" __000003 = __000004 if __000005, nq(5)"'
        - local np 0
        - local inopt 0
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `"__000003 = __000004 if __000005"'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 0==0 & 0==0 & `"__000003 = __000004 if __000005"'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `"__000003 = __000004 if __000005"'=="(" {
          local np = `np' + 1
          }
        - else if `"`first'"'==")" {
        = else if `"__000003 = __000004 if __000005"'==")" {
          local np = `np' - 1
          local space `" "'
          }
        - else if `"`first'"'=="," {
        = else if `"__000003 = __000004 if __000005"'=="," {
          local inopt = ~`inopt'
          }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005"'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `","'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 0==0 & 0==0 & `","'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `","'=="(" {
          local np = `np' + 1
          }
        - else if `"`first'"'==")" {
        = else if `","'==")" {
          local np = `np' - 1
          local space `" "'
          }
        - else if `"`first'"'=="," {
        = else if `","'=="," {
        - local inopt = ~`inopt'
        = local inopt = ~0
        - }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005,"'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `"nq"'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 0==0 & 1==0 & `"nq"'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `"nq"'=="(" {
          local np = `np' + 1
          }
        - else if `"`first'"'==")" {
        = else if `"nq"'==")" {
          local np = `np' - 1
          local space `" "'
          }
        - else if `"`first'"'=="," {
        = else if `"nq"'=="," {
          local inopt = ~`inopt'
          }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005,nq"'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `"("'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 0==0 & 1==0 & `"("'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `"("'=="(" {
        - local np = `np' + 1
        = local np = 0 + 1
        - }
        - else if `"`first'"'==")" {
        = else if `"("'==")" {
          local np = `np' - 1
          local space `" "'
          }
        - else if `"`first'"'=="," {
        = else if `"("'=="," {
          local inopt = ~`inopt'
          }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005,nq("'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `"5"'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 1==0 & 1==0 & `"5"'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `"5"'=="(" {
          local np = `np' + 1
          }
        - else if `"`first'"'==")" {
        = else if `"5"'==")" {
          local np = `np' - 1
          local space `" "'
          }
        - else if `"`first'"'=="," {
        = else if `"5"'=="," {
          local inopt = ~`inopt'
          }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005,nq(5"'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `")"'=="" {
          exit
          }
        - if `np'==0 & `inopt'==0 & `"`first'"'=="[" {
        = if 1==0 & 1==0 & `")"'=="[" {
          Parse "`wtypes'" `0'
          if "`s(done)'"=="1" {
          sret local done
          sret local newcmd `"`lhs'`s(rest)'"'
          sret local rest
          exit
          }
          local np = `np' + 1
          local lhs `"`lhs'`first'"'
          }
        - else {
        - if `"`first'"'=="(" {
        = if `")"'=="(" {
          local np = `np' + 1
          }
        - else if `"`first'"'==")" {
        = else if `")"'==")" {
        - local np = `np' - 1
        = local np = 1 - 1
        - local space `" "'
        - }
        - else if `"`first'"'=="," {
        = else if `")"'=="," {
          local inopt = ~`inopt'
          }
        - local lhs `"`lhs'`space'`first'"'
        = local lhs `"__000003 = __000004 if __000005,nq(5 )"'
        - }
        - }
        - while 1 {
        - gettoken first 0 : 0, parse(`""[](),"') quotes
        - if `"`first'"'=="" {
        = if `""'=="" {
        - exit
        -------------------------------------------------------------------------------------------------------------- end _parsewt ---
      - local wt "`s(weight)'"
      = local wt ""
      - local 0 `"`s(newcmd)'"'
      = local 0 `" __000003 = __000004 if __000005, nq(5)"'
      - tempvar touse q
      - nobreak {
      - syntax newvarname(gen) =/exp [if] [in] [, Nquantiles(integer 2) ALTdef Genp(string) ]
      - rename `varlist' `q'
      = rename __000003 __000009
      - }
      - if `"`wt'"'!="" & "`altdef'"!="" {
      = if `""'!="" & ""!="" {
        di in red "altdef option cannot be used with weights"
        exit 198
        }
      - if `nquanti' < 2 {
      = if 5 < 2 {
        di in red "nquantiles() must be greater than or equal to 2"
        exit 198
        }
      - if `nquanti' > _N + 1 {
      = if 5 > _N + 1 {
        di in red "nquantiles() must be less than or equal to " "number of observations plus one"
        exit 198
        }
      - if "`genp'"!="" {
      = if ""!="" {
        confirm new variable `genp'
        local nvar : word count `genp'
        if `nvar' > 1 {
        di in red "only one variable allowed in genp()"
        exit 198
        }
        }
      - capture confirm variable `exp'
      = capture confirm variable __000004 
      - if _rc {
        tempvar x
        qui gen double `x' = `exp'
        }
      - else local x `"`exp'"'
      = else local x `"__000004 "'
      - mark `touse' `wt' `if' `in'
      = mark __000008  if __000005 
      - markout `touse' `x'
      = markout __000008 __000004 
      - qui count if `touse'
      = qui count if __000008
      - if r(N) == 0 { error 2000 }
      - local last = `nquanti' - 1
      = local last = 5 - 1
      - if `nquanti' <= 1001 {
      = if 5 <= 1001 {
      - _pctile `x' `wt' if `touse', n(`nquanti') `altdef'
      = _pctile __000004   if __000008, n(5) 
      - local k 1
      - while `k' <= `last' {
      = while 1 <= 4 {
      - qui replace `q' = r(r`k') in `k'
      = qui replace __000009 = r(r1) in 1
      - local k = `k' + 1
      = local k = 1 + 1
      - }
      - while `k' <= `last' {
      = while 2 <= 4 {
      - qui replace `q' = r(r`k') in `k'
      = qui replace __000009 = r(r2) in 2
      - local k = `k' + 1
      = local k = 2 + 1
      - }
      - while `k' <= `last' {
      = while 3 <= 4 {
      - qui replace `q' = r(r`k') in `k'
      = qui replace __000009 = r(r3) in 3
      - local k = `k' + 1
      = local k = 3 + 1
      - }
      - while `k' <= `last' {
      = while 4 <= 4 {
      - qui replace `q' = r(r`k') in `k'
      = qui replace __000009 = r(r4) in 4
      - local k = `k' + 1
      = local k = 4 + 1
      - }
      - while `k' <= `last' {
      = while 5 <= 4 {
        qui replace `q' = r(r`k') in `k'
        local k = `k' + 1
        }
      - }
      - else {
        tempvar k
        qui gen `c(obs_t)' `k' = _n in 1/`last'
        local iold 1
        local j 1
        local i 1
        while `i' <= `last' {
        local pct = 100*`i'/`nquanti'
        if "`plist'"=="" { local plist "`pct'" }
        else local plist "`plist',`pct'"
        if `j' == 1000 | `i' == `last' {
        _pctile `x' `wt' if `touse', p(`plist') `altdef'
        local k1 1
        local k2 `iold'
        while `k2' <= `i' {
        qui replace `q' = r(r`k1') if `k'==`k2'
        local k1 = `k1' + 1
        local k2 = `k2' + 1
        }
        local plist
        local iold = `i' + 1
        local j 1
        }
        local j = `j' + 1
        local i = `i' + 1
        }
        }
      - label var `q' "percentiles of `exp'"
      = label var __000009 "percentiles of __000004 "
        --------------------------------------------------------------------------------------------------------------- begin label ---
        - version 10.0
        - local vv : display "version " string(_caller()) ", missing:"
        - gettoken val : 0
        - if (strpos("`val'", "val") > 0 ) {
        = if (strpos("var", "val") > 0 ) {
          gettoken val 0 : 0
          syntax anything [, nofix]
          if "`fix'" != "" {
          local fix ", nofix"
          }
          gettoken var rest : anything
          while `"`rest'"' != "" {
          gettoken lab rest : rest
          local label "`lab'"
          }
          local vlist : list anything - lab
          if "`lab'" == "." {
          local lab ""
          }
          foreach var of varlist `vlist' {
          `vv' _label `val' `var' `lab' `fix'
          }
          }
        - else {
        - `vv' _label `macval(0)'
        = version 6, missing: _label var __000009 "percentiles of __000004 "
        - }
        ----------------------------------------------------------------------------------------------------------------- end label ---
      - rename `q' `varlist'
      = rename __000009 __000003
      - if "`genp'"!="" {
      = if ""!="" {
        qui gen float `genp' = 100*_n/`nquanti' in 1/`last'
        label var `genp' "percentages for `q'"
        }
      ------------------------------------------------------------------------------------------------------------------ end pctile ---
    - local grm1 = `group' - 1
    = local grm1 = 5 - 1
    - forvalues count = 1/`grm1' {
    = forvalues count = 1/4 {
    - forvalues count = 1/`grm1' {
    - tempname extra
    - scalar `extra' = `pctile'[`count']
    = scalar __000007 = __000003[1]
    - local at "`at' `extra'"
    = local at "__000006 __000007"
    - }
    - tempname extra
    - scalar `extra' = `pctile'[`count']
    = scalar __000008 = __000003[2]
    - local at "`at' `extra'"
    = local at "__000006 __000007 __000008"
    - }
    - tempname extra
    - scalar `extra' = `pctile'[`count']
    = scalar __000009 = __000003[3]
    - local at "`at' `extra'"
    = local at "__000006 __000007 __000008 __000009"
    - }
    - tempname extra
    - scalar `extra' = `pctile'[`count']
    = scalar __00000A = __000003[4]
    - local at "`at' `extra'"
    = local at "__000006 __000007 __000008 __000009 __00000A"
    - }
    - qui summ `x' if `touse', meanonly
    = qui summ __000004 if __000005, meanonly
    - tempname extra
    - scalar `extra' = r(max)+1
    = scalar __00000B = r(max)+1
    - local at "`at' `extra'"
    = local at "__000006 __000007 __000008 __000009 __00000A __00000B"
    - }
    - local i=0
    - foreach cutp of local at {
    - foreach cutp of local at {
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 0 if __000004 >= __000006 & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 0>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=0+1
    - }
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 1 if __000004 >= __000007 & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 1>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=1+1
    - }
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 2 if __000004 >= __000008 & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 2>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=2+1
    - }
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 3 if __000004 >= __000009 & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 3>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=3+1
    - }
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 4 if __000004 >= __00000A & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 4>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=4+1
    - }
    - if "`icodes'"=="" {
    = if "icodes"=="" {
      qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
      }
    - else {
    - qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 5 if __000004 >= __00000B & __000005
    - }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 5>=0 & ""!="" & "icodes" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=5+1
    - }
    - if "`label'"!="" {
    = if ""!="" {
      label values `varlist' `vlbl'
      }
    --------------------------------------------------------------------------------------------------------------------- end _gcut ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
    local s = cond(r(N)>1,"s","")
    local N : di %11.0fc r(N)
    local N `N'
    di in bl "(`N' missing value`s' generated)"
    }
  - }
  - rename `dummy' `name'
  = rename __000001 imd
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- replace imd = imd + 1
(808 real changes made)
- replace imd = .u if imd_order>=.
(0 real changes made)
- drop imd_order
- recode imd 5=1 4=2 3=3 2=4 1=5 .u=.u
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"imd 5=1 4=2 3=3 2=4 1=5 .u=.u"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : imd, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist imd
    - local n : word count `varlist'
    = local n : word count imd
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var imd
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 5=1 4=2 3=3 2=4 1=5 .u=.u"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 5=1 4=2 3=3 2=4 1=5 .u=.u"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"5"', "", "*", "else") & `"5"' != bsubstr("missing", 1, max(3,length(`"5"'))) & `"5"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"5"'))) {
  - if `"`1'"' == "=" {
  = if `"5"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(5)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==5"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"4"', "", "*", "else") & `"4"' != bsubstr("missing", 1, max(3,length(`"4"'))) & `"4"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"4"'))) {
  - if `"`1'"' == "=" {
  = if `"4"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(4)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==4"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"3"', "", "*", "else") & `"3"' != bsubstr("missing", 1, max(3,length(`"3"'))) & `"3"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"3"'))) {
  - if `"`1'"' == "=" {
  = if `"3"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs3 "float(`vn')==float(3)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs3 "`vn'==3"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"2"', "", "*", "else") & `"2"' != bsubstr("missing", 1, max(3,length(`"2"'))) & `"2"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"2"'))) {
  - if `"`1'"' == "=" {
  = if `"2"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs4 4
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs4 "float(`vn')==float(2)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs4 "`vn'==2"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs4 4
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs5 5
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs5 "float(`vn')==float(1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs5 "`vn'==1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs5 5
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`".u"', "", "*", "else") & `".u"' != bsubstr("missing", 1, max(3,length(`".u"'))) & `".u"' != bsubstr("nonmissing", 1
> , max(4,length(`".u"'))) {
  - if `"`1'"' == "=" {
  = if `".u"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs6 6
  - GetEl `"`1'"' `statcode'
  = GetEl `".u"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number .u
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `".u"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`".u"')==2 & `".u"' >= ".a" & `".u"' <= ".z"{
    - return local s1 `v'
    = return local s1 .u
    - }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`".u"', "max", "min") {
      return local s1 "r(`v')"
      scalar `statcode' = max(`statcode',1)
      }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs6 "float(`vn')==float(.u)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs6 "`vn'==.u"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `".u"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number .u
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `".u"' == "." {
      return local s1 "."
      }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`".u"')==2 & `".u"' >= ".a" & `".u"' <= ".z"{
    - return local s1 `v'
    = return local s1 .u
    - }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`".u"', "max", "min") {
      return local s1 "r(`v')"
      scalar `statcode' = max(`statcode',1)
      }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs6 .u
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 6
  - local nrhs = `j'- 1
  = local nrhs = 7- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = imd if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type imd
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 6 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(imd)==float(5)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(5)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(imd)==float(4)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(4)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(imd)==float(3)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(3)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 4 if __000002==1 & float(imd)==float(2)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(2)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 5 if __000002==1 & float(imd)==float(1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(1)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = .u if __000002==1 & float(imd)==float(.u)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(imd)==float(.u)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(imd) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = imd if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(imd: 808 changes made)"
(imd: 808 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace imd = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label define imd 1 "1 least deprived" 2 "2" 3 "3" 4 "4" 5 "5 most deprived" .u "Unknown"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define imd 1 "1 least deprived" 2 "2" 3 "3" 4 "4" 5 "5 most deprived" .u "Unknown"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values imd imd
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" imd"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "imd"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "imd" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist imd {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values imd imd 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- egen spleen_date = rowmin(dysplenia_date sickle_cell_date)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"spleen_date"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable spleen_date
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _growmin.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_growmin.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_growmin.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_growmin.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_growmin.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"dysplenia_date sickle_cell_date"' == "_all" | `"dysplenia_date sickle_cell_date"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
    local byopt "by(`_byvars')"
    local cma ","
    }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname spleen_date
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("rowmin","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _growmin float __000001 = (dysplenia_date sickle_cell_date)     
    ---------------------------------------------------------------------------------------------------------------- begin _growmin ---
    - version 6, missing
    - gettoken type 0 : 0
    - gettoken g 0 : 0
    - gettoken eqs 0 : 0
    - syntax varlist [if] [in] [, BY(string)]
    - if `"`by'"' != "" {
    = if `""' != "" {
      _egennoby rowmin() `"`by'"'
      }
    - tempvar touse
    - mark `touse' `if' `in'
    = mark __000002  
    - quietly {
    - gen `type' `g' = . if `touse'
    = gen float __000001 = . if __000002
    - tokenize `varlist'
    = tokenize dysplenia_date sickle_cell_date
    - while "`1'"!="" {
    = while "dysplenia_date"!="" {
    - replace `g' = cond(`1' < `g',`1',`g') if `touse'
    = replace __000001 = cond(dysplenia_date < __000001,dysplenia_date,__000001) if __000002
    - mac shift
    - }
    - while "`1'"!="" {
    = while "sickle_cell_date"!="" {
    - replace `g' = cond(`1' < `g',`1',`g') if `touse'
    = replace __000001 = cond(sickle_cell_date < __000001,sickle_cell_date,__000001) if __000002
    - mac shift
    - }
    - while "`1'"!="" {
    = while ""!="" {
      replace `g' = cond(`1' < `g',`1',`g') if `touse'
      mac shift
      }
    - }
    ------------------------------------------------------------------------------------------------------------------ end _growmin ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
  - local s = cond(r(N)>1,"s","")
  - local N : di %11.0fc r(N)
  - local N `N'
  = local N         522
  - di in bl "(`N' missing value`s' generated)"
  = di in bl "(522 missing values generated)"
(522 missing values generated)
  - }
  - }
  - rename `dummy' `name'
  = rename __000001 spleen_date
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- format spleen_date %td
- order spleen_date spleen, after(sickle_cell)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"sickle_cell_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"sickle_cell_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"sickle_cell_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"sickle_cell_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"sickle_cell_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"sickle_cell_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date transplan
> t_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd
> _date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegr
> oup child imd spleen_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date tr
> ansplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_d
> ate ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egf
> r agegroup child imd spleen_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 67>=1 & 67<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "sickle_cell_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date tr
> ansplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_d
> ate ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egf
> r agegroup child imd
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 47 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sy
> s bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date de
> mentia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date t
> ransplant_notkidney_date dysplenia_date sickle_cell_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_
> date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date eg
> fr agegroup child imd
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-sickle_cell_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date transplan
> t_notkidney_date dysplenia_date sickle_cell_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date tr
> ansplant_notkidney_date dysplenia_date sickle_cell_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 47>=1 & 47<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_date_mea
> sured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro
> _date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date transplant_notkidn
> ey_date dysplenia_date sickle_cell_date spleen_date spleen_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"sickle_cell_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop dysplenia_date sickle_cell_date
- gen exhaem_cancer_date = min(lung_cancer_date, other_cancer_date)
(534 missing values generated)
- format exhaem_cancer_date %td
- order exhaem_cancer_date, after(other_cancer_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"other_cancer_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"other_cancer_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"other_cancer_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"other_cancer_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"other_cancer_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"other_cancer_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date transplan
> t_notkidney_date spleen_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_date fract
> ure_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd exhaem
> _cancer_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date tr
> ansplant_notkidney_date spleen_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dat
> e fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd
>  exhaem_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 66>=1 & 66<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "other_cancer_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date tr
> ansplant_notkidney_date spleen_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_dat
> e fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 41 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sy
> s bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date de
> mentia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date transplant_kidney_date dialysis_date liver_date t
> ransplant_notkidney_date spleen_date hiv_date perm_immuno_date temp_immuno_date aplastic_anaemia_date autoimmune_date ibd_date smi_da
> te fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child im
> d
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-other_cancer_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date lung_cancer_date haem_cancer_date other_cancer_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 41>=1 & 41<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_date_mea
> sured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro
> _date tia_date lung_cancer_date haem_cancer_date other_cancer_date exhaem_cancer_date
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"other_cancer_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop lung_cancer_date other_cancer_date
- rename haem_cancer_date cancerHaem_date
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- rename exhaem_cancer_date cancerExhaem_date
  -------------------------------------------------------------------------------------------------------------------- begin rename ---
  - version 12
  - mata: rename_cmd("`3'")
  = mata: rename_cmd("")
  ---------------------------------------------------------------------------------------------------------------------- end rename ---
- gen cancerExhaem1yr = inrange(cancerExhaem_date, `index'- 365.25, `index')
= gen cancerExhaem1yr = inrange(cancerExhaem_date, 22159- 365.25, 22159)
- drop cancerExhaem_date
- gen cancerHaem = 4 if inrange(cancerHaem_date, d(1/1/1900), `index' - 5*365.25)
= gen cancerHaem = 4 if inrange(cancerHaem_date, d(1/1/1900), 22159 - 5*365.25)
(664 missing values generated)
- replace cancerHaem = 3 if inrange(cancerHaem_date, `index' - 5*365.25, `index' - 365.25)
= replace cancerHaem = 3 if inrange(cancerHaem_date, 22159 - 5*365.25, 22159 - 365.25)
(10 real changes made)
- replace cancerHaem = 2 if inrange(cancerHaem_date, `index' - 365.25, `index')
= replace cancerHaem = 2 if inrange(cancerHaem_date, 22159 - 365.25, 22159)
(2 real changes made)
- recode cancerHaem . = 1
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"cancerHaem . = 1"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : cancerHaem, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist cancerHaem
    - local n : word count `varlist'
    = local n : word count cancerHaem
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var cancerHaem
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" . = 1"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" . = 1"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"."', "", "*", "else") & `"."' != bsubstr("missing", 1, max(3,length(`"."'))) & `"."' != bsubstr("nonmissing", 1, ma
> x(4,length(`"."'))) {
  - if `"`1'"' == "=" {
  = if `"."' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"."' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number .
    - if !_rc {
      return local s1 `v'
      exit
      }
    - else if `"`v'"' == "." {
    = else if `"."' == "." {
    - return local s1 "."
    - }
    - else if length(`"`v'"')==2 & `"`v'"' >= ".a" & `"`v'"' <= ".z"{
    = else if length(`"."')==2 & `"."' >= ".a" & `"."' <= ".z"{
      return local s1 `v'
      }
    - else if inlist(`"`v'"', "max", "min") {
    = else if inlist(`"."', "max", "min") {
      return local s1 "r(`v')"
      scalar `statcode' = max(`statcode',1)
      }
    - else {
      di as err `"unknown el `v' in rule"'
      exit 198
      }
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(.)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==."
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 1
  - local nrhs = `j'- 1
  = local nrhs = 2- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = cancerHaem if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type cancerHaem
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 1 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(cancerHaem)==float(.)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(cancerHaem)==float(.)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(cancerHaem) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = cancerHaem if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(cancerHaem: 652 changes made)"
(cancerHaem: 652 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace cancerHaem = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- capture label drop cancer
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("drop", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label drop cancer
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label define cancer 1 "Never" 2 "Last year" 3 "2-5 years ago" 4 "5+ years"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define cancer 1 "Never" 2 "Last year" 3 "2-5 years ago" 4 "5+ years"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values cancerHaem cancer
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" cancer"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "cancer"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "cancer" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist cancerHaem {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values cancerHaem cancer 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- gen immunosuppression = (inrange(temp_immuno_date, `index' - 365.25, `index') | inrange(aplastic_anaemia_date, `index' - 365.25, `ind
> ex') | (perm_immuno_date < `index') | (hiv_date < `index'))
= gen immunosuppression = (inrange(temp_immuno_date, 22159 - 365.25, 22159) | inrange(aplastic_anaemia_date, 22159 - 365.25, 22159) | (
> perm_immuno_date < 22159) | (hiv_date < 22159))
- drop temp_immuno_date aplastic_anaemia_date perm_immuno_date hiv_date
- gen dialysis = (dialysis_date <.)
- gen transplant_kidney = (transplant_kidney_date <.)
- replace dialysis = 0 if dialysis == 1 & transplant_kidney == 1 & transplant_kidney_date > dialysis_date
(19 real changes made)
- order dialysis, after(transplant_kidney_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_kidney_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_kidney_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_kidney_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_kidney_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_kidney_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_kidney_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date cancerHaem_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date spleen_date autoimm
> une_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_dat
> e egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression dialysis transplant_kidney
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date cancerHaem_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date spleen_date 
> autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date
>  cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression dialysis transplant_kidney
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 64>=1 & 64<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_kidney_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date cancerHaem_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date spleen_date 
> autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date
>  cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 40 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sy
> s bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date de
> mentia_date neuro_date tia_date cancerHaem_date transplant_kidney_date dialysis_date liver_date transplant_notkidney_date spleen_date
>  autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_dat
> e cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-transplant_kidney_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date cancerHaem_date transplant_kidney_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date cancerHaem_date transplant_kidney_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 40>=1 & 40<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_date_mea
> sured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro
> _date tia_date cancerHaem_date transplant_kidney_date dialysis
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_kidney_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop dialysis_date
- egen transplant_date = rowmin(transplant_kidney_date transplant_notkidney_date)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"transplant_date"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable transplant_date
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _growmin.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_growmin.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_growmin.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_growmin.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_growmin.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_growmin.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"transplant_kidney_date transplant_notkidney_date"' == "_all" | `"transplant_kidney_date transplant_notkidney_date"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
    local byopt "by(`_byvars')"
    local cma ","
    }
  - else if `"`options'"' != "" {
  = else if `""' != "" {
    local cma ","
    }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname transplant_date
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("rowmin","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _growmin float __000001 = (transplant_kidney_date transplant_notkidney_date)     
    ---------------------------------------------------------------------------------------------------------------- begin _growmin ---
    - version 6, missing
    - gettoken type 0 : 0
    - gettoken g 0 : 0
    - gettoken eqs 0 : 0
    - syntax varlist [if] [in] [, BY(string)]
    - if `"`by'"' != "" {
    = if `""' != "" {
      _egennoby rowmin() `"`by'"'
      }
    - tempvar touse
    - mark `touse' `if' `in'
    = mark __000002  
    - quietly {
    - gen `type' `g' = . if `touse'
    = gen float __000001 = . if __000002
    - tokenize `varlist'
    = tokenize transplant_kidney_date transplant_notkidney_date
    - while "`1'"!="" {
    = while "transplant_kidney_date"!="" {
    - replace `g' = cond(`1' < `g',`1',`g') if `touse'
    = replace __000001 = cond(transplant_kidney_date < __000001,transplant_kidney_date,__000001) if __000002
    - mac shift
    - }
    - while "`1'"!="" {
    = while "transplant_notkidney_date"!="" {
    - replace `g' = cond(`1' < `g',`1',`g') if `touse'
    = replace __000001 = cond(transplant_notkidney_date < __000001,transplant_notkidney_date,__000001) if __000002
    - mac shift
    - }
    - while "`1'"!="" {
    = while ""!="" {
      replace `g' = cond(`1' < `g',`1',`g') if `touse'
      mac shift
      }
    - }
    ------------------------------------------------------------------------------------------------------------------ end _growmin ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
  - local s = cond(r(N)>1,"s","")
  - local N : di %11.0fc r(N)
  - local N `N'
  = local N         518
  - di in bl "(`N' missing value`s' generated)"
  = di in bl "(518 missing values generated)"
(518 missing values generated)
  - }
  - }
  - rename `dummy' `name'
  = rename __000001 transplant_date
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- drop transplant_kidney_date transplant_notkidney_date
- format transplant_date %td
- foreach var of varlist respiratory_date cf_date cardiac_date diabetes_date af_date dvt_pe_date tia_date stroke_date dementia_date neu
> ro_date liver_date transplant_date spleen_date autoimmune_date ibd_date smi_date ldr_date ld_profound_date ds_date cp_date {
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("respiratory_date", 1, length("respiratory_date") - 5)
- gen `newvar' = (`var'< `index')
= gen respiratory = (respiratory_date< 22159)
- order `newvar', after(`var')
= order respiratory, after(respiratory_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"respiratory_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"respiratory_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"respiratory_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"respiratory_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"respiratory_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"respiratory_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys
> _date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_d
> ate neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_p
> rofound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem i
> mmunosuppression transplant_kidney transplant_date respiratory
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_da
> te ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cance
> rHaem immunosuppression transplant_kidney transplant_date respiratory
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "respiratory_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys
>  bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dem
> entia_date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_da
> te ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cance
> rHaem immunosuppression transplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 20 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sy
> s bp_sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date de
> mentia_date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_d
> ate ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr canc
> erHaem immunosuppression transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-respiratory_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 20>=1 & 20<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory_date respiratory
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"respiratory_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop respiratory_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("cf_date", 1, length("cf_date") - 5)
- gen `newvar' = (`var'< `index')
= gen cf = (cf_date< 22159)
- order `newvar', after(`var')
= order cf, after(cf_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cf_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cf_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cf_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cf_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cf_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cf_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_date
> _measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date n
> euro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profou
> nd_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immuno
> suppression transplant_kidney transplant_date cf
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_s
> ys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia
> _date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld
> _profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem
>  immunosuppression transplant_kidney transplant_date cf
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cf_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_s
> ys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia
> _date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld
> _profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem
>  immunosuppression transplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 22 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date cardiac_date diabetes_date hba1c_pct bp_sys bp_
> sys_date_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementi
> a_date neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date l
> d_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHae
> m immunosuppression transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-cf_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 22>=1 & 22<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf_date cf
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cf_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop cf_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("cardiac_date", 1, length("cardiac_date") - 5)
- gen `newvar' = (`var'< `index')
= gen cardiac = (cardiac_date< 22159)
- order `newvar', after(`var')
= order cardiac, after(cardiac_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cardiac_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cardiac_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cardiac_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cardiac_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cardiac_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cardiac_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_date_meas
> ured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_
> date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_da
> te coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppr
> ession transplant_kidney transplant_date cardiac
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_da
> te_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date
>  neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_prof
> ound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immu
> nosuppression transplant_kidney transplant_date cardiac
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cardiac_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_da
> te_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date
>  neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_prof
> ound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immu
> nosuppression transplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 23 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date diabetes_date hba1c_pct bp_sys bp_sys_d
> ate_measured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_dat
> e neuro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_pro
> found_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem imm
> unosuppression transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-cardiac_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 23>=1 & 23<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac_date cardiac
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cardiac_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop cardiac_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("diabetes_date", 1, length("diabetes_date") - 5)
- gen `newvar' = (`var'< `index')
= gen diabetes = (diabetes_date< 22159)
- order `newvar', after(`var')
= order diabetes, after(diabetes_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"diabetes_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"diabetes_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"diabetes_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"diabetes_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"diabetes_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"diabetes_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date hba1c_pct bp_sys bp_sys_date_measured 
> bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date 
> tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date co
> viddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppressio
> n transplant_kidney transplant_date diabetes
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date hba1c_pct bp_sys bp_sys_date_me
> asured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neur
> o_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_
> date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosup
> pression transplant_kidney transplant_date diabetes
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "diabetes_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date hba1c_pct bp_sys bp_sys_date_me
> asured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neur
> o_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_
> date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosup
> pression transplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 24 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date hba1c_pct bp_sys bp_sys_date_m
> easured bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neu
> ro_date tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound
> _date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosu
> ppression transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-diabetes_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 24>=1 & 24<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes_date diabetes
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"diabetes_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop diabetes_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("af_date", 1, length("af_date") - 5)
- gen `newvar' = (`var'< `index')
= gen af = (af_date< 22159)
- order `newvar', after(`var')
= order af, after(af_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"af_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"af_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"af_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"af_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"af_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"af_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_d
> ate cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date covidde
> ath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression tra
> nsplant_kidney transplant_date af
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_dat
> e tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date 
> coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppress
> ion transplant_kidney transplant_date af
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "af_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_dat
> e tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date 
> coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppress
> ion transplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 31 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af_date dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_da
> te tia_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date
>  coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppres
> sion transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-af_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 31>=1 & 31<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af_date af
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"af_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop af_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("dvt_pe_date", 1, length("dvt_pe_date") - 5)
- gen `newvar' = (`var'< `index')
= gen dvt_pe = (dvt_pe_date< 22159)
- order `newvar', after(`var')
= order dvt_pe, after(dvt_pe_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dvt_pe_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dvt_pe_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dvt_pe_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dvt_pe_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dvt_pe_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dvt_pe_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date c
> ancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_d
> ate otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transpla
> nt_kidney transplant_date dvt_pe
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date tia
> _date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date covid
> death_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression t
> ransplant_kidney transplant_date dvt_pe
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dvt_pe_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date tia
> _date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date covid
> death_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression t
> ransplant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 32 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe_date pad_surg_date amputate_date stroke_date dementia_date neuro_date ti
> a_date cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date covi
> ddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression 
> transplant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-dvt_pe_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 32>=1 & 32<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe_date dvt_pe
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dvt_pe_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop dvt_pe_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("tia_date", 1, length("tia_date") - 5)
- gen `newvar' = (`var'< `index')
= gen tia = (tia_date< 22159)
- order `newvar', after(`var')
= order tia, after(tia_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"tia_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"tia_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"tia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"tia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"tia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"tia_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date cancer
> Haem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date o
> therdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_ki
> dney transplant_date tia
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date
>  cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath
> _date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transp
> lant_kidney transplant_date tia
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "tia_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date
>  cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath
> _date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transp
> lant_kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 38 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_dat
> e cancerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeat
> h_date otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression trans
> plant_kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-tia_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 38>=1 & 38<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia_date tia
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"tia_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop tia_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("stroke_date", 1, length("stroke_date") - 5)
- gen `newvar' = (`var'< `index')
= gen stroke = (stroke_date< 22159)
- order `newvar', after(`var')
= order stroke, after(stroke_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"stroke_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"stroke_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"stroke_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"stroke_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"stroke_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"stroke_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia cancerHaem_
> date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherd
> eath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney 
> transplant_date stroke
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia canc
> erHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date
>  otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_
> kidney transplant_date stroke
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "stroke_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia canc
> erHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date
>  otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_
> kidney transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 35 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date dementia_date neuro_date tia can
> cerHaem_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_dat
> e otherdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant
> _kidney transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-stroke_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 35>=1 & 35<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke_date stroke
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"stroke_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop stroke_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("dementia_date", 1, length("dementia_date") - 5)
- gen `newvar' = (`var'< `index')
= gen dementia = (dementia_date< 22159)
- order `newvar', after(`var')
= order dementia, after(dementia_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"dementia_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"dementia_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"dementia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"dementia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"dementia_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"dementia_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date neuro_date tia cancerHaem_date 
> dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_
> date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney trans
> plant_date dementia
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date neuro_date tia cancerHae
> m_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date othe
> rdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidne
> y transplant_date dementia
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "dementia_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date neuro_date tia cancerHae
> m_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date othe
> rdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidne
> y transplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 36 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date neuro_date tia cancerHa
> em_date dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date oth
> erdeath_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidn
> ey transplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-dementia_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 36>=1 & 36<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia_date dementia
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"dementia_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop dementia_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("neuro_date", 1, length("neuro_date") - 5)
- gen `newvar' = (`var'< `index')
= gen neuro = (neuro_date< 22159)
- order `newvar', after(`var')
= order neuro, after(neuro_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"neuro_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"neuro_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"neuro_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"neuro_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"neuro_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"neuro_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date tia cancerHaem_date dialy
> sis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date 
> covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
> _date neuro
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date tia cancerHaem_dat
> e dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeat
> h_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney tra
> nsplant_date neuro
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "neuro_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date tia cancerHaem_dat
> e dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeat
> h_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney tra
> nsplant_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 37 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date tia cancerHaem_da
> te dialysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdea
> th_date covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney tr
> ansplant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-neuro_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 37>=1 & 37<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro_date neuro
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"neuro_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop neuro_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("liver_date", 1, length("liver_date") - 5)
- gen `newvar' = (`var'< `index')
= gen liver = (liver_date< 22159)
- order `newvar', after(`var')
= order liver, after(liver_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"liver_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"liver_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"liver_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"liver_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"liver_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"liver_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covid
> admission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_date
>  liver
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_dat
> e covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transpla
> nt_date liver
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "liver_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_dat
> e covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transpla
> nt_date
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 41 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver_date spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_da
> te covidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transpl
> ant_date
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-liver_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 41>=1 & 41<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver_date
>  liver
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"liver_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop liver_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("transplant_date", 1, length("transplant_date") - 5)
- gen `newvar' = (`var'< `index')
= gen transplant = (transplant_date< 22159)
- order `newvar', after(`var')
= order transplant, after(transplant_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"transplant_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"transplant_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"transplant_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"transplant_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"transplant_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"transplant_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmis
> sion_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_date tran
> splant
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date cov
> idadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_da
> te transplant
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "transplant_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date cov
> idadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_da
> te
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 62 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date co
> vidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_d
> ate
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-transplant_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmis
> sion_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date cov
> idadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_da
> te
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 62>=1 & 62<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date
>  ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant_date transplant
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"transplant_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop transplant_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("spleen_date", 1, length("spleen_date") - 5)
- gen `newvar' = (`var'< `index')
= gen spleen = (spleen_date< 22159)
- order `newvar', after(`var')
= order spleen, after(spleen_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"spleen_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"spleen_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"spleen_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"spleen_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"spleen_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"spleen_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmis
> sion_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant spleen
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date cov
> idadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant sp
> leen
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "spleen_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date cov
> idadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 42 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen_date autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date co
> vidadmission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-spleen_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 42>=1 & 42<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en_date spleen
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"spleen_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"spleen_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop spleen_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("autoimmune_date", 1, length("autoimmune_date") - 5)
- gen `newvar' = (`var'< `index')
= gen autoimmune = (autoimmune_date< 22159)
- order `newvar', after(`var')
= order autoimmune, after(autoimmune_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"autoimmune_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"autoimmune_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"autoimmune_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"autoimmune_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"autoimmune_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"autoimmune_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_
> date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant autoimmune
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadm
> ission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant autoimm
> une
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "autoimmune_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadm
> ission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 43 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune_date ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidad
> mission_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-autoimmune_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 43>=1 & 43<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune_date autoimmune
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"autoimmune_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop autoimmune_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("ibd_date", 1, length("ibd_date") - 5)
- gen `newvar' = (`var'< `index')
= gen ibd = (ibd_date< 22159)
- order `newvar', after(`var')
= order ibd, after(ibd_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ibd_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ibd_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ibd_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ibd_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ibd_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ibd_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date 
> ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ibd
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmissio
> n_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ibd
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ibd_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmissio
> n_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 44 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd_date smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmissi
> on_date ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-ibd_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 44>=1 & 44<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd_date ibd
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ibd_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop ibd_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("smi_date", 1, length("smi_date") - 5)
- gen `newvar' = (`var'< `index')
= gen smi = (smi_date< 22159)
- order `newvar', after(`var')
= order smi, after(smi_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"smi_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"smi_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"smi_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"smi_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"smi_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"smi_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_da
> te cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant smi
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_dat
> e ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant smi
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "smi_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_dat
> e ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 45 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd smi_date fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_da
> te ds_date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-smi_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 45>=1 & 45<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd smi_date smi
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"smi_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop smi_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("ldr_date", 1, length("ldr_date") - 5)
- gen `newvar' = (`var'< `index')
= gen ldr = (ldr_date< 22159)
- order `newvar', after(`var')
= order ldr, after(ldr_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ldr_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ldr_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ldr_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ldr_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ldr_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ldr_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp
> _date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ldr
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_
> date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ldr_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_
> date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 47 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd smi fracture_date ldr_date ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds
> _date cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-ldr_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 47>=1 & 47<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd smi fracture_date ldr_date ldr
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ldr_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop ldr_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("ld_profound_date", 1, length("ld_profound_date") - 5)
- gen `newvar' = (`var'< `index')
= gen ld_profound = (ld_profound_date< 22159)
- order `newvar', after(`var')
= order ld_profound, after(ld_profound_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ld_profound_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ld_profound_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ld_profound_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ld_profound_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ld_profound_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ld_profound_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date cp_date
>  egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ld_profound
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date 
> cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ld_profound
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ld_profound_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date 
> cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 48 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound_date coviddeath_date otherdeath_date covidadmission_date ds_date
>  cp_date egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-ld_profound_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 48>=1 & 48<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd smi fracture_date ldr ld_profound_date ld_profound
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ld_profound_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop ld_profound_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("ds_date", 1, length("ds_date") - 5)
- gen `newvar' = (`var'< `index')
= gen ds = (ds_date< 22159)
- order `newvar', after(`var')
= order ds, after(ds_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"ds_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"ds_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"ds_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"ds_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"ds_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"ds_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date cp_date egfr
>  agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ds
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date cp_da
> te egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant ds
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "ds_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date cp_da
> te egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 52 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date cp_d
> ate egfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-ds_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 52>=1 & 52<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds_date ds
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"ds_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop ds_date
- }
- local newvar = substr("`var'", 1, length("`var'") - 5)
= local newvar = substr("cp_date", 1, length("cp_date") - 5)
- gen `newvar' = (`var'< `index')
= gen cp = (cp_date< 22159)
- order `newvar', after(`var')
= order cp, after(cp_date)
  --------------------------------------------------------------------------------------------------------------------- begin order ---
  - version 11
  - if (_caller()<11) {
    _order `macval(0)'
    exit
    }
  - syntax varlist[, Before(varname) After(varname) first last SEQuential ALPHAbetic]
  - if (`"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "" & "`alphabetic'" == "" & "`sequential'" == "") {
  = if (`""' == "" & `"cp_date"' == "" & "" == "" & "" == "" & "" == "" & "" == "") {
    _order `macval(0)'
    exit
    }
  - if (`"`before'"' != "" & `"`after'"' != "") {
  = if (`""' != "" & `"cp_date"' != "") {
    dis as error "before() may not be combined with after()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`first'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with first()"
    exit 198
    }
  - if (`"`before'"' != "" & `"`last'"' != "") {
  = if (`""' != "" & `""' != "") {
    dis as error "before() may not be combined with last()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`before'"' != "") {
  = if (`"cp_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with before()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`first'"' != "") {
  = if (`"cp_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with first()"
    exit 198
    }
  - if (`"`after'"' != "" & `"`last'"' != "") {
  = if (`"cp_date"' != "" & `""' != "") {
    dis as error "after() may not be combined with last()"
    exit 198
    }
  - if ("`first'" != "" & "`last'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "first may not be combined with last"
    exit 198
    }
  - if ("`sequential'" != "" & "`alphabetic'" != "") {
  = if ("" != "" & "" != "") {
    dis as error "sequential may not be combined with alphabetic"
    exit 198
    }
  - if ("`first'" != "") {
  = if ("" != "") {
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    aorder `varlist'
    }
    else {
    _order `varlist'
    }
    }
  - if ("`last'" != "") {
  = if ("" != "") {
    unab vlist : _all
    local list : list vlist - varlist
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    _order `list' `varlist'
    }
  - if (`"`before'"' != "") {
  = if (`""' != "") {
    local test : list before in varlist
    if `test' {
    dis as err "varname specified in before() may not" " be in varlist"
    exit 198
    }
    if "`alphabetic'" != "" {
    local varlist : list sort varlist
    }
    if "`sequential'" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
    unab vlist : _all
    local vlist : list vlist - varlist
    local var_num : list posof "`before'" in vlist
    local var_num = `var_num' - 1
    local fvar : word 1 of `vlist'
    capture local lvar : word `var_num' of `vlist'
    if _rc {
    _order `varlist'
    exit
    }
    unab nlist : `fvar'-`lvar'
    local nlist : list nlist - varlist
    _order `nlist' `varlist'
    }
  - if (`"`after'"' != "") {
  = if (`"cp_date"' != "") {
  - local test : list after in varlist
  - if `test' {
  = if 0 {
    dis as err "varname specified in after() may not" " be in varlist"
    exit 198
    }
  - if "`alphabetic'" != "" {
  = if "" != "" {
    local varlist : list sort varlist
    }
  - if "`sequential'" != "" {
  = if "" != "" {
    preserve
    keep `varlist'
    aorder `varlist'
    unab varlist : _all
    restore
    }
  - unab vlist : _all
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date egfr ageg
> roup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant cp
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date eg
> fr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant cp
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 63>=1 & 63<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local vlist : list vlist - varlist
  - local var_num : list posof "`after'" in vlist
  = local var_num : list posof "cp_date" in vlist
  - local fvar : word 1 of `vlist'
  = local fvar : word 1 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date eg
> fr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - local lvar : word `var_num' of `vlist'
  = local lvar : word 53 of patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 ag
> e2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measur
> ed bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date di
> alysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date e
> gfr agegroup child imd cancerExhaem1yr cancerHaem immunosuppression transplant_kidney transplant
  - unab nlist : `fvar'-`lvar'
  = unab nlist : patient_id-cp_date
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local nlist patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 
> male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_di
> as bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis l
> iver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date
    - local n : word count `varlist'
    = local n : word count patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age
> 2 age3 male bmi obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measure
> d bp_dias bp_dias_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dia
> lysis liver spleen autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 53>=1 & 53<=120000 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nlist : list nlist - varlist
  - _order `nlist' `varlist'
  = _order patient_id stpcode stp region_7 rural household_id household_size resid_care_old resid_care_ldr age age1 age2 age3 male bmi 
> obese40 smoke ethnicity_5 ethnicity_16 respiratory asthmacat cf cardiac diabetes hba1c_pct bp_sys bp_sys_date_measured bp_dias bp_dia
> s_date_measured hypertension_date af dvt_pe pad_surg_date amputate_date stroke dementia neuro tia cancerHaem_date dialysis liver sple
> en autoimmune ibd smi fracture_date ldr ld_profound coviddeath_date otherdeath_date covidadmission_date ds cp_date cp
  - }
  - if ("`alphabetic'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_date"' == "" & "" == "" & "" == "") {
    local vlist : list sort varlist
    _order `vlist'
    }
  - if ("`sequential'" != "" & `"`before'"' == "" & `"`after'"' == "" & "`first'" == "" & "`last'" == "") {
  = if ("" != "" & `""' == "" & `"cp_date"' == "" & "" == "" & "" == "") {
    aorder `varlist'
    }
  ----------------------------------------------------------------------------------------------------------------------- end order ---
- drop `var'
= drop cp_date
- }
- label define kidneyfn 1 "None" 2 "Stage 3a/3b egfr 30-60" 3 "Stage 4/5 egfr<30"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define kidneyfn 1 "None" 2 "Stage 3a/3b egfr 30-60" 3 "Stage 4/5 egfr<30"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- egen egfr_cat = cut(egfr), at(0, 15, 30, 45, 60, 5000)
  ---------------------------------------------------------------------------------------------------------------------- begin egen ---
  - version 6, missing
  - local cvers = _caller()
  - gettoken type 0 : 0, parse(" =(")
  - gettoken name 0 : 0, parse(" =(")
  - if `"`name'"'=="=" {
  = if `"="'=="=" {
  - local name `"`type'"'
  = local name `"egfr_cat"'
  - local type : set type
  - }
  - else {
    gettoken eqsign 0 : 0, parse(" =(")
    if `"`eqsign'"' != "=" {
    error 198
    }
    }
  - confirm new variable `name'
  = confirm new variable egfr_cat
  - gettoken fcn 0 : 0, parse(" =(")
  - gettoken args 0 : 0, parse(" ,") match(par)
  - if "`c(adoarchive)'"=="1" {
  = if ""=="1" {
    capture qui _stfilearchive find _g`fcn'.ado
    if _rc {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
    }
  - else {
  - capture qui findfile _g`fcn'.ado
  = capture qui findfile _gcut.ado
    ---------------------------------------------------------------------------------------------------------------- begin findfile ---
    - version 8
    - gettoken fn 0 : 0, parse(" ,")
    - syntax [, ALL noDEScend PATH(string)]
    - if `"`path'"'=="" {
    = if `""'=="" {
    - local path `"`c(adopath)'"'
    = local path `"BASE;SITE;.;PERSONAL;PLUS;OLDPLACE"'
    - }
    - local n 0
    - local subdir : adosubdir `"`fn'"'
    = local subdir : adosubdir `"_gcut.ado"'
    - if `"`subdir'"' != "" {
    = if `"_"' != "" {
    - gettoken d path : path, parse(";")
    - while `"`d'"'!="" {
    = while `"BASE"'!="" {
    - if `"`d'"' != ";" {
    = if `"BASE"' != ";" {
    - local d : sysdir `"`d'"'
    = local d : sysdir `"BASE"'
    - local ffn `"`d'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_gcut.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_gcut.ado"'
    - if _rc==0 {
      di as txt `"`ffn'"'
      if "`all'"=="" {
      ret local fn `"`ffn'"'
      exit
      }
      if `n' {
      ret local fn `"`return(fn)' "`ffn'""'
      }
      else ret local fn `""`ffn'""'
      local n 1
      }
    - if "`descend'"=="" {
    = if ""=="" {
    - local ffn `"`d'`subdir'`c(dirsep)'`fn'"'
    = local ffn `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - capture confirm file `"`ffn'"'
    = capture confirm file `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - if _rc==0 {
    - di as txt `"`ffn'"'
    = di as txt `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - if "`all'"=="" {
    = if ""=="" {
    - ret local fn `"`ffn'"'
    = ret local fn `"C:\Program Files\Stata16\ado\base/_/_gcut.ado"'
    - exit
    ------------------------------------------------------------------------------------------------------------------ end findfile ---
  - if (`"`r(fn)'"' == "") {
  = if (`"C:\Program Files\Stata16\ado\base/_/_gcut.ado"' == "") {
    di as err in smcl "unknown {bf:egen} function {bf:`fcn'()}"
    exit 133
    }
  - }
  - if `"`par'"' != "(" {
  = if `"("' != "(" {
    exit 198
    }
  - if `"`args'"' == "_all" | `"`args'"' == "*" {
  = if `"egfr"' == "_all" | `"egfr"' == "*" {
    version 7.0, missing
    unab args : _all
    local args : subinstr local args "`_sortindex'" "", all word
    version 6.0, missing
    }
  - syntax [if] [in] [, *]
  - if _by() {
    local byopt "by(`_byvars')"
    local cma ","
    }
  - else if `"`options'"' != "" {
  = else if `"at(0, 15, 30, 45, 60, 5000)"' != "" {
  - local cma ","
  - }
  - tempvar dummy
  - global EGEN_Varname `name'
  = global EGEN_Varname egfr_cat
  - version 7.0, missing
  - global EGEN_SVarname `_sortindex'
  = global EGEN_SVarname __000000
  - version 6.0, missing
  - if inlist("`fcn'","mode","concat","group") {
  = if inlist("cut","mode","concat","group") {
    local vv : display "version " string(`cvers') ", missing:"
    }
  - capture noisily `vv' _g`fcn' `type' `dummy' = (`args') `if' `in' `cma' `byopt' `options'
  = capture noisily  _gcut float __000001 = (egfr)   ,  at(0, 15, 30, 45, 60, 5000)
    ------------------------------------------------------------------------------------------------------------------- begin _gcut ---
    - version 7, missing
    - syntax newvarname(gen) =/exp [if] [in] [, AT(numlist asc) Group(real 0) ICodes Label BY(string)]
    - if `"`by'"' != "" {
    = if `""' != "" {
      _egennoby cut() `"`by'"'
      }
    - cap qui sum `exp', meanonly
    = cap qui sum (egfr)   , meanonly
    - if _rc~=0 {
      di as err "cut`exp'invalid, variable name expected"
      exit 198
      }
    - if "`at'"=="" & `group'==0 {
    = if "0 15 30 45 60 5000"=="" & 0==0 {
      di as err "one of at() or group() must be specified"
      exit 198
      }
    - if "`at'"!="" & `group'!=0 {
    = if "0 15 30 45 60 5000"!="" & 0!=0 {
      di as err "cannot specify both at() and group() option"
      exit 198
      }
    - tempvar touse pctile x
    - qui gen `typelist' `x' = `exp'
    = qui gen  __000004 = (egfr)   
    - if "`at'" != "" {
    = if "0 15 30 45 60 5000" != "" {
    - local n : word count `at'
    = local n : word count 0 15 30 45 60 5000
    - local top : word `n' of `at'
    = local top : word 6 of 0 15 30 45 60 5000
    - qui replace `x' = . if `x' >= `top'
    = qui replace __000004 = . if __000004 >= 5000
    - }
    - marksample touse, novarlist
    - markout `touse' `x'
    = markout __000005 __000004
    - if "`at'"=="" & `group'!=0 & "`icodes'"=="" {
    = if "0 15 30 45 60 5000"=="" & 0!=0 & ""=="" {
      local icodes "icodes"
      }
    - if "`label'"!="" & "`icodes'"=="" {
    = if ""!="" & ""=="" {
      local icodes "icodes"
      }
    - local vlbl "$EGEN_Varname"
    = local vlbl "egfr_cat"
    - local vlablen : label `vlbl' maxlength
    = local vlablen : label egfr_cat maxlength
    - if `vlablen' != 0 {
    = if 0 != 0 {
      local chop = ustrlen("`vlbl'") - 1
      local ends = "abcdefghijklmnopqrstuvwxyz0123456789" + "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
      forvalues j = 1/62 {
      local vlbl = usubstr("`vlbl'",1,`chop') + bsubstr("`ends'",`j',1)
      local vlablen : label `vlbl' maxlength
      if `vlablen' == 0 {
      continue, break
      }
      }
      }
    - if "`at'"=="" {
    = if "0 15 30 45 60 5000"=="" {
      qui summ `x', meanonly
      tempname extra
      scalar `extra' = r(min)
      local at "`extra'"
      qui pctile `pctile' = `x' if `touse', nq(`group')
      local grm1 = `group' - 1
      forvalues count = 1/`grm1' {
      tempname extra
      scalar `extra' = `pctile'[`count']
      local at "`at' `extra'"
      }
      qui summ `x' if `touse', meanonly
      tempname extra
      scalar `extra' = r(max)+1
      local at "`at' `extra'"
      }
    - local i=0
    - foreach cutp of local at {
    - foreach cutp of local at {
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 0 if __000004 >= 0 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 0>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=0+1
    - }
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 15 if __000004 >= 15 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 1>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=1+1
    - }
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 30 if __000004 >= 30 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 2>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=2+1
    - }
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 45 if __000004 >= 45 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 3>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=3+1
    - }
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 60 if __000004 >= 60 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 4>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=4+1
    - }
    - if "`icodes'"=="" {
    = if ""=="" {
    - qui replace `varlist' = `cutp' if `x' >= `cutp' & `touse'
    = qui replace __000001 = 5000 if __000004 >= 5000 & __000005
    - }
    - else {
      qui replace `varlist' = `i' if `x' >= `cutp' & `touse'
      }
    - if `i'>=0 & "`label'"!="" & "`icodes'" != "" {
    = if 5>=0 & ""!="" & "" != "" {
      local code = `i'
      local slcut = string(`cutp')
      label define `vlbl' `code' "`slcut'-", add
      }
    - local i=`i'+1
    = local i=5+1
    - }
    - if "`label'"!="" {
    = if ""!="" {
      label values `varlist' `vlbl'
      }
    --------------------------------------------------------------------------------------------------------------------- end _gcut ---
  - version 7.0, missing
  - local message $EGEN_Message
  = local message 
  - version 6.0, missing
  - global EGEN_SVarname
  - global EGEN_Varname
  - global EGEN_Message
  - if _rc { exit _rc }
  - if "`message'" == "" {
  = if "" == "" {
  - quietly count if missing(`dummy')
  = quietly count if missing(__000001)
  - if r(N) {
  - local s = cond(r(N)>1,"s","")
  - local N : di %11.0fc r(N)
  - local N `N'
  = local N          38
  - di in bl "(`N' missing value`s' generated)"
  = di in bl "(38 missing values generated)"
(38 missing values generated)
  - }
  - }
  - rename `dummy' `name'
  = rename __000001 egfr_cat
  ------------------------------------------------------------------------------------------------------------------------ end egen ---
- recode egfr_cat 0=5 15=4 30=3 45=2 60=0
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"egfr_cat 0=5 15=4 30=3 45=2 60=0"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : egfr_cat, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist egfr_cat
    - local n : word count `varlist'
    = local n : word count egfr_cat
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var egfr_cat
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0=5 15=4 30=3 45=2 60=0"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0=5 15=4 30=3 45=2 60=0"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 5
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"15"', "", "*", "else") & `"15"' != bsubstr("missing", 1, max(3,length(`"15"'))) & `"15"' != bsubstr("nonmissing", 1
> , max(4,length(`"15"'))) {
  - if `"`1'"' == "=" {
  = if `"15"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"15"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 15
    - if !_rc {
    - return local s1 `v'
    = return local s1 15
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs2 "float(`vn')==float(15)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs2 "`vn'==15"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 4
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"30"', "", "*", "else") & `"30"' != bsubstr("missing", 1, max(3,length(`"30"'))) & `"30"' != bsubstr("nonmissing", 1
> , max(4,length(`"30"'))) {
  - if `"`1'"' == "=" {
  = if `"30"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"30"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 30
    - if !_rc {
    - return local s1 `v'
    = return local s1 30
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs3 "float(`vn')==float(30)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs3 "`vn'==30"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"45"', "", "*", "else") & `"45"' != bsubstr("missing", 1, max(3,length(`"45"'))) & `"45"' != bsubstr("nonmissing", 1
> , max(4,length(`"45"'))) {
  - if `"`1'"' == "=" {
  = if `"45"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs4 4
  - GetEl `"`1'"' `statcode'
  = GetEl `"45"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 45
    - if !_rc {
    - return local s1 `v'
    = return local s1 45
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs4 "float(`vn')==float(45)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs4 "`vn'==45"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs4 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"60"', "", "*", "else") & `"60"' != bsubstr("missing", 1, max(3,length(`"60"'))) & `"60"' != bsubstr("nonmissing", 1
> , max(4,length(`"60"'))) {
  - if `"`1'"' == "=" {
  = if `"60"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs5 5
  - GetEl `"`1'"' `statcode'
  = GetEl `"60"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 60
    - if !_rc {
    - return local s1 `v'
    = return local s1 60
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs5 "float(`vn')==float(60)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs5 "`vn'==60"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs5 0
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 5
  - local nrhs = `j'- 1
  = local nrhs = 6- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = egfr_cat if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type egfr_cat
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 5 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 5 if __000002==1 & float(egfr_cat)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(0)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 4 if __000002==1 & float(egfr_cat)==float(15)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(15)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(egfr_cat)==float(30)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(30)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(egfr_cat)==float(45)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(45)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 0 if __000002==1 & float(egfr_cat)==float(60)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(60)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(egfr_cat) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = egfr_cat if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(egfr_cat: 770 changes made)"
(egfr_cat: 770 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace egfr_cat = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- recode egfr_cat 0=1 2/3=2 4/5=3, gen(kidneyfn)
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"egfr_cat 0=1 2/3=2 4/5=3"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : egfr_cat, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist egfr_cat
    - local n : word count `varlist'
    = local n : word count egfr_cat
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var egfr_cat
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 0=1 2/3=2 4/5=3"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `"kidneyfn"' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `"kidneyfn"' != "" {
  - confirm new var `generate'
  = confirm new var kidneyfn
  - local nnew : word count `generate'
  = local nnew : word count kidneyfn
  - if `nvlist' != `nnew' {
  = if 1 != 1 {
    Error 198 "the number of new and transformed varnames should be the same"
    }
  - }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "kidneyfn" != "" {
  - if `nvlist' == 1 {
  = if 1 == 1 {
  - capture label dir `generate'
  = capture label dir kidneyfn
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("dir", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label dir kidneyfn
      }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if _rc {
  - local label `generate'
  = local label kidneyfn
  - local labeldisallowed = 0
  - }
  - else {
    local labeldisallowed = 3
    }
  - }
  - else {
    local labeldisallowed = 1
    }
  - }
  - else {
    local labeldisallowed = 2
    }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 0=1 2/3=2 4/5=3"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"0"', "", "*", "else") & `"0"' != bsubstr("missing", 1, max(3,length(`"0"'))) & `"0"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"0"'))) {
  - if `"`1'"' == "=" {
  = if `"0"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"0"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 0
    - if !_rc {
    - return local s1 `v'
    = return local s1 0
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(0)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==0"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 1
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"2"', "", "*", "else") & `"2"' != bsubstr("missing", 1, max(3,length(`"2"'))) & `"2"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"2"'))) {
  - if `"`1'"' == "=" {
  = if `"2"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs2 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 2
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 3
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs2 "float(`vn') >= float(2) & float(`vn') <= float(3)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs2 "`vn' >= 2 & `vn' <= 3"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs2 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"4"', "", "*", "else") & `"4"' != bsubstr("missing", 1, max(3,length(`"4"'))) & `"4"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"4"'))) {
  - if `"`1'"' == "=" {
  = if `"4"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs3 3
  - GetEl `"`1'"' `statcode'
  = GetEl `"4"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 4
    - if !_rc {
    - return local s1 `v'
    = return local s1 4
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"/"' == "/" {
  - local vlow `r(s1)'
  = local vlow 4
  - mac shift 2
  - GetEl `"`1'"' `statcode'
  = GetEl `"5"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 5
    - if !_rc {
    - return local s1 `v'
    = return local s1 5
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local vhigh `r(s1)'
  = local vhigh 5
  - local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
  = local flhs3 "float(`vn') >= float(4) & float(`vn') <= float(5)"
  - local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
  = local lhs3 "`vn' >= 4 & `vn' <= 5"
  - }
  - else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"3"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 3
    - if !_rc {
    - return local s1 `v'
    = return local s1 3
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs3 3
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 3
  - local nrhs = `j'- 1
  = local nrhs = 4- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = egfr_cat if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type egfr_cat
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 3 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 1 if __000002==1 & float(egfr_cat)==float(0)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat)==float(0)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(egfr_cat) >= float(2) & float(egfr_cat) <= float(3)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat) >= float(2) & float(egfr_cat) <= float(3)
  - }
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 3 if __000002==1 & float(egfr_cat) >= float(4) & float(egfr_cat) <= float(5)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(egfr_cat) >= float(4) & float(egfr_cat) <= float(5)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(egfr_cat) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "kidneyfn" == "" {
    replace `NEW`iv'' = `vn' if `touse'==0
    }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `"kidneyfn"' == "" {
    di as txt "(`vn': `nchanges`iv'' changes made)"
    }
  - else {
  - local gv : word `iv' of `generate'
  = local gv : word 1 of kidneyfn
  - di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
  = di as txt "(762 differences between egfr_cat and kidneyfn)"
(762 differences between egfr_cat and kidneyfn)
  - }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "kidneyfn" != "" {
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - local g : word `iv' of `generate'
  = local g : word 1 of kidneyfn
  - gen `g' = `NEW`iv''
  = gen kidneyfn = __000003
  - recast `vntype`iv'' `g'
  = recast float kidneyfn
    ------------------------------------------------------------------------------------------------------------------ begin recast ---
    - version 6
    - gettoken type 0 : 0, parse(" ,")
    - syntax varlist [, FORCE DRYRUN]
    - tokenize `varlist'
    = tokenize kidneyfn
    - local stop : word count `varlist'
    = local stop : word count kidneyfn
    - tempvar RECAST
    - local rc 0
    - local i 1
    - while `i' <= `stop'{
    = while 1 <= 1{
    - capture drop `RECAST'
    = capture drop __000005
    - capture gen `type' `RECAST' = ``i''
    = capture gen float __000005 = kidneyfn
    - if _rc == 1000 {
      error 1000
      }
    - if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
    - else {
    - local ok 1
    - quietly count if ``i''~=`RECAST'
    = quietly count if kidneyfn~=__000005
    - if r(N)>0 & "`dryrun'"!="" {
    = if r(N)>0 & ""!="" {
      exit 4
      }
    - if "`dryrun'"!="" {
    = if ""!="" {
      local i = `i' +1
      continue
      }
    - if r(N)>0 & "`force'"=="" {
    = if r(N)>0 & ""=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
    - else if r(N)>0 & "`force'"!="" {
    = else if r(N)>0 & ""!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
    - if `ok' {
    = if 1 {
    - local varl : variable label ``i''
    = local varl : variable label kidneyfn
    - label var `RECAST' `"`varl'"'
    = label var __000005 `""'
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("var", "val") > 0 ) {
        gettoken val 0 : 0
        syntax anything [, nofix]
        if "`fix'" != "" {
        local fix ", nofix"
        }
        gettoken var rest : anything
        while `"`rest'"' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
        local vlist : list anything - lab
        if "`lab'" == "." {
        local lab ""
        }
        foreach var of varlist `vlist' {
        `vv' _label `val' `var' `lab' `fix'
        }
        }
      - else {
      - `vv' _label `macval(0)'
      = version 6, missing: _label var __000005 `""'
      - }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - local fmt : format ``i''
    = local fmt : format kidneyfn
    - capture confirm string var `RECAST'
    = capture confirm string var __000005
    - if _rc {
    - local val : value label ``i''
    = local val : value label kidneyfn
    - label val `RECAST' `val'
    = label val __000005 
      ----------------------------------------------------------------------------------------------------------------- begin label ---
      - version 10.0
      - local vv : display "version " string(_caller()) ", missing:"
      - gettoken val : 0
      - if (strpos("`val'", "val") > 0 ) {
      = if (strpos("val", "val") > 0 ) {
      - gettoken val 0 : 0
      - syntax anything [, nofix]
      - if "`fix'" != "" {
      = if "" != "" {
        local fix ", nofix"
        }
      - gettoken var rest : anything
      - while `"`rest'"' != "" {
      = while `""' != "" {
        gettoken lab rest : rest
        local label "`lab'"
        }
      - local vlist : list anything - lab
      - if "`lab'" == "." {
      = if "" == "." {
        local lab ""
        }
      - foreach var of varlist `vlist' {
      = foreach var of varlist __000005 {
      - `vv' _label `val' `var' `lab' `fix'
      = version 6, missing: _label val __000005  
      - }
      - }
      - else {
        `vv' _label `macval(0)'
        }
      ------------------------------------------------------------------------------------------------------------------- end label ---
    - format `RECAST' `fmt'
    = format __000005 %9.0g
    - }
    - else if bsubstr(`"`fmt'"',2,1)=="-" {
    = else if bsubstr(`"%9.0g"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
    - nobreak {
    - char rename ``i'' `RECAST'
    = char rename kidneyfn __000005
    - move `RECAST' ``i''
    = move __000005 kidneyfn
    - drop ``i''
    = drop kidneyfn
    - rename `RECAST' ``i''
    = rename __000005 kidneyfn
    - }
    - }
    - }
    - local i = `i' +1
    = local i = 1 +1
    - }
    - while `i' <= `stop'{
    = while 2 <= 1{
      capture drop `RECAST'
      capture gen `type' `RECAST' = ``i''
      if _rc == 1000 {
      error 1000
      }
      if _rc {
      di in red "``i'':  `type' invalid"
      local rc 109
      }
      else {
      local ok 1
      quietly count if ``i''~=`RECAST'
      if r(N)>0 & "`dryrun'"!="" {
      exit 4
      }
      if "`dryrun'"!="" {
      local i = `i' +1
      continue
      }
      if r(N)>0 & "`force'"=="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " would be changed; not changed"
      local ok 0
      }
      else if r(N)>0 & "`force'"!="" {
      di in gr "``i'':  " in ye r(N) in gr " value" cond(r(N)==1, "", "s") " changed"
      }
      if `ok' {
      local varl : variable label ``i''
      label var `RECAST' `"`varl'"'
      local fmt : format ``i''
      capture confirm string var `RECAST'
      if _rc {
      local val : value label ``i''
      label val `RECAST' `val'
      format `RECAST' `fmt'
      }
      else if bsubstr(`"`fmt'"',2,1)=="-" {
      local fmt : format `RECAST'
      if bsubstr(`"`fmt'"',2,1)!="-" {
      local fmt = "%-" + bsubstr(`"`fmt'"',2,.)
      format `RECAST' `fmt'
      }
      }
      nobreak {
      char rename ``i'' `RECAST'
      move `RECAST' ``i''
      drop ``i''
      rename `RECAST' ``i''
      }
      }
      }
      local i = `i' +1
      }
    - exit `rc'
    = exit 0
    -------------------------------------------------------------------------------------------------------------------- end recast ---
  - local vlab : variable label `vn'
  = local vlab : variable label egfr_cat
  - if `"`vlab'"' != "" {
  = if `""' != "" {
    local vlab `" (`vlab')"'
    }
  - label var `g' `"RECODE of `vn'`vlab'"'
  = label var kidneyfn `"RECODE of egfr_cat"'
    ------------------------------------------------------------------------------------------------------------------- begin label ---
    - version 10.0
    - local vv : display "version " string(_caller()) ", missing:"
    - gettoken val : 0
    - if (strpos("`val'", "val") > 0 ) {
    = if (strpos("var", "val") > 0 ) {
      gettoken val 0 : 0
      syntax anything [, nofix]
      if "`fix'" != "" {
      local fix ", nofix"
      }
      gettoken var rest : anything
      while `"`rest'"' != "" {
      gettoken lab rest : rest
      local label "`lab'"
      }
      local vlist : list anything - lab
      if "`lab'" == "." {
      local lab ""
      }
      foreach var of varlist `vlist' {
      `vv' _label `val' `var' `lab' `fix'
      }
      }
    - else {
    - `vv' _label `macval(0)'
    = version 8, missing: _label var kidneyfn `"RECODE of egfr_cat"'
    - }
    --------------------------------------------------------------------------------------------------------------------- end label ---
  - if `vlabeled' {
  = if 0 {
    label value `g' `label'
    }
  - }
  - }
  - else {
    local iv 0
    foreach vn of local vlist {
    local ++iv
    replace `vn' = `NEW`iv''
    }
    }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- replace kidneyfn = 1 if egfr==.
(38 real changes made)
- label values kidneyfn kidneyfn
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" kidneyfn"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "kidneyfn"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "kidneyfn" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist kidneyfn {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values kidneyfn kidneyfn 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop egfr egfr_cat
- replace kidneyfn = 3 if dialysis == 1
(145 real changes made)
- replace kidneyfn = 3 if transplant_kidney == 1
(141 real changes made)
- drop transplant_kidney
- label define hba1ccat 0 "<6.5%" 1">=6.5-7.4" 2">=7.5-7.9" 3">=8-8.9" 4">=9"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define hba1ccat 0 "<6.5%" 1">=6.5-7.4" 2">=7.5-7.9" 3">=8-8.9" 4">=9"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- gen hba1ccat = 0 if hba1c_pct < 6.5
(293 missing values generated)
- replace hba1ccat = 1 if hba1c_pct >= 6.5 & hba1c_pct < 7.5
(141 real changes made)
- replace hba1ccat = 2 if hba1c_pct >= 7.5 & hba1c_pct < 8
(51 real changes made)
- replace hba1ccat = 3 if hba1c_pct >= 8 & hba1c_pct < 9
(55 real changes made)
- replace hba1ccat = 4 if hba1c_pct >= 9 & hba1c_pct !=.
(45 real changes made)
- label values hba1ccat hba1ccat
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" hba1ccat"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "hba1ccat"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "hba1ccat" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist hba1ccat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values hba1ccat hba1ccat 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- drop hba1c_pct
- gen diabcat = 1 if diabetes==0
(163 missing values generated)
- replace diabcat = 2 if diabetes==1 & inlist(hba1ccat, 0, 1)
(134 real changes made)
- replace diabcat = 3 if diabetes==1 & inlist(hba1ccat, 2, 3, 4)
(29 real changes made)
- replace diabcat = 4 if diabetes==1 & !inlist(hba1ccat, 0, 1, 2, 3, 4)
(0 real changes made)
- label define diabetes 1 "No diabetes" 2 "Controlled diabetes" 3 "Uncontrolled diabetes" 4 "Diabetes, no hba1c measure"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define diabetes 1 "No diabetes" 2 "Controlled diabetes" 3 "Uncontrolled diabetes" 4 "Diabetes, no hba
> 1c measure"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values diabcat diabetes
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" diabetes"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "diabetes"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "diabetes" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist diabcat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values diabcat diabetes 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- noi tab ldr ld_profound, m

           |      ld_profound
       ldr |         0          1 |     Total
-----------+----------------------+----------
         0 |       515        130 |       645 
         1 |       132         31 |       163 
-----------+----------------------+----------
     Total |       647        161 |       808 
- gen ldr_cat = ldr
- recode ldr_cat 1=2 if ld_profound==1
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"ldr_cat 1=2"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : ldr_cat, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist ldr_cat
    - local n : word count `varlist'
    = local n : word count ldr_cat
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var ldr_cat
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 1=2"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 1=2"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 1
  - local nrhs = `j'- 1
  = local nrhs = 2- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = ldr_cat if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type ldr_cat
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 1 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(ldr_cat)==float(1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(ldr_cat)==float(1)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(ldr_cat) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = ldr_cat if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(ldr_cat: 31 changes made)"
(ldr_cat: 31 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace ldr_cat = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label define ldprofound 0 "Not on LDR" 1 "LDR, mild" 2 "LDR, profound"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ldprofound 0 "Not on LDR" 1 "LDR, mild" 2 "LDR, profound"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ldr_cat ldprofound
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ldprofound"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ldprofound"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ldprofound" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ldr_cat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ldr_cat ldprofound 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- noi tab ldr resid_care_ld, m

           | Residentia
           |  l care,
           |  learning
           | disability
       ldr |         0 |     Total
-----------+-----------+----------
         0 |       645 |       645 
         1 |       163 |       163 
-----------+-----------+----------
     Total |       808 |       808 
- gen ldr_carecat = ldr
- recode ldr 1=2 if resid_care_ld==1
  -------------------------------------------------------------------------------------------------------------------- begin recode ---
  - version 8
  - syntax anything(equalok name=vrules id="varlist (rule)..") [if] [in] [, COPYrest DEBUG Generate(str) INto(str) Label(str) PREfix(st
> r) Test ]
  - gettoken tok1 tmp : vrules , parse("(")
  - gettoken tok2 : tmp, parse("(")
  - if `"`tok1'"' == "(" {
  = if `"ldr 1=2"' == "(" {
    error 102
    }
  - if trim(`"`tok2'"') == "(" {
  = if trim(`""') == "(" {
    unab vlist : `tok1'
    local nvlist : word count `vlist'
    local rules `"`tmp'"'
    local parens = 1
    }
  - else {
  - gettoken vn rules : vrules
  - unab vlist : `vn', max(1)
  = unab vlist : ldr, max(1)
    -------------------------------------------------------------------------------------------------------------------- begin unab ---
    - version 6
    - gettoken user 0: 0, parse(" :")
    - gettoken colon 0: 0, parse(" :")
    - if `"`colon'"' != ":" { error 198 }
    = if `":"' != ":" { error 198 }
    - syntax [varlist(default=empty)] [, MIN(integer 1) MAX(integer 120000) NAME(string)]
    - c_local `user' `varlist'
    = c_local vlist ldr
    - local n : word count `varlist'
    = local n : word count ldr
    - if `n'>=`min' & `n'<=`max' { exit }
    = if 1>=1 & 1<=1 { exit }
    ---------------------------------------------------------------------------------------------------------------------- end unab ---
  - local nvlist = 1
  - local parens = 0
  - }
  - capture confirm string var `vlist'
  = capture confirm string var ldr
  - if _rc==0 {
    Error 108 "recode only allows numeric variables"
    }
  - if `"`rules'"' == "" {
  = if `" 1=2"' == "" {
    Error 198 "rules expected"
    }
  - marksample touse, novarlist
  - if `"`prefix'"' != "" {
  = if `""' != "" {
    if `"`generate'`into'"' != "" {
    Error 198 "option prefix() may not be combined with generate() or into()"
    }
    GenerateVar `"`prefix'"' `"`vlist'"'
    local generate `r(pvlist)'
    }
  - else {
  - if `"`generate'"' != "" & `"`into'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "options generate() and into() are synonyms"
    }
  - if `"`into'"' != "" {
  = if `""' != "" {
    local generate `"`into'"'
    local into
    }
  - if `"`generate'"' != "" {
  = if `""' != "" {
    confirm new var `generate'
    local nnew : word count `generate'
    if `nvlist' != `nnew' {
    Error 198 "the number of new and transformed varnames should be the same"
    }
    }
  - }
  - if `"`label'"' != "" {
  = if `""' != "" {
    if "`generate'" == "" {
    Error 198 "option label() allowed only with generate()"
    }
    confirm name `label'
    local labeldisallowed = 0
    }
  - else if "`generate'" != "" {
  = else if "" != "" {
    if `nvlist' == 1 {
    capture label dir `generate'
    if _rc {
    local label `generate'
    local labeldisallowed = 0
    }
    else {
    local labeldisallowed = 3
    }
    }
    else {
    local labeldisallowed = 1
    }
    }
  - else {
  - local labeldisallowed = 2
  - }
  - local Qtest = "`test'" != ""
  = local Qtest = "" != ""
  - tokenize `"`rules'"', parse(" ()/=")
  = tokenize `" 1=2"', parse(" ()/=")
  - if `parens' {
  = if 0 {
    mac shift
    }
  - local i = 0
  - local j = 1
  - local nolhs = 1
  - local vlabeled = 0
  - tempname statcode
  - scalar `statcode' = 0
  = scalar __000001 = 0
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"1"', "", "*", "else") & `"1"' != bsubstr("missing", 1, max(3,length(`"1"'))) & `"1"' != bsubstr("nonmissing", 1, ma
> x(4,length(`"1"'))) {
  - if `"`1'"' == "=" {
  = if `"1"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
  - else {
  - local ++i
  - local rhs`i' `j'
  = local rhs1 1
  - GetEl `"`1'"' `statcode'
  = GetEl `"1"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 1
    - if !_rc {
    - return local s1 `v'
    = return local s1 1
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - if `"`2'"' == "/" {
  = if `"="' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
  - else {
  - local flhs`i' "float(\`vn')==float(`r(s1)')"
  = local flhs1 "float(`vn')==float(1)"
  - local lhs`i' "\`vn'==`r(s1)'"
  = local lhs1 "`vn'==1"
  - }
  - local nolhs = 0
  - mac shift
  - }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`"="', "", "*", "else") & `"="' != bsubstr("missing", 1, max(3,length(`"="'))) & `"="' != bsubstr("nonmissing", 1, ma
> x(4,length(`"="'))) {
  - if `"`1'"' == "=" {
  = if `"="' == "=" {
  - if `nolhs' {
  = if 0 {
    Error 198 `"transformation rule without "condition" part"'
    }
  - mac shift
  - GetEl `"`1'"' `statcode'
  = GetEl `"2"' __000001
    ------------------------------------------------------------------------------------------------------------ begin recode.GetEl ---
    - args v statcode
    - capt confirm number `v'
    = capt confirm number 2
    - if !_rc {
    - return local s1 `v'
    = return local s1 2
    - exit
    -------------------------------------------------------------------------------------------------------------- end recode.GetEl ---
  - local rrhs`j' `r(s1)'
  = local rrhs1 2
  - mac shift
  - if `parens' {
  = if 0 {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
  - local nolhs 1
  - local ++j
  - }
  - else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
  - }
  - while !inlist(`"`1'"', "", "*", "else") & `"`1'"' != bsubstr("missing", 1, max(3,length(`"`1'"'))) & `"`1'"' != bsubstr("nonmissing
> ", 1, max(4,length(`"`1'"'))) {
  = while !inlist(`""', "", "*", "else") & `""' != bsubstr("missing", 1, max(3,length(`""'))) & `""' != bsubstr("nonmissing", 1, max(4,
> length(`""'))) {
    if `"`1'"' == "=" {
    if `nolhs' {
    Error 198 `"transformation rule without "condition" part"'
    }
    mac shift
    GetEl `"`1'"' `statcode'
    local rrhs`j' `r(s1)'
    mac shift
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs`j''"'
    local vlabeled 1
    local vlabel`j' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    local nolhs 1
    local ++j
    }
    else {
    local ++i
    local rhs`i' `j'
    GetEl `"`1'"' `statcode'
    if `"`2'"' == "/" {
    local vlow `r(s1)'
    mac shift 2
    GetEl `"`1'"' `statcode'
    local vhigh `r(s1)'
    local flhs`i' "float(\`vn') >= float(`vlow') & float(\`vn') <= float(`vhigh')"
    local lhs`i' "\`vn' >= `vlow' & \`vn' <= `vhigh'"
    }
    else {
    local flhs`i' "float(\`vn')==float(`r(s1)')"
    local lhs`i' "\`vn'==`r(s1)'"
    }
    local nolhs = 0
    mac shift
    }
    }
  - if `nolhs' == 0 {
  = if 1 == 0 {
    error 198
    }
  - local nlhs = `i'
  = local nlhs = 1
  - local nrhs = `j'- 1
  = local nrhs = 2- 1
  - while `"`1'"' != "" {
  = while `""' != "" {
    local key `1'
    if `"`key'"' == "*" {
    local key else
    }
    else if `"`key'"' == bsubstr("missing",1,max(3,length(`"`key'"'))) {
    local key missing
    }
    else if `"`key'"' == bsubstr("nonmissing",1,max(4,length(`"`key'"'))) {
    local key nonmissing
    }
    if !inlist(`"`key'"', "else", "missing", "nonmissing") {
    Error 198 `"unknown keyword `key'"'
    }
    if `"`rrhs_`key''"' != "" {
    Error 198 `"multiple specification of keyword `key'"'
    }
    if `"`2'"' != "=" {
    Error 198 `"= expected"'
    }
    GetEl `"`3'"' `statcode'
    local rrhs_`key' `r(s1)'
    mac shift 3
    if `parens' {
    if `"`1'"' != ")" & `"`2'"' == ")" {
    LabelOk `labeldisallowed' `"`rrhs_`key''"'
    local vlabeled 1
    local vlabel_`key' `"`1'"'
    mac shift
    }
    CheckParens `"`1'"' `"`2'"'
    mac shift 2
    }
    }
  - if `"`rrhs_else'"' != "" & `"`rrhs_missing'`rrhs_nonmissing'"' != "" {
  = if `""' != "" & `""' != "" {
    Error 198 "keywords else/* and missing/nonmissing may not be combined"
    }
  - if "`debug'" != "" {
  = if "" != "" {
    local vn varname
    di _n as txt "There are `nlhs' lhs rules:"
    forvalues i = 1 / `nlhs' {
    di as txt "  `lhs`i'' -> RULE `rhs`i''"
    }
    di _n as txt "There are `nrhs' rhs rules:"
    forvalues j = 1 / `nrhs' {
    di as txt "    RULE `j':  `rrhs`j''  `vlabel`j''"
    }
    di _n as txt `"      else: `rrhs_else'  `vlabel_else'"'
    di as txt `"   missing: `rrhs_missing'  `vlabel_missing'"'
    di as txt `"nonmissing: `rrhs_nonmissing'  `vlabel_nonmissing'"'
    }
  - quietly {
  - tempvar OTHERWISE
  - local iv = 0
  - local overwrite
  - foreach vn of local vlist {
  - local ++iv
  - tempvar NEW`iv'
  = tempvar NEW1
  - gen double `NEW`iv'' = `vn' if `touse'
  = gen double __000003 = ldr if __000000
  - capt drop `OTHERWISE'
  = capt drop __000002
  - gen byte `OTHERWISE' = cond(`touse'==1,1,.)
  = gen byte __000002 = cond(__000000==1,1,.)
  - local vntype`iv' : type `vn'
  = local vntype1 : type ldr
  - local float
  - if !inlist("`vntype`iv''", "double", "long") {
  = if !inlist("float", "double", "long") {
  - local float f
  - }
  - if `statcode' == 1 {
  = if __000001 == 1 {
    summ `vn' if `touse', meanonly
    if "`r(max)'" == "" {
    local nchanges`iv' = 0
    replace `NEW`iv'' = `vn' if `touse'==0
    continue
    }
    }
  - else if `statcode' == 2 {
  = else if __000001 == 2 {
    summ `vn' if `touse'
    }
  - else if `statcode' == 3 {
  = else if __000001 == 3 {
    summ `vn' if `touse', detail
    }
  - forvalues i = 1 / `nlhs' {
  = forvalues i = 1 / 1 {
  - replace `NEW`iv'' = `rrhs`rhs`i''' if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000003 = 2 if __000002==1 & float(ldr)==float(1)
  - if `Qtest' {
  = if 0 {
    Qcount N : `"`OTHERWISE'==0 & ``float'lhs`i''"'
    if `N' > 0 {
    local overwrite = 1
    local used`i' = 1
    }
    else {
    Qcount N : `"`OTHERWISE'==1 & ``float'lhs`i''"'
    if `N' > 0 {
    local used`i' = 1
    }
    }
    }
  - replace `OTHERWISE' = 0 if `OTHERWISE'==1 & ``float'lhs`i''
  = replace __000002 = 0 if __000002==1 & float(ldr)==float(1)
  - }
  - if "`rrhs_else'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_else' if `OTHERWISE'==1
    }
  - if "`rrhs_missing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_missing' if `OTHERWISE'==1 & missing(`vn')
    }
  - if "`rrhs_nonmissing'" != "" {
  = if "" != "" {
    replace `NEW`iv'' = `rrhs_nonmissing' if `OTHERWISE'==1 & !missing(`vn')
    }
  - if "`float'" != "" {
  = if "f" != "" {
  - count if `touse' & (float(`vn') != float(`NEW`iv''))
  = count if __000000 & (float(ldr) != float(__000003))
  - }
  - else {
    count if `touse' & ((`vn') != (`NEW`iv''))
    }
  - local nchanges`iv' = r(N)
  = local nchanges1 = r(N)
  - if "`copyrest'" != "" | "`generate'" == "" {
  = if "" != "" | "" == "" {
  - replace `NEW`iv'' = `vn' if `touse'==0
  = replace __000003 = ldr if __000000==0
  - }
  - }
  - }
  - local iv = 0
  - foreach vn of local vlist {
  - local ++iv
  - if `"`generate'"' == "" {
  = if `""' == "" {
  - di as txt "(`vn': `nchanges`iv'' changes made)"
  = di as txt "(ldr: 0 changes made)"
(ldr: 0 changes made)
  - }
  - else {
    local gv : word `iv' of `generate'
    di as txt "(`nchanges`iv'' differences between `vn' and `gv')"
    }
  - }
  - if `Qtest' {
  = if 0 {
    if "`overwrite'" != "" {
    di as txt `"(transformation rules "overlapped")"'
    }
    forvalues i = 1/`nlhs' {
    if "`used`i''" == "" {
    di as txt "(one or more transformation rules did not match any values)"
    continue, break
    }
    }
    }
  - nobreak quietly {
  - if `vlabeled' {
  = if 0 {
    forvalues j = 1/ `nrhs' {
    if `"`vlabel`j''"' != "" {
    label def `label' `rrhs`j'' `"`vlabel`j''"', modify
    }
    }
    foreach key in else missing nonmissing {
    if `"`vlabel_`key''"' != "" {
    label def `label' `rrhs_`key'' `"`vlabel_`key''"', modify
    }
    }
    }
  - if "`generate'" != "" {
  = if "" != "" {
    local iv = 0
    foreach vn of local vlist {
    local ++iv
    local g : word `iv' of `generate'
    gen `g' = `NEW`iv''
    recast `vntype`iv'' `g'
    local vlab : variable label `vn'
    if `"`vlab'"' != "" {
    local vlab `" (`vlab')"'
    }
    label var `g' `"RECODE of `vn'`vlab'"'
    if `vlabeled' {
    label value `g' `label'
    }
    }
    }
  - else {
  - local iv 0
  - foreach vn of local vlist {
  - local ++iv
  - replace `vn' = `NEW`iv''
  = replace ldr = __000003
  - }
  - }
  - }
  ---------------------------------------------------------------------------------------------------------------------- end recode ---
- label define ldcare 0 "Not on LDR" 1 "LDR, not in residential care" 2 "LDR, in residential care"
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("define", "val") > 0 ) {
    gettoken val 0 : 0
    syntax anything [, nofix]
    if "`fix'" != "" {
    local fix ", nofix"
    }
    gettoken var rest : anything
    while `"`rest'"' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
    local vlist : list anything - lab
    if "`lab'" == "." {
    local lab ""
    }
    foreach var of varlist `vlist' {
    `vv' _label `val' `var' `lab' `fix'
    }
    }
  - else {
  - `vv' _label `macval(0)'
  = version 16.1, missing: _label define ldcare 0 "Not on LDR" 1 "LDR, not in residential care" 2 "LDR, in residential care"
  - }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- label values ldr_carecat ldcare
  --------------------------------------------------------------------------------------------------------------------- begin label ---
  - version 10.0
  - local vv : display "version " string(_caller()) ", missing:"
  - gettoken val : 0
  - if (strpos("`val'", "val") > 0 ) {
  = if (strpos("values", "val") > 0 ) {
  - gettoken val 0 : 0
  - syntax anything [, nofix]
  - if "`fix'" != "" {
  = if "" != "" {
    local fix ", nofix"
    }
  - gettoken var rest : anything
  - while `"`rest'"' != "" {
  = while `" ldcare"' != "" {
  - gettoken lab rest : rest
  - local label "`lab'"
  = local label "ldcare"
  - }
  - while `"`rest'"' != "" {
  = while `""' != "" {
    gettoken lab rest : rest
    local label "`lab'"
    }
  - local vlist : list anything - lab
  - if "`lab'" == "." {
  = if "ldcare" == "." {
    local lab ""
    }
  - foreach var of varlist `vlist' {
  = foreach var of varlist ldr_carecat {
  - `vv' _label `val' `var' `lab' `fix'
  = version 16.1, missing: _label values ldr_carecat ldcare 
  - }
  - }
  - else {
    `vv' _label `macval(0)'
    }
  ----------------------------------------------------------------------------------------------------------------------- end label ---
- assert coviddeath_date >= `index'
= assert coviddeath_date >= 22159
- assert otherdeath_date >= `index'
= assert otherdeath_date >= 22159
- assert covidadmission_date >= `index'
= assert covidadmission_date >= 22159
84 contradictions in 808 observations
assertion is false
  global coviddeathcensor1 = d(31Aug2020)
  global covidadmissioncensor1 = d(31Aug2020)
  noi summ coviddeath_date, format
  global coviddeathcensor2 = r(max) - 7
  noi summ covidadmission_date, format
  global covidadmissioncensor2 = r(max) - 7
  gen coviddeathcensor1 = $coviddeathcensor1
  gen covidadmissioncensor1 = $covidadmissioncensor1
  gen coviddeathcensor2 = $coviddeathcensor2
  gen covidadmissioncensor2 = $covidadmissioncensor2
  gen composite_date = min(coviddeath_date, covidadmission_date)
  forvalues k = 1 (1) 2 {
  gen coviddeath`k' = (coviddeath_date<.)
  replace coviddeath`k' = 0 if coviddeath_date > coviddeathcensor`k'
  replace coviddeath`k' = 0 if coviddeath_date > otherdeath_date
  gen covidadmission`k' = (covidadmission_date<.)
  replace covidadmission`k' = 0 if covidadmission_date > covidadmissioncensor`k'
  replace covidadmission`k' = 0 if covidadmission_date > coviddeathcensor`k'
  replace covidadmission`k' = 0 if covidadmission_date > coviddeath_date
  replace covidadmission`k' = 0 if covidadmission_date > otherdeath_date
  gen composite`k' = (composite_date<.)
  replace composite`k' = 0 if composite_date > covidadmissioncensor`k'
  replace composite`k' = 0 if composite_date > coviddeathcensor`k'
  format composite_date %td
  egen stime_coviddeath`k' = rowmin(coviddeath_date otherdeath_date coviddeathcensor`k')
  egen stime_covidadmission`k' = rowmin(covidadmission_date coviddeath_date otherdeath_date covidadmissioncensor`k' coviddeathcensor`k'
> )
  egen stime_composite`k' = rowmin(composite_date otherdeath_date covidadmissioncensor`k' coviddeathcensor`k')
  foreach var of varlist stime* {
  replace `var' = `var' - `index' + 1
  }
  drop coviddeathcensor`k' covidadmissioncensor`k'
  }
  if `i'==2 {
  drop coviddeath1 covidadmission1 composite1 stime_coviddeath1 stime_covidadmission1 stime_composite1
  }
  label var patient_id "Patient ID"
  label var age "Age (years)"
  label var age1 "Age spline term 1"
  label var age2 "Age spline term 2"
  label var age3 "Age spline term 3"
  label var agegroup "Grouped age"
  label var male "Male"
  label var imd "Index of Multiple Deprivation (IMD)"
  label var ethnicity_5 "Ethnicity in 16 categories"
  label var stp "Sustainability and Transformation Partnership"
  label var stpcode "Sustainability and Transformation Partnership"
  label var region_7 "Geographical region (7 England regions)"
  label var household_id "Household ID"
  label var resid_care_old "Residential care, elderly"
  label var resid_care_ldr "Residential care, learning disability"
  label var ldr "Learning disability or Down's Syndrome"
  label var ld_profound "Severe-profound learning disability or Down's Syndrome"
  label var ldr_cat "Learning disability split into mild-moderate and severe-profound"
  label var ldr_carecat "Learning disability split into residential vs non-residential setting"
  label var ds "Down's Syndrome"
  label var cp "Cerebral Palsy"
  label var bmi "Body Mass Index (BMI, kg/m2)"
  label var obese40 "Evidence of BMI>40"
  label var asthmacat "Severity of asthma"
  label var respiratory "Respiratory disease (excl. asthma)"
  label var cardiac "Heart disease"
  label var af "Atrial fibrillation"
  label var dvt "Deep vein thrombosis/pulmonary embolism"
  label var diabcat "Diabetes"
  label var tia "Transient ischemic attack"
  label var stroke "Stroke"
  label var dementia "Dementia"
  label var neuro "Neuro condition other than stroke/dementia"
  label var cancerExhaem1yr "Non haematological cancer"
  label var cancerHaem "Haematological cancer"
  label var liver "Liver disease"
  label var kidneyfn "Kidney function"
  label var transplant "Organ transplant recipient"
  label var spleen "Spleen problems (dysplenia, sickle cell)"
  label var autoimmune "RA, SLE, Psoriasis (autoimmune disease)"
  label var immunosuppression "Conditions causing permanent or temporary immunosuppression"
  label var ibd "IBD"
  label var smi "Serious mental illness"
  label var coviddeath_date "Date of ONS COVID-19 death"
  label var otherdeath_date "Date of ONS non-COVID-19 death"
  label var covidadmission_date "Date of COVID-19 hospital admission"
  label var composite_date "Date of first of COVID-19 hospital admission or death"
  local tag1 = "censored 31 Aug 20"
  local tag2 = "censored latest date"
  forvalues k = 1 (1) 2 {
  capture label var coviddeath`k' "COVID-19 death (ONS), `tag`k''"
  capture label var covidadmission`k' "COVID-19 hospital admission, `tag`k''"
  capture label var composite`k' "COVID-19 hospital admission or death, `tag`k''"
  capture label var stime_coviddeath`k' "Days from study entry until COVID-19 death or censoring, `tag`k''"
  capture label var stime_covidadmission`k' "Days from study entry until COVID-19 hospital admission or censoring, `tag`k''"
  capture label var stime_composite`k' "Days from study entry until COVID-19 hospital admission or death or censoring, `tag`k''"
  }
  sort patient_id
  order patient_id stp* region_7 imd rural household* resid_care_old resid_care_ldr ldr ldr_cat ld_profound ldr_carecat ds cp age age a
> ge1 age2 age3 agegroup child male bmi* obese* ethnicity* respiratory* asthma* cf* cardiac* diabcat* af* dvt_pe* stroke* dementia* neu
> ro* tia* cancerExhaem* cancerHaem* kidneyfn* dialysis* liver* transplant* spleen* autoimmune* immunosuppression* ibd* smi* coviddeath
> * otherdeath* covidadmission* composite*
  keep patient_id stp* region_7 imd rural household* resid_care_old resid_care_ldr ldr ldr_cat ld_profound ldr_carecat ds cp age age ag
> e1 age2 age3 agegroup child male bmi* obese* ethnicity* respiratory* asthmacat cf cardiac diabcat af dvt_pe stroke dementia neuro tia
>  cancerExhaem* cancerHaem kidneyfn dialysis liver transplant spleen autoimmune immunosuppression ibd smi coviddeath* otherdeath* covi
> dadmission* composite*
  sort patient_id
  if `i'==1 {
  label data "Analysis dataset, wave 1 (1 Mar - 31 Aug 20), for learning disability work"
  }
  else if `i'==2 {
  label data "Analysis dataset, wave 2 (1 Sept 20 - latest), for learning disability work"
  }
  save "analysis/data_ldanalysis_cohort`j'.dta", replace
  }
r(9);

end of do-file

r(9);

. di d(1sep2020)
22159

. summ covidadmission_date, format

    Variable |        Obs        Mean    Std. Dev.       Min        Max
-------------+---------------------------------------------------------
covidadmis~e |        160   18aug2020    98.41711  03mar2020  01feb2021

